[
  {
    "objectID": "03-dizgi.html",
    "href": "03-dizgi.html",
    "title": "3  Dizgi",
    "section": "",
    "text": "\\LaTeX, kelimeler arası boşlukları otomatik ayarlayarak satırları iki yana yaslayarak dizer. Bir satırı kesip yeni bir satıra geçmek için \\\\ veya \\newline komutları kullanılır.\nBirinci komut \\\\* şeklinde verildiğinde satırdan sonra sayfa kesilmesini önler.\nBenzer şeyi \\linebreak komutu da yapar. Fakat bu komut ile satır kesilirse \\LaTeX kalan yarım satırı iki yana yaslar. \\nolinebreak komutu ise satırın kesilmesini önler.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\begin{document}\n\n\\LaTeX, kelimeler arası boşlukları otomatik ayarlayarak satırları iki\nyana yaslayarak dizer. Bir satırı kesip yeni bir satıra geçmek için \\\\\nveya \\newline komutları kullanılır.\n\n\\end{document}\nBirçok kelimeyi birlikte aynı satırda tutmak gerekirse \\mbox komutu kullanılır:\n\\mbox{<metin>}\nBuradaki <metin> içindeki kelimeler her durumda birleşik kalırlar. Benzer şeyi \\fbox komutu da metin etrafına çizgi çizerek yapar.\nSayfayı kesip yeni bir sayfaya geçmek için \\newpage ya da \\pagebreak komutları kullanılır. \\nopagebreak komutu sayfa kesilmesini önler. \\newpage ile \\pagebreak komutları arasında da \\newline ile \\linebreak komutlarındakine benzer bir fark vardır."
  },
  {
    "objectID": "03-dizgi.html#heceleme",
    "href": "03-dizgi.html#heceleme",
    "title": "3  Dizgi",
    "section": "3.2 Heceleme",
    "text": "3.2 Heceleme\nBazen tüm bu ayarlamalara rağmen \\LaTeX bazı kelimeleri doğru heceleyemeyebilir. Böyle durumlarda hecelemeyi elle yapmak gerekir. Yanlış hecelenen kelimenin bölünebileceği yerler \\- komutuyla gösterilir:\nHe\\-ce\\-le\\-me\nBu sadece ilgili kelimenin tireyle ayrıldığı yerde doğru hecelenmesini sağlar. Aynı kelime belgenin başka bir yerinde yine yalnış hecelenebilir. Bunun yerine \\begin{document} komutundan sonra \\hyphenation komutuyla hece yerleri tire (-) işaretiyle gösterilmiş olan kelime listesi oluşturulursa belgenin tamamına bu kural uygulanmış olur. Örneğin\n\\hyphenation{He-ce-le-me FORTRAN}\nkomutuyla “Heceleme” kelimesinin nereden bölüneceği, “FORTRAN”, “Fortran” ya da “fortran” kelimelerinin bölünmeyeceği \\LaTeX’e söylenmiş olur."
  },
  {
    "objectID": "03-dizgi.html#paragraflar-ve-cümle-sonları",
    "href": "03-dizgi.html#paragraflar-ve-cümle-sonları",
    "title": "3  Dizgi",
    "section": "3.3 Paragraflar ve Cümle Sonları",
    "text": "3.3 Paragraflar ve Cümle Sonları\nBoş bir satırın yeni bir paragraf açtığını daha önce belirtmiştik. Aynı şey, \\par komutuyla da yapılabilir. Ancak bu komut yeni bir paragraf açmaktan ziyade farklı amaçlar için kullanılır (yeri geldiğinde değinilecektir). Nitekim kaynak dosyanızın okunabilirliği açısından paragrafları ayırmak için boş bir satır bırakmak daha kullanışlıdır.\n\\LaTeX’de varsayılan olarak \\chapter ve \\section gibi bölümleme komutlarından sonra oluşturulan ilk paragraf girintisiz, sonrakiler girintili olur. Bu, paragraf başlarında \\indent ya da \\noindent komutlarıyla tek seferliğine değiştirilebilir. Birinci komut girinti oluşturur, ikincisi ise girintiyi kaldırır.\n\\LaTeX, okumayı kolaylaştırmak için cümle sonlarında fazladan boşluklar bırakır. Bunu yaparken de her cümlenin nokta, soru işareti veya ünlem işaretiyle bittiğini varsayar. Kısaltmalarda büyük harflerden sonra nokta gel(ebil)diğinden, büyük harften sonra nokta koyulursa \\LaTeX bunu cümle sonu saymaz. Eğer bir büyük harften sonra nokta koyuyorsanız ve burası cümlenin sonuysa \\LaTeX’in burayı cümle sonu sayması için büyük harften sonraki noktanın önüne \\@ koymanız gerekir.\n\\LaTeX’in noktadan sonra fazladan boşluk koymamasını isterseniz \\frenchspacing komutunu kullanırsınız. Bu komutu kullandıysanız, artık noktadan önce \\@ koymanıza gerek yoktur. Daha sonra tekrar cümle sonlarında fazladan boşluk kullanmak istenirse de \\nonfrenchspacing komutu kullanılır.\nUnvan kısaltmasından sonra unvanın ait olduğu kelimeyle birlikte kalması ve fazladan boşluk bırakılmaması için tilda (~) işareti kullanılabilir. Bu işaret hem genişlemeyen bir boşluk bırakır hem de satırın orada kesilmesini önler."
  },
  {
    "objectID": "03-dizgi.html#aralıklar",
    "href": "03-dizgi.html#aralıklar",
    "title": "3  Dizgi",
    "section": "3.4 Aralıklar",
    "text": "3.4 Aralıklar\n\\LaTeX’de hem dikey hem de yatay aralıklar otomatik olarak ayarlanır. Fazladan aralıklar bırakmak için komutlar kullanılır.\nAralık bırakırken kullanabileceğimiz ölçü birimleri Tablo 3.1’de gösterilmiştir.\n\n\nTablo 3.1: \\LaTeX’de Ölçü Birimleri\n\n\nBirim\nDeğer\n\n\n\n\nmm\nmilimetre \\approx 1/25 inç\n\n\ncm\nsantimetre = 10 mm\n\n\nin\ninç = 25.4 mm\n\n\npt\npunto \\approx 1/72 inç\n\n\nem\nKullanılan yazı tipinde ‘M’ harfinin genişliği\n\n\nex\nKullanılan yazı tipinde ‘x’ harfinin yüksekliği\n\n\n\n\n\n3.4.1 Dikey aralıklar\nDikey aralık birkaç komutla bırakılabilir. Bunlardan biri \\vspace olup, komut iki boş satır arasında\n\\vspace{<uzunluk>}\nşeklinde verilir. Komut bu şekilde verildiğinde komutun zorunlu değişkeninde birimiyle belirtilen uzunluk kadar dikey aralık bırakılır. Eğer bir sayfanın başında veya sonunda aralık bırakılmak istenirse, komut \\vspace* şeklinde yıldızlı vermelidir. Bu komutun aralığa ilave yapan \\addvspace sürümü de vardır.\nBir paragrafın iki satırı arasında veya bir tablonun satırları arasında ilave aralık açmak için\n\\\\[<uzunluk>]\nkomutu kullanılır. Bu komutlarda belirtilen uzunluklar negatif de olabilir.\nSınırsız bir dikey aralık oluşturmak için \\vfill komutu kullanılır. Bu komuttan sonra gelen her şey sayfanın altına yaslanır.\nÖn tanımlı gelen \\smallskip, \\medskip ve \\bigskip komutları sırasıyla küçük, orta ve büyük aralıklar bırakır.\n\n\n3.4.2 Yatay aralıklar\nÖn tanımlı yatay aralıklar\n\\  \\,  \\:  \\;  \\quad  \\qquad  \\!\nkomutlarıyla verilir. Bu komutlar sırasıyla bir sözcük arası, 3/\\!18 em, 4/\\!18 em, 5/\\!18 em, 1 em, 2 em, -3/\\!18 em uzunlukta yatay aralık bırakır.\nBelli bir uzunlukta yatay aralık bırakmak için \\hspace komutu kullanılır. Yine dikey aralıkta olduğu gibi yatay aralık negatif de olabilir. Eğer aralık satır başına veya sonuna rasgelse dahi bu aralığı korumak istiyorsanız, yıldızlı \\hspace* komutu kullanırsınız.\nKomutlardan önce veya sonra boşluk bırakmak farklı sonuçlar üretir.\nSınırsız bir yatay aralık oluşturmak için \\hfill komutu kullanılır. Bu komuttan sonra gelen her şey satırın sonuna yaslanır. Hem satır sonuna yaslamak hem de aralığı noktalarla doldurmak isterseniz \\dotfill komutunu kullanırsınız. Satır sonuna yaslayıp aralığa çizgi çekmek isterseniz de \\hrulefill komutunu kullanırsınız.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\begin{document}\n\n\\noindent \nA\\\\[1ex]\nB\n\n\\bigskip\n\n\\noindent \nA\\\\[-2ex]\nB\n\n\\bigskip\n\n\\noindent \nA\\hspace{2cm}B\\\\\nA \\hspace{2cm} B\n\n\\bigskip\n\n\\noindent \nA\\hfill B\\\\\nA\\dotfill B\\\\\nA\\hrulefill B\n\n\\end{document}"
  },
  {
    "objectID": "03-dizgi.html#ortamlar",
    "href": "03-dizgi.html#ortamlar",
    "title": "3  Dizgi",
    "section": "3.5 Ortamlar",
    "text": "3.5 Ortamlar\n\n3.5.1 Metin hizalama\n\\LaTeX’de metni sola hizalamak için flushleft, sağa hizalamak için flushright ve ortalı hizalamak için center ortamları kullanılır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\begin{document}\n\n\\begin{flushleft}\n burası sola hizalı\n\\end{flushleft}\n\\begin{flushright}\n sağa hizalı\n\\end{flushright}\n\\begin{center}\n ve ortalı\n\\end{center}\n\n\n\\end{document}\n\n\n3.5.2 Sütunlara ayırma\n\\LaTeX’de belgenin tamamının iki sütun dizilmesi için \\documentclass komutunun seçeneğine twocolumn yazılabileceğinden bahsettik. Bu, tüm belgenin iki sütun dizilmesini sağlar. Bazı sayfaları iki, bazılarınıysa tek sütun dizmek istiyorsanız \\twocolumn ve \\onecolumn komutlarını kullanmanız gerekir. \\twocolumn komutunun verildiği sayfadan sonraki sayfalar iki, \\onecolumn komutunun verildiği sayfadan sonraki sayfalar tek sütun dizilir.\nEğer metni daha fazla sütuna bölmek ve sütunları istediğiniz yerden başlatmak gibi daha fazla seçenek istiyorsanız, multicols ortamını kullanmanız gerekir. Bu ortamı kullanabilmek için\n\\usepackage{multicol}\nkomutuyla multicol paketini eklemelisiniz.\n\\begin{multicols}{<sütun sayısı>}\n\n\\end{multicols}\nBurada, <sütun sayısı> değişkeninde oluşturulmak istenen sütun adedi sayıyla belirtilir.\nBu ortamda sütun genişlikleri eşit olup, sütunlar arası boşluk \\columnsep, sütunlar arasındaki çizginin kalınlığı \\columnseprule ve sütunlar arasındaki çizginin rengi \\columnseprulecolor komutlarında saklıdır. Bu değişkenler \\setlength ya da \\def komutları kullanılarak değiştirilebilir.\n\\setlength{\\columnsep}{1cm}\n\\setlength{\\columnseprule}{1pt}\n\\def\\columnseprulecolor{\\color{blue}}\nYukarıdaki birinci komutla sütunlar arasındaki boşluk 1 cm, çizgi kalınlığı 1 pt ve çizgi rengi mavi olarak düzenlenir. Bu komutlar ya sahanlığa ya da ortamı kullanmadan önce gövdeye yazılmalıdır.\n\n\n\n\n\n\nNot\n\n\n\nŞimdiye kadar renk kullanımından bahsetmedik ancak çizgi rengini değiştirmek için verilen komutun kullanılabilmesi için sahanlığa \\usepackage{xcolor} komutuyla xcolor paketinin eklenmesi gerekir.\n\n\nOrtam isteğe bağlı bir değişken de alabilir. Bu, çengelli parantezlerden sonra köşeli parantezler içine yazılır. Köşeli parantezler içinde yazılanlar bölünmeden ve çok sütunlu metnin üstünde dizilir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{multicol}\n\\usepackage{xcolor}\n\\usepackage{lipsum}% Örnek verirken anlamsız metinler oluşturmaya yarayan bir paket\n\\begin{document}\n\n\\begin{multicols}{2}\n  Bilim, yalnızca bir bilgi edinme etkinliği değildir. Onun bir\n  eylem yönünün olduğu da unutulmamalıdır.\n\\end{multicols}\n\n\\setlength{\\columnsep}{1cm}\n\\setlength{\\columnseprule}{1pt}\n\\def\\columnseprulecolor{\\color{blue}}\n\\begin{multicols}{2}\n  \\lipsum[1-2] % İki paragraf anlamsız örnek metin oluşturma komutu\n\\end{multicols}\n\n\n\\end{document}\nSütunu kesmek için \\columnbreak komutu kullanılır. Komutun verildiği yerde sütun kesilir, ardından kesme noktasından önceki paragraflar tüm kullanılabilir alanı doldurmak için eşit olarak dağıtılır. Dolayısıyla bazen beklenen sonucu vermeyebilir.\nVarsayılan multicols ortamında sütunların her biri aynı miktarda metin içerecek şekilde dengelenmiştir. Bu, ortamın yıldızlı sürümü (multicols*) kullanılarak değiştirilebilir.\n\n\n3.5.3 Listeleme\n\n3.5.3.1 Temel listeler\n\\LaTeX’de listeleme için değişik ortamlar vardır. Bu ortamlar tek başına kullanılabileceği gibi birlikte de kullanılabilirler. Her ortamda maddeler \\item komutuyla belirtilir.\nBir listeyi numaralı şekilde dizmek için enumerate ortamı kullanılır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\begin{document}\n\n\\begin{enumerate}\n \\item madde 1\n  \\begin{enumerate}\n    \\item alt madde 1\n      \\begin{enumerate}\n        \\item en alt madde 1\n      \\end{enumerate}\n    \\item alt madde 2\n  \\end{enumerate}\n \\item madde 2\n\\end{enumerate}\n\n\\end{document}\nNumarasız, özel işaretli listeler için itemize ortamı kullanılır ve bu ortamda madde işareti değiştirilebilir.\nAçıklamalı bir liste içinse description ortamı kullanılır. Bu ortamda köşeli parantez içine alınan anahtar kelimeler kalın dizilir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\begin{document}\n\n\\begin{itemize}\n  \\item madde 1\n  \\item madde 2\n  \\item[$\\circ$] madde 3\n  \\item[+] madde 4\n\\end{itemize}\n\n\\begin{description}\n  \\item[Nokta] Boyutu olmayan\n  \\item[Çember] Bir noktaya eşit\n  uzaklıktaki noktaların geometrik yeri\n\\end{description}\n\\end{document}\n\n\n3.5.3.2 Listeleri özelleştirmek\nListelerin özelleştirmek için enumerate paketi kullanılabilir. Paketi \\usepackage{enumerate} komutuyla ekledikten sonra enumerate ortamını başlatan komutun peşine köşeli parantezler içinde madde işaretlerinin tipi belirtilebilir:\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{enumerate}\n\\begin{document}\n\n\\begin{enumerate}[I.]\n \\item bir\n \\item iki \n \\item üç\n\\end{enumerate}\n\n\\end{document}\nBunun dışında çok daha fazla özelleştirmeye izin veren enumitem paketi vardır. Dileyen okur paket belgesini inceleyip listelerini özelleştirebilir.\n\n\n\n3.5.4 Özet\nMakalenize (article) özet koymak isterseniz abstract ortamını kullanırsınız.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\begin{document}\n\n\\begin{abstract}\n  Bu çalışmada\\dots\n\\end{abstract}\n\n\\end{document}\n\n\n3.5.5 Yazıldığı gibi basma\nBir metin, nasıl yazıldıysa, yani boşluklar ve \\LaTeX komutları işleme konmadan olduğu gibi dizilmesi isteniyorsa verbatim ortamında yazılır.\nSatır içinde aynı şey yapmak istenirse \\verb komutu \\verb|<metin>| şeklinde kullanılır.\nEğer verbatim ortamı yıldızlı (verbatim*) şeklinde kullanılırsa boşluklar özel bir işaretle gösterilir. Aynı şeyi \\verb* komutu da yapar.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\begin{document}\n\n\\begin{verbatim}\n  Nasılsa öyle! # \" ~\n\\end{verbatim}\n\n\\verb|\\$| komutuyla \\$ olur.\n\n\\begin{verbatim*}\n  Boşluklar özel bir işatretle\n  gösterilir.\n\\end{verbatim*}\n\n\\verb*|aynı şekilde.|\n\n\n\\end{document}\n\n\n3.5.6 Başlık sayfası (kapak)\nBaşlık sayfası için titlepage ortamı kullanılır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\begin{document}\n\n\\begin{titlepage}\n  \\begin{center}%ortalı\n\n  \\vspace*{\\baselineskip}%boşluk\n\n  {\\Large Yazar adı}\n\n  \\vspace*{2cm} %boşluk\n\n  \\textbf{\\LARGE İlk başlık satırı}\\\\[\\baselineskip]\n  {\\Huge Ana Başlık}\\\\[\\baselineskip]\n  {\\Large \\textit{Alt başlık }}\n\n  \\vfill %sonra gelenlerisayfa altına yasla\n\n  {\\large Yayıncı}\n\n  \\vspace*{3\\baselineskip}%boşluk\n\n  \\end{center}\n\\end{titlepage}\n\n\\end{document}\nBaşlık bu şekilde oluşturulduğunda bu sayfada numara basılmaz ve bu sayfa bir numaralı sayfa olur. Ayrıca, \\maketitle komutuyla oluşturulan başlıktan farklı olarak sayfadaki her şeyi dilediğiniz gibi biçimlendirebilirsiniz.\n\n\n3.5.7 Alıntı yapma ve şiir dizme\n\\LaTeX’de kısa alıntılar için quote, çok paragraflı uzun alıntılar için quotation, şiir dizmek içinse verse ortamı kullanılır. quotation ortamında her paragrafın ilk satırı içerden başlar. verse ortamında şiir satırları \\\\ komutuyla sonlandırılır ve kıtalar arası boş bir satır bırakılır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\begin{document}\n\nMarx, Kapital'e şöyle başlar:\n\\begin{quote}\n  Kapitalist üretim tarzının egemen olduğu toplumların zenginliği,\n  `muazzam bir meta yığını' olarak görünür; bunun basit biçimi tek\n  bir metadır. Bu nedenle, incelememiz, metanın analiziyle başlıyor.\n\\end{quote}\n\nŞimdi Cemal Süreya'nın \\emph{Bu Bizimki} şiiriyle devam edelim:\n\n\\begin{verse}\n  Yıkıcı bir aşk bu,\\\\\n  Yıkıyor milletin ortasına\\\\\n  Tutku yükünü.\n\n  Bölücü bir aşk,\\\\\n  \\dots\n\\end{verse}\n\n\\end{document}"
  },
  {
    "objectID": "03-dizgi.html#yazıtipleri",
    "href": "03-dizgi.html#yazıtipleri",
    "title": "3  Dizgi",
    "section": "3.6 Yazıtipleri",
    "text": "3.6 Yazıtipleri\n\n3.6.1 Giriş\nYazıtipi konusu kodlama, aile, biçem ve boyut olmak üzere dört alt başlıkta incelenebilir. Kodlama çok teknik bir konu olup amacımız dışındadır, ancak sadece şunu belirtelim ki kodlama işini \\LaTeX’de daha önce bahsettiğimiz fontenc paketi üstlenir. Bu paketi belgenize eklemiş olduğunuzu varsayarak devam edeceğiz.\nBu yazıda anlatacağımız şeylerden bazıları bir bakıma \\LaTeX’in felsefesine aykırı olacak. Nitekim \\LaTeX, \\documentclass komutunda belirtilen ana yazıtipi boyutuna göre, dipnot ya da başlık gibi ana yazıtipi boyutundan farklı dizilen şeylerin boyutunu olabilecek en güzel ve doğru şekilde ayarlar.\n\n\n3.6.2 Aile\nYazıtipleri Roman ya da Serif, Sans Serif ve Typewriter olmak üzere üç ailede toplanabilir. Roman ailesi tırnaklı ya da süslü diyebileceğimiz yazıtiplerini, Sans Serif ailesi tırnaksız ya da süssüz yazıtiplerini ve Typewriter ailesi de daktilo yazıtiplerini barındırır.\n\\LaTeX’de her belge sınıfı varsayılan yazıtipi ailesiyle gelir. beamer sınıfının varsayılan ailesi Sans Serif olup, diğer sınıfların varsayılan ailesi Roman’dır.\nVarsayılan aile \\familydefault komutunda saklı olup, \\renewcommand komutuyla değiştirilebilir.\n\\renewcommand{\\familydefault}{\\rmdefault}  \n\\renewcommand{\\familydefault}{\\sfdefault}  \n\\renewcommand{\\familydefault}{\\ttdefault} \nBirinci komut sahanlığa yazılırsa, belge sınıfından bağımsız olarak varsayılan aile Roman, ikincisi yazılırsa Sans Serif, üçüncüsü yazılırsa Typewriter olur.\nEğer belgenin tamamının değilde bazı kelime ya da cümlelerin farklı aileden yazılması istenirse –ki genelde böyle kullanılır– aşağıdaki komut ya da bildirimler kullanılır.\n\n\n\nKomut\nBildirim\nAile\n\n\n\n\n\\textrm\n\\rmfamily\n\\textrm{Roman (Serif)}\n\n\n\\textsf\n\\sffamily\n\\textsf{Sans Serif}\n\n\n\\texttt\n\\ttfamily\n\\texttt{Typewriter}\n\n\n\n\\LaTeX’de varsayılan yazıtipi Computer Modern olup, ek bir pakete ihtiyaç duymadan kullanılabilecek yazıtipleri aşağıda gösterilmiştir.\n\n\n\nRoman Yazıtipleri\n\n\n\n\n\nSans Serif Yazıtipleri\n\n\n\n\n\nTypewriter Yazıtipleri\n\n\n\n\n\n\nElyazısı\n\n\nVarsayılan yazıtipleri \\rmdefault, \\sfdefault ve \\ttdefault komutlarında saklı olup, \\renewcommand komutuyla değiştirilebilirler.\n\\renewcommand{\\rmdefault}{<kısaltma>}\nBurada <kısaltma>, tablolarda belirtilen kısaltmalardır. Örneğin\n\\renewcommand{\\rmdefault}{put}\nkomutu sahanlığa yazıldığında, eğer varsayılan aile Roman ise belgenizin ana yazıtipi Utopia olur.\nEğer tüm belgenin değil, bazı kelime ya da cümlelerin farklı yazıtipinde yazılması istenirse \\fontfamily komutuyla \\selectfont komutu birlikte aşağıdaki şekilde kullanılır.\n{\\fontfamily{pbk}\\selectfont Bookman yazıtipi.} Ana yazıtipi.\nVarsayılan yazıtipi paket ekleyerek de değiştirilebilir. Bu hem pratiktir hem de bazı paketler matematiksel ifadelerin yazıtipine de etki eder. Bu paketlerin bazıları tabloda gösterilmiştir.\n\n\n\nYazıtipi değiştiren paketler\n\n\nBunların dışında beğenebileceğiniz birçok yazıtipini \\LaTeX Yazıtipi Kataloğu’nda bulabilirsiniz.\n\n\n3.6.3 Biçem\nMetin içinde kelimeleri bazen italik bazen de kalın dizmek isteyebilirsiniz. Bu değişimler aşağıdaki tablodaki komut ya da bildirimlerle yapılır.\n\n\n\nYazıtipi Biçemleri\n\n\nİzleyen kelime \\textit{italik} \nharflerle yazılmıştır.\nMetnin geri kalan kısmı\nnormaldir.\nİzleyen ifade {\\slshape {\\bfseries eğik kalındır}}.\nİzleyen ifade \\textit{\\textbf{italik kalın}}, ama bu\n\\textsc{\\textit{büyük küçük harf değil}}.\nEğer vurgulu metin içinde bazı kelimeler tekrar vurgulanırsa bu kelimeler normale döner.\n{\\em Vurgulu metinde tekrar\nvurgu yapılırsa {\\em normale}\ndöner.}\n\\LaTeX’de vurgu yukarıdaki gibi yapılsa da altını çizerek vurgu yapmak isteyen olabilir. Kuyruklu harflerin altı çizildiğinde varsayılan satır aralığı değiştiğinden vurguyu bu şekilde yapmamanız daha doğrudur. Ancak illa altını çizmek isterseniz \\underline komutunu kullanabilirsiniz.\n\n\n3.6.4 Boyut\nYazıtipi boyutunu değiştirmek için aşağıdaki bildirimler kullanılır.\n\n\n\nYazıtipi Boyutu Değiştiren Bildirimler\n\n\n{\\Large Büyük} ve\n{\\scriptsize küçük} harfler.\nBu bildirimlerin aynı zamanda satır aralığını da değiştirdiğine dikkat edilmelidir. Aşağıdaki iki örnekte, \\par (paragraf) komutunun verdiğiniz yere bağlı olarak farklı sonuçlar ürettiği gösterilmiştir. Doğru kullanım ikincisidir.\n{\\large \nSokrates: Platon\nyalan söyleyecek\naşağıdaki cümlede.}\\par\n\n{\\large Platon: Sokrates\ndoğruyu söyledi\nönceki cümlede.\\par}\n\nBu bildirimlerin etkisi belge ana yazıtipi boyutuna bağımlıdır. Mutlak boyutlar aşağıdaki tabloda gösterilmiştir.\n\n\n\nYazıtipleri Mutlak Boyutları\n\n\nBağımsız bir yazıtipi boyutu elde etmek için \\fontsize ile \\selectfont komutları birlikte kullanılır.\n{\\fontsize{<boyut>}{<aralık>}\\selectfont <metin>}\nBuradaki <boyut> yazıtipi boyutu, <aralık> ise satır aralığıdır. İkisinin de ölçü birimi punto (pt) olup, temel kural, aralığın boyutun 1.2 katı olmasıdır.\n{\\fontsize{30}{36}\\selectfont\nYazı tipi boyutu 30 punto,\nsatır aralığı 36 punto.}\nAna yazıtipi boyutu \\normalsize komutunda saklı olup, \\renewcommand komutuyla değiştirilebilir.\n\\renewcommand{\\normalsize}{\\fontsize{30}{36}\\selectfont}\nYukarıdaki komutu sahanlığa yazarsanız belgenizin ana yazıtipi boyutu 30 pt, satır aralığı ise 36 pt olur."
  },
  {
    "objectID": "03-dizgi.html#renk-kullanma",
    "href": "03-dizgi.html#renk-kullanma",
    "title": "3  Dizgi",
    "section": "3.8 Renk Kullanma",
    "text": "3.8 Renk Kullanma\n\\LaTeX’de renkler color ya da xcolor paketleriyle kullanılır. İkinci paket daha güçlüdür.\n\\usepackage{xcolor}\nkomutuyla paketi ekledikten sonra \\color ya da \\textcolor komutları aşağıdaki şekillerde kullanılır.\n\\color{red}{Kırmızı}\\\\\n{\\color{blue} Tamamı mavi}\\\\\n\\textcolor{pink}{Pembe}\nKullanılabilecek renk adları black, white, gray, darkgray, lightgray, brown, red, green, blue, cyan, magenta, lime, olive, orange, pink, purple, teal, violet ve yellow’dur.\nEğer \\documentclass komutunun seçeneğine divpsnames yazılırsa aşağıdaki renkler de kullanılabilir duruma gelir.\n\n\n\nŞekil 3.1: dvipsnames seçeneğiyle gelen renkler\n\n\nBunlar da yeterli gelmiyorsa seçeneklere bir de svgnames yazın ve buradaki yüzden fazla rengi kullanılabilir duruma getirin.\n\\documentclass[svgnames,dvipsnames]{article}\n\n3.8.1 Yeni renkler oluşturmak\n\\LaTeX’in size hazır olarak verdiği renkler yeterli gelmezse kendi renklerinizi oluşturabilirsiniz. Bu, iki şekilde yapılabilir.\nHazır renkler istenilen oranlarda karıştırılarak yeni renkler elde edilebilir. Aşağıda karışımın nasıl hazırlanabileceği gösterilmiştir.\n\\color{blue!80}{\\%80 mavi \\%20 beyaz}\\\\\n\\color{red!40!blue}{\\%40 kırmızı \\%60 mavi} \\\\\n{\\color{yellow!20!green!75!black} \\%20x0.75=15 sarı\n\\%(100-20)x0.75=60 yeşil \\%100-75=25 siyah}\n\nİkinci yol \\definecolor komutuyla renk modelleri kullanmaktır.\n\n(#tab:renkmod) Renk Modelleri\n\n\n\n\n\n\nModel\nAçıklama\n\n\n\n\ngray\nGrinin tonları (0-1). 0 (siyah), 1 (beyaz). Yani 0.95 çok açık gri, 0.30 koyu gri olur.\n\n\nrgb\nRed, Green, Blue (0-1). Üç renk (kırmızı, yeșil, mavi) 0 ile 1 arasında bir sayıyla temsil edilir.\n\n\nRGB\nRed, Green, Blue (0-255). Üç renk (karmızı, yeșil, mavi) 0 ile 255 arasında bir sayıyla temsil edilir.\n\n\nHTML\nRed, Green, Blue (OO-FF). Kodlar RRGGBB şeklinde verilir.\n\n\ncmyk\nCyan, Magenta, Yellow, Black (0-1). Dört renk (camgöbeği, eflatun, sarı, siyah) 0 ile 1 arasında bir sayıyla temsil edilir.\n\n\n\nKomut\n\\definecolor{<isim>}{<renk modeli>}{<kod>}\nşeklinde verilir. Burada <isim>, sizin daha sonra kullanmak üzere vereceğiniz bir isimdir. Kodlar için HueSnap adresinden yararlanabilirsiniz. Örneğin\n\\definecolor{renk1}{gray}{0.50}\n\\definecolor{renk2}{rgb}{1,0.7,0.3}\n\\definecolor{renk3}{RGB}{125,32,200}\n\\definecolor{renk4}{HTML}{CC33CC}\n\\definecolor{renk5}{cmyk}{0,0.7,1,0.5}\nkomutlarıyla renk1, renk2, renk3, renk4 ve renk5 adında beş adet renk tanımlanmış olur. Bu komutlar ya sahanlığa ya da bu renkleri kullanacağınız satırdan önce gövdeye yazılmalıdır.\nYeni oluşturduğunuz rengi tek seferlik kullanacaksanız\n\\color[<model>]{<kod>}\n\\textcolor[<model>]{<kod>}{<metin>}\nkomutlarını kullanabilirsiniz.\n{\\color[RGB]{102,0,51} Bol}\\\\\n\\textcolor[RGB]{0,76,153}{Çeşit bol}\nMetnin arka planını renklendirmek için \\colorbox komutu kullanılır. Benzer \\fcolorbox komutu aynı şeyi çizgi çizerek yapar.\n\\colorbox{<arka plan rengi>}{<metin>}\n\\colorbox[<renk modeli>]{<arka plan rengi>}{<metin>}\n\\fcolorbox{<çizgi rengi>}{<arka plan rengi>}{<metin>}\n\\fcolorbox[<renk modeli>]{<çizgi rengi>}{<arka plan rengi>}{<metin>}\nKomutlar yukarıda gösterildiği şekilde kullanılabilir.\n\\colorbox{Cyan}{Metin}\n\\colorbox[rgb]{0.4,0.4,0.5}{Metin}\n\\fcolorbox{red}{yellow}{Metin}\n\\fcolorbox[RGB]{0,0,0}{255,204,255}{Metin}\nSayfaları renklendirmek için ise \\pagecolor komutu kullanılır. Komutun zorunlu değişkeninde renk belirtilir. Tekrar normale (beyaz) dönmek için \\nopagecolor komutu kullanılır. Eğer bu işe yaramazsa \\pagecolor{white} komutunu kullanabilirsiniz."
  },
  {
    "objectID": "01-temeller.html",
    "href": "01-temeller.html",
    "title": "1  Temeller",
    "section": "",
    "text": "\\TeX, birçok matematiksel ve teknik ifade içeren belgeleri yüksek kaliteli çıktı ile üretmek için Stanford Üniversitesi’nden Profesör Donald E.Knuth tarafından, başlangıçta “Bilgisayar Programlama Sanatı” adlı kitap serisinin hazırlanması için tasarlanmış bir dizgi programıdır. Teknik kitaplar ve makaleler üreten birçok yazar ve yayıncı tarafından benimsenmiştir. \\TeX, Knuth tarafından ücretsiz olarak kullanıma sunulmuştur."
  },
  {
    "objectID": "01-temeller.html#latex",
    "href": "01-temeller.html#latex",
    "title": "1  Temeller",
    "section": "1.2 \\LaTeX",
    "text": "1.2 \\LaTeX\n\\LaTeX (La(mport)\\TeX), Leslie Lamport tarafından \\TeX üzerine kurulmuştur. Amacı \\TeX’i daha işlevli ve kolay hale getirmektir.\nGünümüzde Frank Mittelbach liderliğinde bir grup programcı tarafından geliştirilmektedir."
  },
  {
    "objectID": "01-temeller.html#temel-farklılıklar",
    "href": "01-temeller.html#temel-farklılıklar",
    "title": "1  Temeller",
    "section": "1.3 Temel Farklılıklar",
    "text": "1.3 Temel Farklılıklar\n\\LaTeX, genelde WYSIWYG (Ne Görüyorsan Onu Alırsın) editörleriyle karşılaştırılır. WYSIWYG, Microsoft Word, Libreoffice Writer gibi kelime işlemcilere ya da Adobe Indesign gibi programlara verilen genel bir isimdir. Hepsinin ortak özelliği, girdi ile çıktının aynı anda ve birlikte görünmesidir.\n\\LaTeX’de girdi ve çıktı ekranı farklıdır ve çıktıyı görmek için girdinin derleme işleminden geçmesi gerekir. \\LaTeX’in zor gibi görünmesinin bir nedeni de komutlarla çalışmasıdır. Gerçekten de WYSIWYG programlarına alışkın bir kullanıcı için bu süreç başlangıçta biraz sıkıcı ve zor olabilir. Ancak belli bir aşamaya geldiğinizde komutlarla çalışmanın aslında işleri kolaylaştırdığını göreceksinizdir. Örneğin \\LaTeX’le binlerce sayfadan oluşan bir kitabın içindekiler tablosunu oluşturmak için sadece \\tableofcontents komutunu girersiniz ve \\LaTeX bu komutu girdiğiniz yere içindekiler tablosunu hatasız bir şekilde yazdırır. Ayrıca örnekte görüldüğü gibi \\LaTeX komutları doğal dile1 oldukça yakındır.\nBir metnin genel görünümü ve okunabilirliği, metnin nasıl hizalandığından ve kesildiğinden büyük ölçüde etkilenir. \\LaTeX, tüm paragraf için hizalamayı ve kesmeleri optimize eden son derece gelişmiş \\TeX algoritmalarını kullanır. Kelime işlemciler ve diğer programlar, satır başına çalıştıkları için oldukça yetersiz kalırlar. Bu, diğer şeylerin yanı sıra düzensiz aralıklara ve birçok kısa çizgiye sebep olur. Sonuçları görmeniz için Microsoft Word 2008 (Mac), Adobe InDesign CS4 ve \\LaTeX’le dizilmiş bir metni şuradan inceleyebilirsiniz.\nSonuç, \\LaTeX’in diğer programların her ikisinden de üstün olduğunu açıkça gösterir: iki kat daha az tireleme kullanır ve yine de sözcük aralığındaki varyasyon, Word veya InDesign’dan belirgin şekilde daha azdır. \\LaTeX’te çok büyük sözcük aralığı içeren satırlar oluşmaz."
  },
  {
    "objectID": "01-temeller.html#neden-latex",
    "href": "01-temeller.html#neden-latex",
    "title": "1  Temeller",
    "section": "1.4 Neden \\LaTeX",
    "text": "1.4 Neden \\LaTeX\n\\LaTeX’i kullanmaya karar vermeniz için birkaç neden:\n\nÜcretsizdir ve tüm işletim sistemlerinde düşük donanım gereksinimleriyle çalışır.\nBasit bir metin editörüyle bile kaynak dosyanızı düzenleyebilirsiniz.\nHer sürüm bir önceki sürümü içerdiğinden şimdi hazırladığınız bir belgeyi on yıl sonra da kullanabilirsiniz, hiçbir zaman “Dosya bu sürümle uyumlu değil’’ biçiminde bir uyarıyla karşılaşmazsınız.\nBir belgedeki biçim veya metni diğer bir belgeye kolaylıkla taşıyabilir ve düzenleyebilirsiniz. Bu, internetten bulabileceğiniz binlerce şablonu kullanabileceğiniz anlamına gelir.\nBelgenizi \\LaTeX biçimlendirir, siz sadece içeriğe odaklanırsınız.\nDipnot koymak, atıf yapmak, kaynakça, dizin ve içindekiler tablosu oluşturmak işten bile sayılmaz.\nMatematiksel formüller kullanacaksanız, bu \\LaTeX’in en güçlü olduğu konudur. Formülleri belgenize adeta inci dizer gibi dizer.\nÇok yaygındır. Uluslararası bir çok yayınevi (örneğin Springer) ve dergi yazarlardan \\LaTeX dosyalarını talep eder."
  },
  {
    "objectID": "01-temeller.html#önemli-yapılar",
    "href": "01-temeller.html#önemli-yapılar",
    "title": "1  Temeller",
    "section": "1.5 Önemli Yapılar",
    "text": "1.5 Önemli Yapılar\n\n1.5.1 Komutlar\n\\LaTeX komutları bir geribölü (\\) işaretiyle başlar ve ya sadece harflerden ya da bir tane harf olmayan karakterden oluşurlar. Komut yazıldıktan sonra ya boşluk, ya bir sayı ya da harf olmayan bir karakter gelebilir.\nÇoğu komut, zorunlu değişken alır. Bu zorunlu değişken komut adından sonra çengelli parantezler içine yazılır. Zorunlu değişken alan komutlar, zorunlu olmayan (isteğe bağlı) değişkenler de alabilir, bunlar da komut adından sonra gelen köşeli parantezler içine yazılırlar. Eğer değişkenler birden fazlaysa aralarına virgül koyularak ayrılır.\n\\:\n\\LaTeX\n\\item[...]\n\\emph{...}\n\\subfloat[...][...]{...}\n\\raisebox{...}[...][...]{...}\n\\multicolumn{...}{...}{...}\n{\\bfseries ...}\nFikir vermesi açısından yukarıda dokuz adet komut örneği verilmiştir. Birinci komut bir tane harf olmayan karakterden oluşan bir komuttur. İkincisi, değişkeni olmayan bir komuttur. Bazı harflerin büyük bazılarınınsa küçük olması komutların büyük-küçük harfe duyarlı olduğunu gösterir. Dokuzuncu komut ise bildirim şeklinde verilmiştir.\n\n\n1.5.2 Paketler\n\\LaTeX’de bazı özelliklerin (renkli yazmak, şekil eklemek vb.) kullanılabilmesi için kaynak dosyaya bazı paketlerin eklenmesi gerekir. Bu, \\usepackage komutuyla yapılır. Bu komutun zorunlu değişkenine paket adı, zorunlu olmayan kısmına ise paket seçenekleri yazılır:\n\\usepackage[<seçenekler>]{<paket adı>}\nBu komutla paketin kaynak dosyaya eklenmesi \\TeX dağıtımıyla sisteminize kurulmuş olan paketin belgeye çağrılarak işe koşulması demektir.\n\n\n1.5.3 Ortamlar\n\\LaTeX’de ortamlar önemli bir yer tutar. Örneğin document bir ortamdır. Ortamları birden fazla ögeye uygulanan komutlar olarak düşünebiliriz.\nBir ortam \\begin komutuyla başlayıp \\end komutuyla biter. Her iki komutun zorunlu değişkeni ortamın adıdır:\n\\begin{<ortam adı>}\n ...\n\\end{<ortam adı>}\n\n\n1.5.4 Gruplar\nGruplar, ortam benzeri yapılardır. Grup \\begingroup komutuyla başlar ve \\endgroup komutuyla biter. Grubun içinde kullanılan bir bildirim sadece gruba uygulanır.\n\n\n1.5.5 Boşluklar\n\\LaTeX’de belgenizin metnini oluştururken ister klavyedeki Space, ister Tab tuşu ile boşluk bırakın, bu boşluklar \\LaTeX tarafından bir karakter boşluk olarak algılanır. Arka arkaya çok sayıda boşluk bırakılsa da \\LaTeX bunu tek bir boşluk olarak algılar.\nBütün bir satırın boş bırakılması \\LaTeX tarafından paragraf başı olarak algılanır. Arka arkaya boş bırakılan çok sayıda boş satır \\LaTeX tarafından tek bir boş satır yani paragraf başı olarak algılanır.\n\\documentclass{article}\n \\begin{document}\n    İster bir boşluk, isterseniz de çok         sayıda boşluk bırakın.\n    İkisi de bir boşluk gibi işlem görür. Değişen bir şey yok.\n\n    Ayrıca boş bir satır yeni paragraf demektir, burada olduğu gibi.\n \\end{document}\nKomutlardan sonra gelen boşlukları \\LaTeX dikkate almaz. Komuttan sonra gerçekten bir boşluk bırakmak için, ya {} ve ardından boşluk girilir ya da komut adından sonra özel bir boşluk komutu kullanılır.\n\\documentclass{article}\n \\begin{document}\n    \\LaTeX  boşluk yok.\\\\\n    \\LaTeX{} boşluk var.\\\\\n    \\LaTeX\\ boşluk komutuyla  boşluk.\n \\end{document}\n\n\n1.5.6 Yorum satırları\nYazar, kaynak dosyada, baskıda gözükmeyecek, kendine hatırlatma yapmak amacıyla yorumlar eklemek isteyebilir. Bunun için % sembolü kullanılır. \\LaTeX, bu sembolü gördüğü anda, o satırın geri kalanındaki her şeyi işlemeden bırakır ve bir sonraki satırın başına geçip devam eder.\n\\documentclass{article}\n \\begin{document}\n  Yaz, % sonrası yok.\n  devamı burada.\n \\end{document}\nEğer daha uzun yorumlar eklemek istenirse \\usepackage{verbatim} komutuyla verbatim paketini ekledikten sonra yorum comment ortamında yazılır.\n\\documentclass{article}\n\\usepackage{verbatim}\n \\begin{document}\n  Yorum eklemenin başka bir yolu da\n    \\begin{comment}\n        Buraya uzun yorumlarınızı\n        ekleyebilirsiniz. Burası\n        baskıda gözükmeyecektir.\n    \\end{comment}\n budur.\n \\end{document}\n\n\n1.5.7 Özel amaçlı karakterler\nAşağıdaki karakterlerin herbiri \\LaTeX’de özel bir amaç için kullanılır. Dolayısıyla bu karakterleri doğrudan kullanmak istenmeyen sonuçlara yol açabilir.\n# $ %   &   {   }   ~  ^  _ \\\nBu karakterleri çıktıda elde etmek isterseniz, sondaki hariç, başına bir geribölü koymanız gerekir. Sondaki için, yani bir geribölü sembolü elde etmek içinse \\textbackslash komutunu kullanabilirsiniz. Eğer \\\\ komutunu verirseniz yeni bir satır başlatmış olursunuz.\nÖrneğin ($) karakteri matematik kipini açma ve kapatmaya yarar. (&) karekteri tablo ve benzeri yapılarda dikey hizalama yapmak için veya sütun ayracı olarak kullanılır. Çengelli parantezlerden ve yüzde sembolünden bahsettik. (#) karakteri yeni komutlar tanımlamakta kullanılır. Tilda (~) ise genişlemeyen bir boşluk yaratmak için kullanılır. (^) ve (_) karakterleri de matematikte üst ve alt indis yazmak için kullanılır. Her birinin kullanımlarından yeri geldiğinde tekrar bahsedeceğiz."
  },
  {
    "objectID": "01-temeller.html#kurulum",
    "href": "01-temeller.html#kurulum",
    "title": "1  Temeller",
    "section": "1.6 Kurulum",
    "text": "1.6 Kurulum\n\\LaTeX’i kurmak için ilk olarak bir \\TeX dağıtımı edinmeniz gerekir. Dağıtımlar, dizgi sistemini ve \\LaTeX’de belge oluşturabilmek için gereken paketleri içerir.\nİkinci ihtiyaç duyacağınız şey bir \\LaTeX editörüdür. Edindiğiniz \\TeX dağıtımları genelde bir \\LaTeX editörüyle birlikte gelir. Tabi editör kişisel bir tercihtir ve bir \\LaTeX editörü yerine basit bir metin editörü kullanabilirsiniz. Ancak farklı işletim sistemleri için birçok iyi \\LaTeX editörü vardır ve bunların kod vurgulama, otomatik tamamlama, otomatik belge oluşturma gibi \\LaTeX’e özgü işlevleri vardır. Dolayısıyla \\LaTeX’de yeniyseniz bir editör kullanmanızı tavsiye ederiz.\n\n1.6.1 GNU/Linux\nLinux sistemlere MiKTeX ya da TeX Live kurulabilir. MiKTeX’in indirme sayfasında Ubuntu, Mint, Debian, Fedora, CentOS ve openSUSE gibi Linux dağıtımlarında nasıl kurulacağı anlatılmıştır. TeX Live ise tüm popüler Linux dağıtımlarının depolarında mevcut olup, paket yöneticisi ya da komut satırı yardımıyla kurulabilir. Örneğin Ubuntu, Debian, Mint, Pardus gibi .deb uzantılı paketlerin kullanıldığı dağıtımlarda\nsudo apt-get install texlive-base\nkomutuyla temel kurulum,\nsudo apt-get install texlive-full\nkomutuyla da tam kurulum yapılır.\n\n\n1.6.2 Mac OS\nMac OS kullanıcıları için iki seçenek mevcuttur: MiKTeX ya da MacTeX. MiKTeX kurulumu için .dmg uzantılı, MacTeX içinse .pkg uzantılı dosya indirilir ve standart kurulum yapılır.\n\n\n1.6.3 Windows\nWindows için aşağıdaki dağıtımlardan birini kurabilirsiniz.\n\nMiKTeX\nTeX Live\nproTeXt\n\nMiKTeX veya TeX Live dağıtımını kurarsanız sisteminize TeXworks editörü de kurulur. proTeXt dağıtımı MiKTeX tabanlı bir dağıtım olup, tüm paketleri içerir ve beraberinde TeXstudio editörüyle gelir.\n\n\n1.6.4 \\LaTeX editörleri\nHangi editörü kullanacağınıza birkaç deneme yaptıktan sonra karar verebilirsiniz. Burada en çok beğenilen editörler listelenmiş.\nHer \\LaTeX editöründe olan özelliklerin (otomatik kod tamamlama vb.) yanı sıra kullanıcı dostu arayüzü, yüzde yüze yakın Türkçe desteği, ücretsiz oluşu ve her üç sistemde de çalışabilmesinden dolayı TeXstudio’yu tavsiye ediyoruz. Karar sizin.\n\n\n1.6.5 Çevrimiçi editörler\n\\LaTeX’i hiçbir kurulum yapmadan çevrimiçi de kullanabilirsiniz. Aşağıda üç tanesi listelenmiştir.\n\nOverleaf\nPapeeria\n\\LaTeX Base\n\nEn popüler olanı Overleaf olup, sayfasında beğenebileceğiniz binlerce şablon ve \\LaTeX kullanımına yönelik anlatımlar bulunur."
  },
  {
    "objectID": "02-ilkadimlar.html",
    "href": "02-ilkadimlar.html",
    "title": "2  İlk Adımlar",
    "section": "",
    "text": "\\LaTeX’in varsayılan dosya uzantısı .tex’tir. Bu basit bir metin dosyası olup, \\LaTeX editörleriyle oluşturulup düzenlenebileceği gibi basit bir metin editörüyle de düzenlenebilir.\nBir belge hazırlamaya başlamak için verilecek ilk komut \\documentclass[...]{...} olup, çengelli parantezler arasına oluşturmak istediğiniz belgenin sınıfı yazılır. Köşeli parantezlerin içine de isteğe bağlı bazı değişkenler yazılabilir. Eğer bu kısım boş bırakılırsa \\LaTeX varsayılan değerleri alacaktır. Bu komutun ardından sırasıyla \\begin{document} ve \\end{document} komutları verilerek belge ortamı oluşturulur. \\end{document} komutuyla \\LaTeX’e belgenin bittiği söylenmiş olur ve \\LaTeX bu komuttan sonra girilenleri dikkate almaz.\n\\documentclass komutuyla \\begin{document} komutu arasına sahanlık denir. Sahanlık, belgenin ayarlarının yapıldığı kısımdır ve bu kısım çıktıda görünmez. \\begin{document} ile \\end{document} arasına da gövde denir. İçerik burada oluşturulur.\nAşağıda asgari bir \\LaTeX kaynak dosyası gösterilmiştir. \\documentclass komutunun değişkeni olan article, belgenin makale olacağını belirtir.\n\\documentclass{article}\n\\begin{document}\n  İşte ilk belgem.\n\\end{document}\nBu noktadan sonra örnek kaynak dosyayı \\LaTeX editörünüzünde oluşturup önceden oluşturduğunuz bir dizine kaydedin. Kaydederken dosya adında boşluk ve Türkçe karakter kullanmayın. Örneğin kaynak dosyanız belge1.tex olsun.\nİkinci aşama kaynak dosyanın derlenmesidir. Derleme işlemi için \\LaTeX editörlerinde genelde araç çubuğunda oklar bulunur. Oka tıklandığında dosya derlenir ve sonuç, çıktı ekranında görünür.\nEğer metin editörü kullanıyorsanız derlemeyi uçbirimde (terminal, konsol,…) yapmanız gerekir. Derleme için uçbirim kaynak dosyanın olduğu dizinde açılıp\npdflatex belge1\nkomutu verilmelidir.\nDerleme işleminden sonra kaynak dosyanızın olduğu dizinde belge1.tex ve belge1.pdf dosyalarının yanında yine belge1 ile başlayan farklı uzantılara sahip dosyalar olacaktır. Bu dosyaların ne olduklarına ilerleyen yazılarda değinilecektir ancak dileyen okur Oetiker vd. (2006)’e bakabilir."
  },
  {
    "objectID": "02-ilkadimlar.html#ch-belgesinifi",
    "href": "02-ilkadimlar.html#ch-belgesinifi",
    "title": "2  İlk Adımlar",
    "section": "2.2 Belge Sınıfları ve Seçenekleri",
    "text": "2.2 Belge Sınıfları ve Seçenekleri\nBaşka sınıflar olmakla birlikte \\LaTeX’de varsayılan olarak kullanılan beş belge sınıfı vardır (Tablo 2.1).\n\n\nTablo 2.1: \\LaTeX’de Belge Sınıfları\n\n\n\n\n\n\nSınıf\nAçıklama\n\n\n\n\narticle\nMakale\n\n\nreport\nMakaleden daha hacimli belgeler için kullanılır. Rapor, tez gibi\n\n\nbook\nKitap\n\n\nletter\nMektup\n\n\nbeamer\nSunu\n\n\n\n\nBu beş sınıftan article, report ve book için kullanılabilecek seçenekler Tablo 2.2’de gösterilmiştir.\n\n\nTablo 2.2: \\LaTeX’de Belge Seçenekleri\n\n\n\n\n\n\nSeçenek\nAçıklama\n\n\n\n\n10pt, 11pt, 12pt\nBelge ana yazı büyüklüğü.\n\n\na4paper, a5paper, letterpaper,…\nKağıt boyutu.\n\n\nfleqn\nFormülleri ortada yazmak yerine, sola bitişik yazar.\n\n\nleqno\nFormül numaralarını sağ yerine sol tarafa koyar.\n\n\ntitlepage, notitlepage\nBelge başlığını attıktan sonra yeni bir sayfa açıp açmayacağını belirler.\n\n\nonecolumn, twocolumn\nBelgenin tek sütun veya çift sütun dizileceğini belirtir.\n\n\ntwoside, oneside\nBelgenin kağıdın hep tek tarafına mı yoksa iki tarafına mı basılacağını belirtir.\n\n\nlandscape\nBelgeyi enine tutulmuş kağıda basılmak üzere hazırlar.\n\n\nopenright, openany\nBelgede bölümleri hep sağ sayfalardan veya ilk gelen boş sayfadan başlatır.\n\n\ndraft, final\nBelgeyi sırasıyla taslak ve son şeklinde hazırlar. draft seçilirse, sağ taraftan fırlamış olan satırlar kalın siyah bir çizgiyle işaretlenir.\n\n\n\n\nBu seçeneklerin her birinin kullanılabilirliği belge sınıfına göre farklılık gösterir. Tablo 2.3’de hangi seçeneğin hangi sınıf için varsayılan olduğu ve kullanılabilir olup olmadığı gösterilmiştir.\n\n\nTablo 2.3: Seçeneklerin belge sınıflarına göre kullanılabilirliği (1: varsayılan 1/2: kullanılabilir 0: kullanılamaz)\n\n\n\n\n\n\n\n\nSeçenek\nbook\nreport\narticle\n\n\n\n\n10pt\n1\n1\n1\n\n\nletterpaper\n1\n1\n1\n\n\noneside\n1/2\n1\n1\n\n\ntwoside\n1\n1/2\n1/2\n\n\nopenany\n1/2\n1\n0\n\n\nopenright\n1\n1/2\n0\n\n\ntitlepage\n1\n1\n1/2\n\n\nfinal\n1\n1\n1\n\n\n\n\nÖrneğin belgeye \\documentclass[a4paper,12pt]{article} komutuyla başlarsak \\LaTeX’e kağıt boyutu A4, ana yazı büyüklüğü 12 punto olan bir makale yazacağımızı bildirmiş oluruz. Başka bir örnek \\documentclass[a5paper,11pt,twocolumn]{book} olsun. Bu örnekte kağıt boyutu A5, ana yazı büyüklüğü 11 punto olan bir kitap yazacağımızı ve kitabın iki sütun olarak dizilmesini söyledik."
  },
  {
    "objectID": "02-ilkadimlar.html#türkçe-dil-ayarları-ve-çoklu-dil-kullanımı",
    "href": "02-ilkadimlar.html#türkçe-dil-ayarları-ve-çoklu-dil-kullanımı",
    "title": "2  İlk Adımlar",
    "section": "2.3 Türkçe Dil Ayarları ve Çoklu Dil Kullanımı",
    "text": "2.3 Türkçe Dil Ayarları ve Çoklu Dil Kullanımı\n\\LaTeX’de Türkçe belgeler oluşturmak için öncelikle sahanlığa\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\nkomutlarının verilmesi gerekir.\nT1 seçenekli fontenc paketi yazıtipi kodlamasıyla ilgili bir paket olup, hecelemenin doğru şekilde yapılmasını sağlar. Bir çok Avrupa dilinde de T1 seçeneğiyle kullanılır. turkish seçenekli babel paketi de Chapter, Table, Contents,… gibi isimlerin Türkçeleşmesi (Bölüm, Tablo, İçindekiler,…) içindir.\n\n\n\n\n\n\nNot\n\n\n\nYakın zamana kadar ö, ş, ç, gibi Türkçe karakterlerin kullanılabilmesi için sahanlığa \\usepackage[utf8]{inputenc} ya da \\usepackage[latin5]{inputenc} komutlarından birinin verilmesi gerekiyordu. Bu paket (inputenc) girdi kodlamasını yöneten bir pakettir. Son güncellemelerle birlikte bu paketin kullanılma zorunluluğu ortadan kalkmıştır.\n\n\nAşağıda Türkçe asgari bir \\LaTeX kaynak dosyası örneği verilmiştir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\begin{document}\n  İşte  Türkçe ilk belgem.\n\\end{document}\nTürkçe dışında ikinci bir dil kullanmak isterseniz, örneğin İngilizce, babel paketinin seçeneğini\n\\usepackage[english,turkish]{babel}\nşeklinde değiştirmeniz gerekir. Burada etkin olan dil Türkçedir. İngilizceyi etkin hale getirmek için \\selectlanguage{english} komutu kullanılır. Tekrar Türkçeye geçmek için de benzer şekilde \\selectlanguage{turkish} komutu kullanılır.\nBir kelime ya da cümle gibi kısa metinler kullanılacaksa \\foreignlanguage komutu kullanılabilir:\n\\foreignlanguage{<dil>}{<metin>}\nUzun metinler içinse diğer bir seçenek otherlanguage ortamıdır.\n\\begin{otherlanguage}{<dil>}\n  ...\n\\end{otherlanguage}\nBu ortamın isimleri değiştirmeyen, örneğin, dil seçeneği İngilizce olmasına rağmen belgeye bir tablo eklediğinizde “Table” yerine yine “Tablo” adını yazan yıldızlı sürümü de (otherlanguage*) vardır."
  },
  {
    "objectID": "02-ilkadimlar.html#belgeye-başlık-oluşturma",
    "href": "02-ilkadimlar.html#belgeye-başlık-oluşturma",
    "title": "2  İlk Adımlar",
    "section": "2.4 Belgeye Başlık Oluşturma",
    "text": "2.4 Belgeye Başlık Oluşturma\n\\LaTeX’de belgeye başlık oluşturmak için \\title komutu kullanılır. Yazar adı \\author komutuyla girilir. Birden fazla yazar varsa yazar adları arasına \\and komutu girilir.\nİsteğe bağlı olarak tarih için \\date komutu kullanılır. Eğer \\date komutu kullanılmazsa \\LaTeX belgenizi derlediğiniz günün tarihini basar. Tarihin basılmasını istemiyorsanız, bu komutu tarih yazılmadan \\date{} şeklinde kullanmanız gerekir.\nSon olarak, başlığın belgenize yazılması için \\begin{document} komutundan sonra başlığı oluşturmak istediğiniz yere \\maketitle komutunu girersiniz. Belge başlığını attıktan sonra yeni bir sayfanın açılıp açılmayacağı belgenin sınıfına bağlı olarak belirlenir.\nAyrıca \\title, \\author ve \\date komutları \\thanks komutunu içerebilir. Bu komutun değişkeni bir e-posta adresi, iş adresi veya bir teşekkür metni olabilir.\n\\documentclass[a4paper,12pt]{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\title{Belge Başlığı}\n\\author{Yazar 1\\thanks{A Üniversitesi} \\and Yazar 2\\thanks{B Üniversitesi}}\n\\date{XX.XX.XXXX}\n\\begin{document}\n\\maketitle\n  İçerik...\n\\end{document}"
  },
  {
    "objectID": "02-ilkadimlar.html#bölümleme-ve-içindekiler-tablosu",
    "href": "02-ilkadimlar.html#bölümleme-ve-içindekiler-tablosu",
    "title": "2  İlk Adımlar",
    "section": "2.5 Bölümleme ve İçindekiler Tablosu",
    "text": "2.5 Bölümleme ve İçindekiler Tablosu\n\\LaTeX’de belgenizi bölümlere ayırmak için 7 seviye bulunmaktadır.\n\n\nTablo 2.4: \\LaTeX’de Bölüm Seviyeleri\n\n\nKomut\nSeviye\nAçıklama\n\n\n\n\n\\part{...}\n-1( book ve report ) 0 ( article)\nletter hariç\n\n\n\\chapter{...}\n0\nsadece book ve report\n\n\n\\section{...}\n1\nletter hariç\n\n\n\\subsection{...}\n2\nletter hariç\n\n\n\\subsubsection{...}\n3\nletter hariç\n\n\n\\paragraph{...}\n4\nletter hariç\n\n\n\\subparagraph{...}\n5\nletter hariç\n\n\n\n\nTürkçe dil paketi ekli belgelerde \\part komutu “Kısım”, \\chapter komutu “Bölüm” olarak yazılır. Kısımlar I, II, III,… şeklinde bölümler ise 1, 2, 3,… şeklinde numaralandırılır. \\section komutu book ve report sınıflarında \\chapter komutunu takip ederek 1.1, 1.2,… diğer sınıflarda 1, 2, 3,… şeklinde numaralandırılır. \\subsection komutu da \\section komutunu takip ederek numaralandırılır.\nTürkçe dil paketi ekli belgelerde \\part komutu “Kısım”, \\chapter komutu “Bölüm” olarak yazılır. Kısımlar I, II, III,… şeklinde bölümler ise 1, 2, 3,… şeklinde numaralandırılır. \\section komutu book ve report sınıflarında \\chapter komutunu takip ederek 1.1, 1.2,… diğer sınıflarda 1, 2, 3,… şeklinde numaralandırılır. \\subsection komutu da \\section komutunu takip ederek numaralandırılır.\nİçindekiler tablosu için \\LaTeX’e \\tableofcontents komutu verilir. Bu komutun yazıldığı yerde İçindekiler tablosu oluşturulur. İçindekiler tablosunun doğru dizilmesi için kaynak dosyanızı en az iki kere derlemeniz gerekir.\n\\LaTeX’de article sınıfında 4 ve 5’inci seviye başlıklara, book ve report sınıflarında ise bunlara ek 3’üncü seviye başlıklara numara verilmez ve numara verilmeyen başlıklar İçindekiler tablosuna yazılmaz. Bu seviyelerdeki başlıklara numara verilmesini ve İçindekiler tablosuna yazılması için iki adet \\setcounter komutu\n\\setcounter{secnumdepth}{<seviye>}\n\\setcounter{tocdepth}{<seviye>}\nşeklinde kullanılır. Birinci komuttaki <seviye> değişkeninde kaçıncı seviyeye kadar olan başlıkların numaralandırılacağını, ikinci komuttaki <seviye> değişkeninde de kaçıncı seviyeye kadar olan başlıkların İçindekiler tablosuna yazılacağını sayıyla belirtirsiniz. Örneğin book ve report sınıflarında\n\\setcounter{secnumdepth}{3}\n\\setcounter{tocdepth}{3}\nkomutlarıyla \\subsubsection komutuna kadar olan başlıklara hem numara verir hem de İçindekiler tablosuna yazdırırsınız. Komutların çalışması için ya sahanlıkta ya da \\tableofcontents komutundan önce verilmelidir.\nUzun başlıkların İçindekiler tablosunda daha kısa yazılması istenirse bölüm komutlarının zorunlu olmayan değişkenine başlıkların kısa şekli yazılır:\n\\section[Kısa Başlık]{Uzuuuuuuuuuuuuuuuuun Başlık}\nBölüm komutlarının birde yıldızlı sürümleri vardır:\n\\part*{...}\n\\chapter*{...}\n\\section*{...}\n\\subsection*{...}\n\\subsubsection*{...}\n\\paragraph*{...}\n\\subparagraph*{...}\nKomutlar bu şekilde verildiğinde başlığa numara verilmez ve İçindekiler tablosuna yazılmaz.\nİçindekiler tablosunu \\LaTeX otomatik oluştursa da elle eklemeler yapılabilir, hatta Kaynakça gibi özel sayfalarda bu eklemeler gereklidir. Bunun için \\addcontentsline komutu kullanılır.\n\\addcontentsline{toc}{<giriş formatı>}{<giriş metni>}\nBurada toc, bilginin yazılacağı İçindekiler tablosunun dosya uzantısıdır. Bütünleşik olarak oluşturduğunuz kaynakçanın İçindekiler tablosuna yazılması için \\begin{thebibliography} komutunun peşine book ve report sınıflarında\n\\addcontentsline{toc}{chapter}{Kaynakça}\narticle sınıfında ise\n\\addcontentsline{toc}{section}{Kaynaklar}\nkomutunun verilmesi gerekir.\n\n\n\n\n\n\nNot\n\n\n\n“Kaynakça” ya da “Kaynaklar” isimleri yerine farklı isimler kullanılabilir elbette. Ancak thebibliography ortamının oluşturulduğu yerlerde \\LaTeX bu isimleri yazdıracağından tutarlı olması açısından bu isimler önerilmiştir.\n\n\n\\documentclass[a4paper,12pt]{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\title{\\LaTeX'de Bölümlendirme  ve İçindekiler Tablosu Oluşturma}\n\\author{Zafer Acar}\n\\begin{document}\n\\maketitle\n\\tableofcontents\n\\section{Birinci Seviye Başlık}\n  İçerik...\n\\subsection{İkinci Seviye Başlık}\n  İçerik...\n\\subsubsection{Üçüncü Seviye Başlık}\n  İçerik...\n\\section[Kısa Başlık]{Uzuuuuuuuuun Başlık}\n  İçerik...\n\\section*{Numarasız Başlık}\n\\addcontentsline{toc}{section}{Numarasız Başlık}\n  İçerik...\n\\end{document}"
  },
  {
    "objectID": "02-ilkadimlar.html#büyük-projeler",
    "href": "02-ilkadimlar.html#büyük-projeler",
    "title": "2  İlk Adımlar",
    "section": "2.6 Büyük Projeler",
    "text": "2.6 Büyük Projeler\n\\LaTeX’de kitap yazmaya başlamak için belge sınıfı book seçilir. Bunun dışında kitapların Baş, Gövde ve Son kısımları olur. Bu kısımların nerede başlayıp nerede bittikleri aşağıdaki komutlarla \\LaTeX’e bildirilir:\n\n\\frontmatter (baş) komutu\\begin{document} komutundan hemen sonra verilir. Bu komut, baş taraftaki İçindekiler, Önsöz gibi kısımların sayfa numaralandırmasını Roma rakamıyla yapar. Ayrıca bu kısımda bölüm komutları (*) işareti olmadan verildiğinde (örneğin \\chapter{Önsöz}) bunlara numara verilmez ancak İçindekiler tablosuna yazılırlar.\n\\mainmatter (gövde) komutu kitabın ilk bölüm başlığından hemen önce verilmelidir. Buradan itibaren sayfa numaralandırmasını yeniden başlatıp Arap rakamlarına geçer.\n\\appendix (ekler) komutu kitabınızın eklerindeki bölümleri harflerle numaralandırır (Ek A, Ek B, … ).\n\\backmatter (son) komutu kitabınızda her şey bittikten sonra verilir fakat bilinen belge sınıflarında görünürde hiçbir etkisi yoktur.\n\n\\documentclass[a4paper,12pt]{book}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\title{Başlık}%Başlık\n\\author{Yazar Adı}%yazar\n\\date{Eylül 2022}%Tarih\n\n\\begin{document}\n\\frontmatter%sayfa numaraları I,II,...\n\\maketitle%başlığı oluştur\n\\tableofcontents%içindekiler tablosu\n\n\\chapter{Önsöz}\n  İçerik...\n\n\\mainmatter % sayfa numaraları 1,2,3,...\n\n\\part{Birinci Kısım}\n\n\\chapter{Birinci Bölüm}\n\\section{Altbölüm}\n  İçerik...\n\n\\appendix %eklerin başlangıcı\n\n\\part{Ekler}\n\n\\chapter{Birinci Ek}\n\n  İçerik...\n\n\\backmatter\n\n\\end{document}\nKitap gibi büyük hacimli belgelerle çalışırken kaynak dosyanızı parçalara ayırmak gerekebilir. \\LaTeX bunun için size iki komutla yardımcı olur: \\input ve \\include. İkisi arasındaki fark \\include komutuyla eklediğiniz metin yeni bir sayfadan başlayarak dizilir.\nBu komutların zorunlu değişkeni eklemek istediğiniz dosyanın adıdır. Örneğin kaynak dosyanızla aynı dizinde yer alan dosya1.tex dosyasını eklemek için\n\\include{dosya1}\nkomutunu kullanırsınız. Eğer dosya uzantısı .tex değilse (örneğin .txt olsun) o zaman dosya adını uzantısıyla yazmanız gerekir:\n\\include{dosya1.txt}\nAyrıca, hangi dosyaların eklenebileceğini \\LaTeX’e bildiren bir komut vardır: \\includeonly. Bu komut, sadece sahanlığa yazılabilir. Komutun zorunlu değişkeninde eklenebilecek dosyalar aralarına virgül koyularak (ve boşluk bırakılmadan) listelenir:\n\\includeonly{dosya1,dosya2,dosya3,...}\nBöyle bir liste oluşturulduktan sonra bu listede olmayan bir dosya artık \\include komutuyla kaynak dosyaya eklenemez.\n\\input komutu sahanlıkta da kullanılabilir. Örneğin, sahanlığınızı tek bir dosyaya yazıp, bu dosyayı bu komutla sahanlığa ekleyebilirsiniz.\nDaha düzenli çalışmak adına kaynak dosyanızın olduğu dizini de düzenleyebilirsiniz.\n\n\n\nŞekil 2.1: Kaynak dosyanın olduğu dizinin düzenlenmesi\n\n\nBu şekilde bir düzenleme yaptığınızda \\input ya da \\include komutlarıyla dosya eklemek istediğinizde dosyanın bulunduğu dizini de göstermeniz gerekir.\nBurada kaynak dosya kitap.tex’dir. Bu kaynak dosyaya bolum1.tex dosyasını eklemek istediğinizde komutu\n\\input{Bolumler/bolum1}\nşeklinde verirsiniz. Bu sayede kaynak dosyanızın olduğu dizinde (Örnek Kitap) sadece kitap ile başlayan dosyalar olur. Diğer dosyalar alt dizinde (Bolumler) yer alır.\nDikkat edilirse “Örnek Kitap” dışında, “Bolumler” alt dizini ve tüm dosya adları Türkçe karakter ya da boşluk içermez.\n\n\n\n\nOetiker, Tobias, Hubert Partl, Irene Hyna, ve Elisabeth Schlegl. 2006. İnce bir LaTeX2e Elkitabı veya, 116 dakikada LaTeX2e. http://ftp.ntua.gr/mirror/ctan/info/lshort/turkish/lshort-tr.pdf."
  },
  {
    "objectID": "04-matematik.html",
    "href": "04-matematik.html",
    "title": "4  Matematiksel İfadeler",
    "section": "",
    "text": "Matematik formüllerini dizmek, kuşkusuz, \\LaTeX’in en güçlü olduğu konulardan biridir. Çok fazla matematiksel gösterimin varlığından dolayı da büyük bir konudur. Bu bölümde ileri bir matematik kitabını dizmek için gereken birçok şey anlatılacaktır ancak işin sınırları göz önüne alındığında başka kaynaklara da başvurmanız gerekebilir."
  },
  {
    "objectID": "04-matematik.html#giriş",
    "href": "04-matematik.html#giriş",
    "title": "4  Matematiksel İfadeler",
    "section": "4.1 Giriş",
    "text": "4.1 Giriş\nBelgenizde yalnızca birkaç basit matematiksel formül kullanacaksanız herhangi bir pakete gerek olmadan yazabilirsiniz. Ancak çok sayıda karmaşık formül içeren bilimsel bir belge yazma niyetindeyseniz temel AMS paketlerini kullanmanız gerekir. Bu paketler amsmath , amssymb ve amsfonts’dir.\n\\usepackage{amsmath,amssymb,amsfonts}\nYukarıdaki komutu sahanlığa yazarak paketleri belgenize ekleyiniz. Bundan sonra bu paketleri eklediğinizi varsayarak devam edeceğiz ve bunların dışında bir pakete ihtiyaç duyarsak ayrıca belirteceğiz.\n\n4.1.1 Genel\nBelgenizin metnini oluştururken \\LaTeX’in metnin ne zaman matematiksel olduğunu bilmesi gerekir. Bunun nedeni, \\LaTeX’in matematiksel ifadeleri normal metinden farklı bir şekilde dizmesidir. Bu nedenle matematiksel ifadeler, normal metinden farklı olarak bazı ortamlarda girilirler.\nMatematik özel ortamlar gerektirdiğinden, doğal olarak standart şekilde kullanabileceğiniz uygun ortam adları vardır. Bununla birlikte, diğer ortamların çoğundan farklı olarak, formülünüzü bildirmek için bazı kullanışlı kısaltmalar vardır. \\LaTeX’de bu ortamlar ya da kısaltmalar kullanılarak formüller iki türlü dizilir:\n\nFormüller satırın içinde, yani bildirildiği metnin gövdesi içine yazılır: \\lim_{n \\to \\infty} \\sum_{k=1}^n \\frac{1}{k^2} =\\frac{\\pi^2}{6}. Görüldüğü gibi \\LaTeX, paragraf yapısını bozmamak için sembolleri olabildiğince sıkıştırır ve gerek görürse alttakileri yana kaydırır.\nFormüller ayrı bir satırda tek başlarına tüm detaylarıyla sergilenir: \\lim_{n \\to \\infty} \\sum_{k=1}^n\n\\frac{1}{k^2} =\\frac{\\pi^2}{6}.\n\nFormülün satır içerisinde dizilmesi için ya $...$ arasına arasına, ya \\(...\\) arasına ya da \\begin{math} ile \\end{math}arasına, yani math ortamında yazılması gerekir. Üçü de aynı sonucu verir.\nFormülün sergilenmesi içinse ya \\[...\\] arasına ya displaymath ortamında ya da equation ortamında yazılması gerekir. equationortamında yazılan formülü \\LaTeX otomatik numaralandırır. Numara verilmesini istemezseniz ortamı equation* şeklinde kullanmanız gerekir.\n\n\n\n\n\n\nNot\n\n\n\n\\TeX’in eski sürümlerinde formüller, sergilenmeleri için $$...$$ arasına yazılırdı. Bu kullanım hala geçerlidir ancak bazı sorunlara yol açabildiğinden (örneğin belge seçeneğine fleqn yazıldığında) kullanımı önerilmez.\n\n\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n $x\\in \\mathbb{R}$ için $|x|<1$ ise\n\\begin{equation*}\n  -1<x<1\n\\end{equation*} olur.\n\n\\end{document}\nNumara verilen bir formülü \\label komutuyla etiketleyip, \\ref ya da \\eqref komutuyla formüle atıf yapılabilir. Atıf \\eqref komutuyla yapılırsa formülün numarası parantez içinde yazılır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\begin{equation}\n\\label{eq:euler}\n  e^{i\\pi}+1=0\n\\end{equation}\nEuler'in \\eqref{eq:euler} formülüne göre\\dots\n\n\\end{document}\n\n\n4.1.2 Matematik kipiyle metin kipi arasındaki farklar\nMatematiksel ifadeleri girerken düz metin girişinden farklı olarak dikkat edilmesi gereken bazı noktalar vardır:\n\nBoşlukların ve satır kesmelerinin çoğunun önemi yoktur, çünkü tüm boşluklar ya matematiksel ifadelerden mantıksal olarak türetilir, ya da özel komutlarla belirtilmesi gerekir.\nBoş satırlara izin verilmez.\nAksanlı harfler kullanılmaz.\nHer harf matematiksel bir değişken olarak kabul edilir ve italik dizilir. Eğer düz yazıyla ve normal aralıklarla bir metin girilecekse \\textrm{} ya da \\text{} komutları kullanılmalıdır. Bu komutlarla metin kipine geçiş yapılmış olur ve metin artık düz ve normal aralıklarla dizilir. İtalik ve normal aralıklarla metin girilecekse \\textit{} komutu kullanılabilir. Ayrıca bu komutlarla aksanlı harfler de kullanılabilir.\n\nAşağıdaki örnek matematik kipi ile metin kipi arasındaki farkları gösterir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n $x^2-1=0 \\text{ise $x=\\pm 1$}.$\n\\end{document}\n\n\n4.1.3 Gruplandırma\nFormülleri dizerken dikkat edilmesi gereken noktalardan biri komutların çoğunun kendisinden sonra ilk gelen karaktere etki etmesidir. Bu yüzden bir komutun çok sayıda karaktere etki etmesi istenirse bu karakterler iki çengelli parantez {…} arasına yazılarak gruplandırılmalıdır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n $a^x+y \\neq a^{x+y}$\n\\end{document}\n\n\n4.1.4 Boşluklar\nBazen \\LaTeX formülleri dizerken olması gerektiği gibi boşluk bırakma konusunda yetersiz kalabilir. Bu durumda boşluklar elle oluşturulur. Boşluklar için kullanılabilecek komutlar tablodaki gibidir.\n\n\n\nNegatif\n\\!\n\n\nİnce\n\\,\n\n\nOrta\n\\:\n\n\nKalın\n\\;\n\n\nSözcük arası\n\\\n\n\nBir quad\n\\quad\n\n\nİki quad\n\\qquad\n\n\n\nÖrneğin \\, komutunun bıraktığı ince boşluk bazı formüllerde çok kullanışlıdır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\n\\int_a^b f(x) dx \\quad \\sqrt{2} a\n\\quad \\sqrt{\\log x}\n\\]\n\\[\n\\int_a^b f(x)\\,dx \\quad\n\\sqrt{2}\\,a \\quad \\sqrt{\\,\\log x}\n\\]\n\n\\end{document}\nNegatif aralık bırakan \\! komutu da fazla aralıklı ifadeleri birbirine yaklaştırmak için kullanılır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\nx^2/2 \\quad a/\\sin b\n\\]\n\\[\nx^2\\!/2 \\quad a/\\!\\sin b\n\\]\n\n\\end{document}"
  },
  {
    "objectID": "04-matematik.html#parantezler-gruplandırıcılar-ve-oklar",
    "href": "04-matematik.html#parantezler-gruplandırıcılar-ve-oklar",
    "title": "4  Matematiksel İfadeler",
    "section": "4.2 Parantezler, Gruplandırıcılar ve Oklar",
    "text": "4.2 Parantezler, Gruplandırıcılar ve Oklar\n\\LaTeX’de her türlü parantez ve gruplandırıcı kullanılabilir. Yuvarlak ve köşeli parantezler klavyedeki yerlerinden, çengelli parantez ise \\{ ve \\} komutları kullanılarak girilir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n${a,b,c}\\neq\\{a,b,c\\}$\n\n\\end{document}\nKullanılabilecek tüm gruplandırıcı işaretler Tablo 4.1’de gösterilmiştir.\n\n\nTablo 4.1: Gruplandırıcılar\n\n\n\n\n\n\n\n( ( ) )\n\\uparrow \\uparrow\n[ [ ya da \\lbrack\n\n\n] ] ya da \\rbrack\n\\downarrow \\downarrow\n\\lbrace \\{ ya da \\lbrace\n\n\n\\rbrace \\} ya da \\rbrace\n\\updownarrow \\updownarrow\n\\langle \\langle\n\n\n\\rangle \\rangle\n\\vert | ya da \\vert\n\\lfloor \\lfloor\n\n\n\\rfloor \\rfloor\n\\lceil \\lceil\n\\rceil \\rceil\n\n\n/ /\n\\backslash \\backslash\n\\Updownarrow \\Updownarrow\n\n\n\n\nGrup açıcı bir sembolün önüne \\left komutu, grup kapatıcı bir sembolün önüne de \\right komutu yazılırsa \\LaTeX onları en uygun boyda dizer. Her bir \\left komutuna karşılık mutlaka bir \\right komutu bulunmalıdır. Bunların doğru boyda dizilmesi için iki komutunda aynı satırda yer almasına dikkat edilmelidir. Sol/sağ tarafta gruplandırıcı bir işaret istenmiyorsa, görünmeyen \\left./\\right. komutu kullanılır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\n\\left(1+\\frac{1}{n}\\right)^n\\quad\n\\left.\\frac{x^3}{3}\\right|_0^1\n\\]\n\n\\end{document}\nBazen gruplandırıcı sembolün boyunu elle ayarlamak gerekebilir. Bunun için, gruplandırıcı komutun önüne \\big, \\Big, \\bigg veya \\Bigg komutlarından biri verilir. \\bigl (büyük sol) ve \\bigr (büyük sağ) komutları da parantezleri biraz büyütür.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\n\\big(\\Big(\\bigg(\\Bigg(\\quad\n\\big\\}\\Big\\}\\bigg\\}\\Bigg\\}\n\\quad\n\\big\\|\\Big\\|\\bigg\\|\\Bigg\\|\n\\]\n\n\\end{document}\nOklar için Tablo 4.2’deki komutlar kullanılır.\n\n\nTablo 4.2: Oklar\n\n\n\n\n\n\n\n\n\\leftarrow \\leftarrow ya da \\gets\n\\longleftarrow \\longleftarrow\n\\uparrow \\uparrow\n\\Leftarrow \\Leftarrow\n\n\n\\Longleftarrow \\Longleftarrow\n\\Uparrow \\Uparrow\n\\rightarrow \\rightarrow ya da \\to\n\\longrightarrow \\longrightarrow\n\n\n\\downarrow \\downarrow\n\\Rightarrow \\Rightarrow\n\\Longrightarrow \\Longrightarrow\n\\Downarrow \\Downarrow\n\n\n\\leftrightarrow \\leftrightarrow\n\\longleftrightarrow \\longleftrightarrow\n\\updownarrow \\updownarrow\n\\Leftrightarrow \\Leftrightarrow\n\n\n\\Longleftrightarrow \\Longleftrightarrow\n\\Updownarrow \\Updownarrow\n\\mapsto \\mapsto\n\\longmapsto \\longmapsto\n\n\n\\nearrow \\nearrow\n\\hookleftarrow \\hookleftarrow\n\\hookrightarrow \\hookrightarrow\n\\searrow \\searrow\n\n\n\\leftharpoonup \\leftharpoonup\n\\rightharpoonup \\rightharpoonup\n\\swarrow \\swarrow\n\\leftharpoondown \\leftharpoondown\n\n\n\\rightharpoondown \\rightharpoondown\n\\nwarrow \\nwarrow\n\\rightleftharpoons \\rightleftharpoons\n\\leadsto \\leadsto\n\n\n\n\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\(\n\\downarrow\n\\big\\downarrow\n\\Big\\downarrow\n\\bigg\\downarrow\n\\Bigg\\downarrow\n\\)\n\n\\end{document}\nBunların dışında altlarına ya da üstlerine matematiksel ifadeler yazılabilen \\xleftarrow ve \\xrightarrow komutları vardır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\(\n\\xleftarrow{a}\n\\xrightarrow[X]{a+b}\n\\)\n\n\\end{document}"
  },
  {
    "objectID": "04-matematik.html#yunan-harfleri",
    "href": "04-matematik.html#yunan-harfleri",
    "title": "4  Matematiksel İfadeler",
    "section": "4.3 Yunan Harfleri",
    "text": "4.3 Yunan Harfleri\nYunan harfleri matematikte yaygın olarak kullanılır. Bu harfler ters eğik çizgiden sonra harfin adı yazılarak elde edilir. Eğer ilk harf küçük ise küçük, büyükse de büyük harf elde edilir. Bazı büyük Yunanca harfler Latin harfleri gibi göründüğünden (örneğin, büyük harf Alpha ve Beta yalnızca sırasıyla “A” ve “B”dir) ayrıca tanımlanmamışlardır. Küçük harf epsilon, theta, kappa, phi, pi, rho ve sigma iki farklı sürümde sunulmaktadır. Alternatif sürümü, harf adının önüne “var” eklenerek oluşturulur.\n\n\nTablo 4.3: Yunan Harfleri\n\n\n\n\n\n\n\n\n\\alpha \\alpha\n\\theta \\theta\no o\n\\tau \\tau\n\n\n\\beta \\beta\n\\vartheta \\vartheta\n\\pi \\pi\n\\upsilon \\upsilon\n\n\n\\gamma \\gamma\n\\iota \\iota\n\\varpi \\varpi\n\\phi \\phi\n\n\n\\delta \\delta\n\\kappa \\kappa\n\\rho \\rho\n\\varphi \\varphi\n\n\n\\epsilon \\epsilon\n\\lambda \\lambda\n\\varrho \\varrho\n\\chi \\chi\n\n\n\\varepsilon \\varepsilon\n\\mu \\mu\n\\sigma \\sigma\n\\psi \\psi\n\n\n\\zeta \\zeta\n\\nu \\nu\n\\varsigma \\varsigma\n\\omega \\omega\n\n\n\\eta \\eta\n\\xi \\xi\n\n\n\n\n\n\n\n\n\n\n\\Gamma \\Gamma\n\\Lambda \\Lambda\n\\Sigma \\Sigma\n\\Psi \\Psi\n\n\n\\Delta \\Delta\n\\Xi \\Xi\n\\Upsilon \\Upsilon\n\\Omega \\Omega\n\n\n\\Theta \\Theta\n\\Pi \\Pi\n\\Phi \\Phi\n\n\n\n\n\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n$\\forall \\epsilon>0$ için\n\n\\end{document}"
  },
  {
    "objectID": "04-matematik.html#fonksiyonlar",
    "href": "04-matematik.html#fonksiyonlar",
    "title": "4  Matematiksel İfadeler",
    "section": "4.4 Fonksiyonlar",
    "text": "4.4 Fonksiyonlar\n\\LaTeX’de fonksiyonlar aşağıdaki komutlarla dizilirler.\n\\arccos  \\cos  \\csc  \\exp  \\ker  \\limsup  \\min  \\sinh \\arcsin  \\cosh  \\deg  \\gcd  \\lg  \\ln  \\Pr  \\sup \\arctan  \\cot  \\det  \\hom  \\lim  \\log  \\sec  \\tan \\arg  \\coth  \\dim  \\inf  \\liminf  \\max  \\sin  \\tanh\nMatematik kipinde fonksiyonlar diğer değişkenler gibi italik değil düz yazılırlar ve boşluklar otomatik ayarlanır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n$\\sin x$, $\\exp x$, $\\log x$,\n$\\det A$, $\\min_{x\\in A} f(x)$\n\n\\end{document}\nBunların dışında bir fonksiyon tanımlamak için \\DeclareMathOperator komutu kullanılır. \\DeclareMathOperator{\\obeb}{obeb } komutundan sonra artık kullanabileceğiniz bir “obeb” fonksiyonu olur.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\DeclareMathOperator{\\obeb}{obeb}\n\\begin{document}\n\n$\\obeb(12,16)=4$\n\n\\end{document}\nBu komutun sınır değerleri sağ taraf yerine alta dizen yıldızlı sürümü vardır: \\DeclareMathOperator*. Örneğin \\DeclareMathOperator*{\\Max}{Max} komutunu sahanlıkta verdikten sonra belgede kullanırsanız şöyle bir çıktı alırsınız:\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\DeclareMathOperator*{\\Max}{Max}\n\\begin{document}\n\n\\begin{equation*}\n \\Max_{x\\in A} f(x)\n\\end{equation*}\n\n\\end{document}\nModülo fonksiyonu içinse \\mod ya da \\pmod komutları verilir. İkinci komut fonksiyonu parantez içinde yazar.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n$a\\equiv b\\pmod p$ ise $p\\mid a-b$'dir.\n\n\\end{document}\nLimit için \\lim komutu aşağıdaki şekilde verilir.\n\\lim_{<değişken> \\to <değişken>}\nBuradaki \\to komutu \\to üretir ve \\infty için \\infty komutu verilir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\n\\lim_{x\\to 0}\n\\frac{\\sin x}{x}=1 \\qquad\n\\lim_{n\\to +\\infty}f_n=\\delta\n\\]\n\n\\end{document}"
  },
  {
    "objectID": "04-matematik.html#yığın-simgeleri",
    "href": "04-matematik.html#yığın-simgeleri",
    "title": "4  Matematiksel İfadeler",
    "section": "4.5 Yığın Simgeleri",
    "text": "4.5 Yığın Simgeleri\nMatematikte bazen bir ifadenin altına ya da üstüne başka ifadeler yazmak gerekebilir. Bunlar yığın simgeleri olarak adlandırılırlar.\n\\LaTeX’de aşağıdaki\n\\overset{<birinci değişken>}{<ikinci değişken>}\nkomutu birinci değişkendeki sembolü, normal boyda yazılan ikincinin üzerine yazar. \\underset komutu ise alta yazar.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\n\\overset{R}{\\sim}\n\\]\n\\[\n\\underset{R}{\\sim}\n\\]\n\\end{document}\n\\overline ve \\underline komutları bir ifadenin üstüne veya altına yatay bir çizgi çekerler.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\n\\overline{x+y}\n\\]\n\\[\n\\underline{x+y}\n\\]\n\n\\end{document}\n\\overbrace ve \\underbrace komutları bir ifadenin üstüne veya altına yatay bir çengel atarlar.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\n\\underbrace{1+2+\\dots+n}_{{}=\n\\frac{n(n+1)}{2}}\n+(n+1)\n\\]\n\n\\end{document}\n\\overleftarrow komutu ifadenin üstüne sola, \\overrightarrow ise sağa bir ok çizer. Bu komutlar vektörleri göstermek için kullanılabilir. Vektörler için \\vec komutu da kullanılır. \\stackrel komutu \\overset gibi davranır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\n\\overrightarrow{AB} \\quad \\vec{a}\n\\]\n\\[\n\\int f_N(x) \\stackrel{!}{=} 1\n\\]\n\n\\end{document}"
  },
  {
    "objectID": "04-matematik.html#matrisler",
    "href": "04-matematik.html#matrisler",
    "title": "4  Matematiksel İfadeler",
    "section": "4.6 Matrisler",
    "text": "4.6 Matrisler\nTemel matrisler matrix ortamında girilir. Bu ortamda elemanlar otomatik ortalanır ve sütunlar normal bir tablo gibi dizilir. Her sütun & karakteriyle ayrılır ve alt satıra geçmek için \\\\ komutu verilir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\n\\begin{matrix}\na & b & c \\\\\nd & e & f \\\\\ng & h & i\n\\end{matrix}\n\\]\n\n\\end{document}\nÇeşitli matrisler dizmek için matrix ortamının farklı sürümleri kullanılır: pmatrix, bmatrix, Bmatrix, vmatrix ve Vmatrix. Bu ortamlar sırasıyla yuvarlak, köşeli, çengelli, dikey çubuklu ve çift dikey çubuklu matrisler oluşturur.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\n\\begin{pmatrix}\n1 & 2 \\\\\n3 & 4\n\\end{pmatrix}\n\\]\n\\[\n\\begin{bmatrix}\n1 & 2 \\\\\n3 & 4\n\\end{bmatrix}\n\\]\n\\[\nA=\n\\begin{bmatrix}\nx_{11} & x_{12} & \\dots \\\\\nx_{21} & x_{22} & \\dots \\\\\n\\vdots & \\vdots & \\ddots\n\\end{bmatrix}\n\\]\n\n\\end{document}\nKüçük bir matris yazmak için smallmatrix ortamı kullanılır. Bu matriste parantezler elle eklenmelidir. Ayrıca mathtools paketi psmallmatrix, bsmallmatrix vb. ortamlar sağlar.\nBazı durumlarda, hizalamayı elle yapmak ve sütunlar veya satırlar arasına çizgi çekmek istenebilir. Bu durumda tabular ortamının matematik sürümü olan array ortamını kullanılmalıdır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\n\\left(\\begin{array}{r|r}\n -1&2\\\\\\hline\n  3&-4\n\\end{array}\\right)\n\\]\n\n\\end{document}"
  },
  {
    "objectID": "04-matematik.html#yazı-biçem-ve-boyutları",
    "href": "04-matematik.html#yazı-biçem-ve-boyutları",
    "title": "4  Matematiksel İfadeler",
    "section": "4.7 Yazı Biçem ve Boyutları",
    "text": "4.7 Yazı Biçem ve Boyutları\nMatematiksel ifadeleri dizerken bazen yazının biçemini ya da boyutunu değiştirmek isteyebilirsiniz.\n\\LaTeX’de matematik kipindeki yazıların biçemleri aşağıdaki komutlar kullanılarak değiştirilir.\n\n\nTablo 4.4: Matematik Kipinde Yazı Biçemleri\n\n\nKomut\nGörünüm\n\n\n\n\n\\mathnormal{ABC def 123}\nABC def 123\n\n\n\\mathrm{ABC def 123}\n\\mathrm{ABC def 123}\n\n\n\\mathit{ABC def 123}\n\\mathit{ABC def 123}\n\n\n\\mathbf{ABC def 123}\n\\mathbf{ABC def 123}\n\n\n\\mathtt{ABC def 123}\n\\mathtt{ABC def 123}\n\n\n\\mathsf{ABC def 123}\n\\mathsf{ABC def 123}\n\n\n\\mathfrak{ABC def 123}\n\\mathfrak{ABC def 123}\n\n\n\\mathbb{ABC}\n\\mathbb{ABC}\n\n\n\\mathcal{ABC}\n\\mathcal{ABC}\n\n\n\\mathscr{ABC}\n\\mathscr{ABC}\n\n\n\n\nSon satırdaki komutun kullanılabilmesi için\n\\usepackage{mathrsfs}\nkomutuyla mathrsfs paketi eklenmiş olmalıdır.\nBu komutlarla girilen ifadelerdeki boşluklar yine dikkate alınmaz ve yine aksanlı harfler girilemez.\nMatematik kipindeki bir ifadenin hem kalın hem de italik yazılması için \\boldsymbol komutu kullanılmalıdır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\usepackage{mathrsfs}\n\\begin{document}\n\n\\[\n\\mu, M \\qquad \\mathbf{\\mu}, \\mathbf{M}\\qquad\n\\boldsymbol{\\mu}, \\boldsymbol{M}\n\\]\n\n\\end{document}\nMatematik kipindeki yazının boyutunu elle ayarlayabileceğiniz dört komut vardır: \\displaystyle, \\textstyle, \\scriptstyle ve \\scriptscriptstyle. \\textstyle komutu ifadeyi normal metin boyutunda dizer, \\displaystyle komutu ise ifadeyi ayrı satırda sergilenir gibi büyük dizer. \\scriptstyle ve \\scriptscriptstyle komutları da normal metin boyutundan küçük dizerler.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\usepackage{mathrsfs}\n\\begin{document}\n\n\\[\n\\sum_{k=0}^n z^k \\qquad \\textstyle\\sum_{k=0}^n z^k\n\\]\n$\\displaystyle\\sum_{k=0}^n z^k$\\qquad \n$\\sum_{k=0}^n z^k$ \\qquad\n$\\scriptstyle\\sum_{k=0}^n z^k$\n\n\\end{document}\nKesirler dizilirken {\\displaystyle\\frac{…}{…}} ve {\\textstyle\\frac{…}{…}} komutları yerine onların kısaltmaları olan \\dfrac ve \\tfrac komutları kullanılabilir. Aynı şey \\binom komutu için de geçerlidir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\usepackage{mathrsfs}\n\\begin{document}\n\n$\\frac{1}{n}\\log x$ \\quad\n$\\dfrac{1}{n}\\log x$ \\quad\n$\\binom{n}{3}$ \\quad\n$\\dbinom{n}{3}$\n\\[\n\\frac{1}{n}\\log x \\quad\n\\tfrac{1}{n}\\log x \\quad\n\\binom{n}{3} \\quad\n\\tbinom{n}{3}\n\\]\n\n\\end{document}"
  },
  {
    "objectID": "04-matematik.html#denklem-ortamları",
    "href": "04-matematik.html#denklem-ortamları",
    "title": "4  Matematiksel İfadeler",
    "section": "4.8 Denklem Ortamları",
    "text": "4.8 Denklem Ortamları\nBir satıra sığmayacak kadar uzun bir formülü ya da birden çok satırdan oluşan bir denklemi veya denklem sistemlerini hizalayıp dizmek için \\LaTeX’de çeşitli ortamlar kullanılır.\nmultline ortamı bir formülü hizalanmamış bir kaç satıra ayırır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\begin{multline}\nf=a+b+c \\\\\n+i+j+k+l \\\\\n+x+y+z\n\\end{multline}\n\n\\end{document}\nBu ortamda ilk satır sola, son satır sağa ve kalanlar ortalı hizalanır. Denklemin numarası da son satırın sağına yazılır. Dekleme numara verilmesi istenmiyorsa ortam multline* şeklinde kullanılmalıdır.\nsplit ortamı denklemi dikey hizalanmış birden çok satırda dizer.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\begin{equation}\n\\begin{split}\n a&= b+c-d\\\\\n  &= e-f\\\\\n  &= g\n\\end{split}\n\\end{equation}\n\n\\end{document}\nHizalama & karakteriyle yapılır (genelde = işaretinden hemen önce kullanılır). Ortam mutlaka formülün numaralandırılmasından sorumlu ya da numara vermeyen başka bir matematik ortamında kullanılması gerekir.\ngather ortamı birden fazla formülü birlikte gruplandırır, ortalar ve her birini ayrı bir satırda numaralandırır. Yine gather* ortamı, aynı türden numaralandırılmamış formüller üretir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\begin{gather}\na=b+c \\\\\nV+F-S=2\n\\end{gather}\n\n\\end{document}\nalign ortamı, iki veya daha fazla satırdan oluşan bir denklemi her bir satırı hizalı ve numaralı şekilde dizmek için kullanılır. Hizalama aynı şekilde & karakteriyle yapılır. Ortam yıldızlı (align*) şekilde kullanılırsa hiçbir satır numaralandırılmaz. align ortamı aynı zamanda birden fazla özerk formül dizisini birleştirmek için de kullanışlıdır. Bu durumda, & karakteri konumuna bağlı olarak hizalama ve ayırıcı olmak üzere iki farklı işlev üstlenir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\begin{align}\n   a& = b+c+d \\\\\n   e& = f \\\\\n x-1& = y+z \n\\end{align}\n\\begin{align*}\n a &=b & c&=d & e&=f \\\\\n u &=v & w&=x & y&=z\n\\end{align*}\n\\end{document}\nalignat ortamı align ortamına benzer fakat sütun sayısını belirten bir değişken alır (Bir satırda kullanılan & sayısının bir fazlasının yarısı sütun sayısını vermelidir} ve denklemler arasındaki yatay boşluğun kontrolünü sağlar. Eğer boşluk komutlarından biri kullanılmazsa denklem sistemleri arasında boşluk bırakılmaz (örnekte boşluk komutu olarak \\qquad kullanılmıştır).\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\begin{alignat*}{3}\n  a&=b\\qquad & c&=d\\qquad & e&=f \\\\\n  u&=v\\qquad & w&=x\\qquad & y&=z \n\\end{alignat*}\n\n\\end{document}\nflalign ortamı align ortamına benzer ancak ilk denklem sistemini sola ve son denklem sistemini sağa yaslar.\naligned ortamı yine align ortamına benzer fakat başka bir matematik ortamında kullanılması gerekir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\n\\left.\n\\begin{aligned}\n a&= b+1 \\\\\n a&= 2b\n\\end{aligned}\n\\right\\}\n\\quad\n\\text{$a=2$ ve $b=1$.}\n\\]\n\n\\end{document}\ncases ortamı parçalı fonksiyonları dizmek için kullanışlıdır. Ortamın içine yazılan denklemlerin solunda uygun boyda bir çengelli parantez açar. Sütunlar sola yaslıdır. Ortamın başka bir matematik ortamında kullanılması gerekir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\[\nn!=\n\\begin{cases}\n1 & \\text{$n=0$ ise} \\\\\nn(n-1)!& \\text{$n\\ge 1$ ise}\n\\end{cases}\n\\]\n\n\\end{document}\nHer satıra numara veren bir ortamda bazı satırların numarasız olması istenirse bu satırların sonuna \\notag ya da \\nonumber komutları verilir. \\tag komutuyla ise keyfi bir numara ya da işaret yazılabilir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\begin{align}\n x&=y\\\\\n z&=y+1 \\notag\\\\\n w&=3 \\tag{*}\n\\end{align}\n\n\\end{document}\nNumaralı formüllere etiket yine \\label komutuyla koyulur ve \\eqref komutuyla atıf yapılır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\begin{align}\n a &= b+c \\\\\n c &= d  \\label{eq:cd}\\\\\n e &= f+g\n\\end{align}\nYukarıdaki \\eqref{eq:cd}\nformülü\\dots\n\n\\end{document}\nAynı ortamda yer alan formüllerin 1, 2,… yerine 1.a, 1.b,… biçiminde numaralandırılması için ortamın subequations ortamının içine yazılması gerekir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\begin{document}\n\n\\begin{subequations}\n\\label{eq:sub}\n\\begin{align}\n a &= b+c \\\\\n c &= d \\label{eq:subb} \\\\\n e &= f+g\n\\end{align}\n\\end{subequations}\n\nFormül~\\eqref{eq:sub} ve\naltformül~\\eqref{eq:subb}\\dots\n\n\\end{document}"
  },
  {
    "objectID": "04-matematik.html#teorem-ve-benzeri-ortamlar",
    "href": "04-matematik.html#teorem-ve-benzeri-ortamlar",
    "title": "4  Matematiksel İfadeler",
    "section": "4.9 Teorem ve Benzeri Ortamlar",
    "text": "4.9 Teorem ve Benzeri Ortamlar\nGerçek bir matematik kitabı karıştırdıysanız “Teorem 2.1”, “Sonuç 2.1.1” gibi ifadelerle başlayan paragraflara rastlamış olmalısınız. Bunlar metnin geri kalanından ayrılmış ve yanında sıralı sayılarla etiketli paragraflardır. Bu, matematikte teoremler için yaygın olarak kullanılır, ancak her şey için kullanılabilir.\n\\LaTeX, herhangi bir teorem benzeri bildirimi kolayca tanımlamanıza izin veren bir komut sunar: \\newtheorem.\n\n4.9.1 Temel Teoremler\nÖncelikle sahanlığa\n\\usepackage{amsthm}\nkomutuyla amsthm paketini ekleyiniz. En basit kullanım\n\\newtheorem{<ad>}{<başlık>}\nkomutunun sahanlığa verilmesidir. İlk değişken olan <ad>, referans olarak kullanacağınız addır, ikinci değişken <başlık> ise \\LaTeX’in her kullandığınızda yazdıracağı çıktıdır. <ad> değişkeni aksanlı bir harf içermemelidir. Örneğin\n\\newtheorem{tanim}{Tanım}\nkomutunu sahanlığa verdiğinizde tanim ortamını \\LaTeX’e tanıtmış olursunuz. Ayrıca kullanılan teoreme (bu örnekte Tanım) özel bir ad vermek ya da not düşmek isteyebilirsiniz. Bu, ortam komutundan sonra köşeli parantezler içinde belirtilebilir:\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\usepackage{amsthm}\n\\newtheorem{tanim}{Tanım}\n\\begin{document}\n\n\\begin{tanim}\n İşte yeni bir tanım.\n\\end{tanim}\n\n\\begin{tanim}[Gauss]\n Gauss'un tanımı.\n\\end{tanim}\n\n\\end{document}\n\n\n4.9.2 Sayaçlar\nSayaçlar, belge sınıfına göre varsayılan değerleri kullanır. Örneğin book sınıfında bir teorem kullanıldığında “Teorem 2.3” (kitabın 2’inci bölümünde yer alan 3’üncü teorem), article sınıfında bir teorem kullanıldığında “Teorem 3” (makaledeki 3’üncü teorem) benzeri çıktılar alınır. Varsayılan ayarları değiştirmek için sayacın takip etmesi istenilen bölüm seviyesi (chapter, section gibi) belirtilebilir:\n\\newtheorem{<ad>}{<başlık>}[<sayaç>]\nÖrneğin article sınıfında sahanlığa\n\\newtheorem{teorem}{Teorem}[section]\nkomutunu verdiğinizde teoreminiz \\section başlık seviyesinin numarasına göre numara alır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\usepackage{amsthm}\n\\newtheorem{teorem}{Teorem}[section]\n\\begin{document}\n\n\\section{Teoremler}\n\n\\begin{teorem}\n İşte bölüm numarasını takip eden teorem.\n\\end{teorem}\n\n\n\n\\end{document}\nVarsayılan olarak, her teorem kendi sayacını kullanır. Bununla birlikte, benzer teoremlerin (örneğin Teoremler, Lemmalar ve Sonuçlar) bir sayacı paylaşması yaygındır. Bu durumda, sonraki teoremleri şöyle tanımlayın:\n\\newtheorem{<ad>}[<sayaç>]{<başlık>}\nBurada <sayaç> kullanılacak olan sayacın adıdır. Genelde ana teorem adı olur. Örneğin sahanlıkta\n\\newtheorem{lemma}[teorem]{Lemma}\ntanımlamasını yaparsanız (Bu komutu verebilmek için önceden teorem ortamı tanımlanmış olmalıdır) artık Lemma’lar Teorem’lerle aynı sayacı kullanacaktır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\usepackage{amsthm}\n\\newtheorem{teorem}{Teorem}[section]\n\\newtheorem{lemma}[teorem]{Lemma}\n\\begin{document}\n\n\\section{Teoremler}\n\n\\begin{teorem}\n İşte bölüm numarasını takip eden teorem.\n\\end{teorem}\n\n\\begin{lemma}\n İşte teoremle aynı sayacı paylaşan lemma.\n\\end{lemma}\n\n\\end{document}\n\\newtheorem komutu en fazla bir tane isteğe bağlı değişken içerebilir. Ayrıca komut \\newtheorem* şekilde kullanılırsa numara verilmeyen bir teorem tanımlamış olur.\n\n\n4.9.3 Kanıtlar\nBir teoremin kanıtı proof ortamında yazılır. Genel kullanım şöyledir:\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\usepackage{amsthm}\n\\newtheorem{teorem}{Teorem}[section]\n\\begin{document}\n\n\\section{Teoremler}\n\n\\begin{teorem}\n İşte teoremim.\n\\end{teorem}\n\n\\begin{proof}\n İşte kanıtım.\n\\end{proof}\n\n\\end{document}\nBu ortamı kullandığınızda en sona kanıtın bittiği anlamında bir kare (QED adıyla da bilinir) ekler ve Türkçe dil paketi ekli belgelerde “Kanıt” adını yazar. Bu ad, \\proofname komutunda saklı olup istenirse değiştirilebilir:\n\\renewcommand{\\proofname}{İspat}\nBu komuttan sonra kullanılan tüm proof ortamlarında artık “Kanıt” yerine “İspat” yazar.\nAyrıca kanıtı tek seferliğine elle adlandırmak isterseniz, kendi adınızı köşeli parantezler içine yazabilirsiniz:\nKanıtın sonunu bildiren \\square işareti bazen son satırda yalnız kalırsa, \\qedhere komutuyla onu doğru yere oturtabilirsiniz:\nÖzel bir QED sembolü kullanmak isterseniz \\qedsymbol komutunu yeniden tanımlayabilirsiniz.\nEğer sembolü gizlemek isterseniz \\renewcommand komutunun son değişkenini boş bırakmanız yeterli olur.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\usepackage{amsthm}\n\\newtheorem{teorem}{Teorem}[section]\n\\begin{document}\n\n\\section{Teoremler}\n\n\\begin{teorem}\n İşte teoremim.\n\\end{teorem}\n\n\\begin{proof}\n İşte kanıtım.\n\\end{proof}\n\n\\begin{proof}[İspat]\n İşte diğer ispatım.\n\\end{proof}\n\n\\begin{proof}\n Sadeleştirme yapılırsa \\[E=mc^2 \\qedhere\\]\n\\end{proof}\n\n\\renewcommand{\\qedsymbol}{$\\blacksquare$}\n\\begin{proof}\n Siyah kare.\n\\end{proof}\n\n\\end{document}\n\n\n4.9.4 Teorem Stilleri\nTeorem stilleri \\theoremstyle komutuyla değiştirilir. Bu komut, \\newtheorem komutu kullanarak tanımlanan ortamların çıktısını değiştirme olanağını verir.\n\\theoremstyle{<stil adı>}\nBuradaki <stil adı> kullanmak istediğiniz stildir. Bu komuttan sonra tanımlanmış tüm teoremler bu stili kullanacaktır. \\LaTeX’de önceden tanımlanmış stiller aşağıdakilerdir:\n\n\nTablo 4.5: Teorem Stilleri\n\n\n\n\n\n\n\nStil Adı\nAçıklama\nGörünüm\n\n\n\n\nplain\nTeoremler, lemmalar, önermeler vb. için kullanılır (varsayılan)\nBaşlık düz ve kalın, gövde metni vurgulu\n\n\ndefinition\nTanımlar ve örnekler için kullanılır\nBaşlık düz ve kalın, gövde metni düz\n\n\nremark\nAçıklamalar ve notlar için kullanılır\nBaşlık vurgulu, gövde metni düz\n\n\n\n\nÖrneğin sahanlığa\n\\theoremstyle{remark}\n\\newtheorem{notum}{Not}\nkomutlarını verip notum ortamını kullandığınızda başlık vurgulu, gövde metni düz olacaktır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\usepackage{amsthm}\n\\theoremstyle{remark}\n\\newtheorem{notum}{Not}\n\\begin{document}\n\n\\section{Stiller}\n\n\\begin{notum}\n Buraya not aldım.\n\\end{notum}\n\n\n\n\\end{document}\n\n4.9.4.1 Özel Stiller\nKendi stilinizi tanımlamak için \\newtheoremstyle komutunu kullanabilirsiniz:\n\\newtheoremstyle{<stil adı>}% kullanılacak stilin adı\n{<üst boşluk>}% teoremin üstünde bırakılacak boşluk. Örn:3pt.\n{<alt boşluk>}% teoremin altında bırakılacak boşluk. Örn:3pt.\n{<gövde yazı tipi>}% teorem gövdesinde kullanılacak yazı tipi.\n %Örn:\\normalfont, \\itshape...\n{<girinti>}% Paragraf girintisi ölçüsü. Örn:0pt\n{<başlık yazı tipi>}% teorem başlık yazı tipi.\n %Örn:\\sffamily,\\bfseries\n{<noktalama>}% başlıktan sonraki noktalama.\n %Noktalama istenmezse boşluk bırakılabilir. Örn:\\; \n{<boşluk>}% başlıktan sonraki boşluk. Örn:0.25em\n{<manuel başlık>}% Elle başlık belirtilir.\nBoş bırakılan herhangi bir değişken olursa varsayılan değerler alınır. Son satırdaki <manuel başlık> değişkeni \\thmname, \\thmnumber ve \\thmnote komutlarıyla biçimlendirilir. Birinci komut başlığı, ikinci komut numarayı, üçüncüsü ise notu biçimlendirmek içindir.\nNot değişkeni her zaman isteğe bağlıdır, ancak başlık oluşturulurken \\thmnote komutuyla belirtilmezse varsayılan olarak görünmeyecektir.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{amsmath,amssymb,amsfonts}\n\\usepackage{amsthm}\n\\newtheoremstyle{benimstilim}\n{5pt}% \n{5pt}% \n{\\normalfont}% \n{} %\n{\\bfseries\\sffamily}%\n{\\;}% \n{0.25em}% \n{\\thmname{#1} \\thmnumber{#2}\\thmnote{---#3}.}%\n\\theoremstyle{benimstilim}%\n\\newtheorem{sonuc}{Sonuç}%\n\n\\begin{document}\n\n\\section{Özel Stiller}\n\n\\begin{sonuc}[Özel]\n Sonucu görüyor olmalısınız.\n\\end{sonuc}\n\n\n\n\\end{document}"
  },
  {
    "objectID": "05-yuzergezer.html#şekiller",
    "href": "05-yuzergezer.html#şekiller",
    "title": "5  Yüzer Gezer Nesneler",
    "section": "5.2 Şekiller",
    "text": "5.2 Şekiller"
  },
  {
    "objectID": "06-ozelsayfalar.html",
    "href": "06-ozelsayfalar.html",
    "title": "6  Özel Sayfalar",
    "section": "",
    "text": "Bu bölümde bir kitaptaki özel sayfalar olan kaynakça ve dizinden bahsedeceğiz."
  },
  {
    "objectID": "06-ozelsayfalar.html#kaynakça",
    "href": "06-ozelsayfalar.html#kaynakça",
    "title": "6  Özel Sayfalar",
    "section": "6.1 Kaynakça",
    "text": "6.1 Kaynakça\n\n6.1.1 Bütünleşik Kaynakça\n\\LaTeX’de kaynakça oluşturmanın bir yolu, kaynakçayı kaynak dosyanızın (.tex uzantılı ana dosyanız) içindeki bir ortamda hazırlamaktır. Kullanacağınız ortam thebibliography ortamıdır.\n\\begin{thebibliography}{<sayı>}\n\n\\end{thebibliography}\nOrtam komutundaki <sayı> değişkeni, kaynağın etiketi veya etiket girilmediği takdirde verilen sıra numarasının kaç karakter uzunluğunda olacağını belirtir. Örneğin ortam\n\\begin{thebibliography}{9}\n        \n\\end{thebibliography}\nşeklinde oluşturulursa etiket veya etiket girilmediği takdirde verilen sıra numarası için bir karakter uzunluğunda yer ayrılması gerektiği ve toplamda bu ortama en fazla dokuz adet kaynak girileceği belirtilmiş olur. Eğer dokuzdan fazla kaynak girilecekse, 99 kaynağa kadar izin veren “45” gibi iki basamaklı bir sayı girilebilir.\nOrtama her kaynak \\bibitem komutuyla eklenir ve komuttan sonra kaynağı tanımlayıcı bilgiler girilir. Bu bilgiler girilirken biçim elle oluşturulur.\n\\bibitem[<etiket>]{<anahtar>}\nKomutun zorunlu değişkeni olan <anahtar>, ileride kaynağa atıf yapmak için kullanacağınız bir tanımlayıcıdır ve her kaynak için benzersiz olmalıdır. Genelde akılda kolay kalması için yazarın soyadı ve yayın yılı olacak şekilde düzenlenir.\nZorunlu olmayan <etiket> değişkeni girilmediği takdirde kaynağın önüne köşeli parantezler içinde kaynağın sıra numarası yazdırılır.\nKaynağın sıra numarasının köşeli parantezler içinde yazılması istenmezse aşağıdaki komutlarla değişiklik yapılabilir.\n\\makeatletter\n\\renewcommand{\\@biblabel}[1]{\\textbf{#1.}}\n\\makeatother\nBu komut verilirse sıra numaraları parantezsiz, kalın ve ardında nokta olacak şekilde yazılır.\nOrtam genelde \\end{document} komutundan hemen önce oluşturulur ve ortamın oluşturulduğu yerde \\LaTeX, book ve report sınıflarında eğer Türkçe dil paketi eklenmişse “Kaynakça”, article sınıfında ise “Kaynaklar” ismini ve ardından kaynakları yazdırır.\nKaynaklardan herhangi birine atıf \\cite komutuyla yapılır.\n\\cite[<seçenekler>]{<anahtar>}\nKomutun zorunlu değişkeni olan <anahtar>, atıf yapılmak istenen kaynağın \\bibitem komutundaki zorunlu değişkenidir. İsteğe bağlı <seçenekler> değişkeninde ise sayfa numarası, bölüm numarası gibi fazladan vurgulanmak istenen bilgiler girilebilir.\nAtıf yapılan yerde kaynağın etiketi ya da etiket girilmediği takdirde sıra numarası köşeli parantez içinde yazdırılır. Eğer fazladan yapılan vurgu varsa, bu, etiket ya da sıra numarasının devamında virgülden sonra yazdırılır.\nAynı yerde birden fazla kaynağa atıf yapılacaksa atıf yapılacak kaynakların anahtarları aralarına virgül koyularak \\cite{<anahtar1>,<anahtar2>,<anahtar3>} şeklinde yazılır.\n\\documentclass{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\title{\\LaTeX'de Kaynakça Yönetimi 1: Bütünleşik Kaynakça}\n\\author{Zafer Acar}\n\n\\begin{document}\n\\maketitle\n\nWYSIWYG editörleri yerine, \\TeX/\\LaTeX{}  \\cite{lamport94}\ndizgi sistemini kullanmaya başlayın. Görüldüğü gibi kaynakça oluşturmak \nve atıf yapmak oldukça kolaydır.\n\nAli Nesin, \\cite[s.~47]{nesin07}'de pokerin matematiğini anlatıyor.\n\nİki kaynağa birden atıf \\cite{lamport94,nesin07} şeklinde yapılır.\n\n\\begin{thebibliography}{9}\n\\bibitem{lamport94}\nLeslie Lamport,\n\\textit{\\LaTeX: a document preparation system}, Addison Wesley,\nMassachusetts, 2nd edition, 1994.\n\n\\bibitem[N]{nesin07} Ali Nesin, \\textit{Matematik ve Oyun}, \n Nesin Yayıncılık, 2007.\n\\end{thebibliography}\n\\end{document}\n\n\n6.1.2 Kaynakçanın ayrı dosyada hazırlanması\nKaynakçayı ayrı bir dosyada hazırlayıp \\TeX dağıtımlarıyla hazır olarak gelen BibTEX programıyla yazdırabiliriz.\nBu yöntemde kaynakça, uzantısı .bib olan ayrı bir dosyada hazırlanır. Bu dosya basit bir metin dosyası olup, metin editörü ya da \\LaTeX editörü kullanılarak oluşturulabilir, düzenlenebilir. Ayrıca Mendeley ya da Jabref gibi akademik referans düzenleme programlarından da yararlanılabilir.\nBu yöntemin önemli avantajları vardır:\n\nBiçimlendirme otomatik yapılır. Eğer çalışmanızı yayımlayacak dergi ya da yayınevi kaynakçayı farklı bir formatta isterse her kaynağı tek tek elle biçimlendirmek zorunda kalmazsınız. Basit bir komut işinizi görür.\nDosyayı bir kere oluşturur ve sonra başka çalışmalarda kullanabilirsiniz.\nGoogle Akademik, Google Kitaplar ve DergiPark gibi platformlardan kullandığınız kaynakların BibTEX kodunu çekebilirsiniz (bkz. Şekil @ref(fig:fig-google)).\nYukarıda da bahsettiğimiz gibi Mendeley ve Jabref gibi akademik atıf düzenleme programlarını kullanarak kaynakların BibTEX kodunu oluşturabilir, düzenleyebilirsiniz.\n\n\n\n\n\n\n\n(a) Alıntı yap\n\n\n\n\n\n(b)BibTEX\n\n\n\n\n\n(c) Kodu kopyala\n\n\n\nŞekil 6.1: Google Akademik alıntı yapma\n\n\n\n6.1.2.1 Dosyanın hazırlanması\nAşağıda .bib uzantılı bir dosya örneği gösterilmiştir.\n@book{lang13,\n    title={Algebraic number theory},\n    author={Lang, Serge},\n    volume={110},\n    year={2013},\n    publisher={Springer Science \\& Business Media},\n    }\n@article{lamport78,\n    title={Time, clocks, and the ordering of events in a\n        distributed system},\n    author={Lamport, Leslie},\n    journal={Communications of the ACM},\n    volume={21},\n    number={7},\n    pages={558--565},\n    year={1978},\n    publisher={ACM},\n}\n@manual{Oetiker06,\n    author = {Oetiker, Tobias and Partl, Hubert and Hyna, Irene\n        and Schlegl, Elisabeth},\n    title  = {İnce bir {\\LaTeXe} Elkitabı veya, 116 dakikada\n        {\\LaTeXe}},\n    note   = {Türkçesi: Bekir Karaoğlu},\n    url    = {http://ftp.ntua.gr/mirror/ctan/info/lshort/turkish/\n        lshort-tr.pdf},\n    year   = {2006},\n}\nBu dosyada Serge Lang’a ait bir kitap (@book), Leslie Lamport’a ait bir makale (@article) ve \\LaTeX için bir teknik kılavuz (@manual) vardır.\nHer kaynağın ilk olarak @ işaretiyle türü belirtilir. Yukarıdakilere ek olarak rapor için @report, tez için @thesis, çevrimiçi kaynaklar için @online kullanılır. Bunların dışındaki birçok türe \\LaTeX editörlerinin menü çubuğuklarında bulunan “Kaynakça (Bibliography)” menüsünden ulaşılabilir.\nİlk girdi (lang13, lamport78, Oetiker06) kaynağa atıf yapmak için kullanılan anahtardır. Sonrasında gelenler de tahmin edilebileceği gibi başlık (title), yazar (author), yayıncı (publisher), yıl (year), dergi (journal), cilt (volume)… gibi kaynağı tanımlayan bilgilerdir. Bu tanımlamaların her biri eşittir işaretinden sonra iki çengelli parantez arasında yapılır (çift tırnak da kullanılabilir) ve her tanımlama (sonuncusu olsa dahi) virgülle ayrılır.\nYazar adı ya\nauthor={Adı Soyadı}\nya da\nauthor={Soyadı, Adı}\nşeklinde girilmelidir ve birden fazla yazar varsa yazarlar yukarıdaki yazımdan dolayı virgülle değil and ile ayrılmalıdır. Yazarları ayırmak için virgül kullanırsanız yüksek ihtimalle \\LaTeX, yazarların adları ve soyadlarını karıştıracaktır.\nBir diğer önemli nokta özel kelimeleri yazmak için kullanılan komutları ve aksanlı harfleri iki çengelli parantez içinde yazmaktır. Örneğin “â” için {\\^a} yazılmalıdır. Genel olarak sorun yaşanan karakterleri iki çengelli parantez içine yazmak gerekir.\nHer tür için zorunlu olarak belirtilmesi gereken bilgiler ve isteğe bağlı bilgiler vardır. Bunların ne olduklarını tahmin etmek zor değildir. Bu konuda editörden de yararlanabilirsiniz. Örneğin, .bib uzantılı dosyayı açıp editörde “Kaynakça \\rightarrow Tez” yolunu izlerseniz aşağıdaki listeyi yazdıracaktır.\n@thesis{ID,\n    author = {author},\n    title = {title},\n    type = {type},\n    institution = {institution},\n    date = {date},\n    OPTsubtitle = {subtitle},\n    OPTtitleaddon = {titleaddon},\n    OPTlanguage = {language},\n    OPTnote = {note},\n    OPTlocation = {location},\n    OPTmonth = {month},\n    OPTisbn = {isbn},\n    OPTchapter = {chapter},\n    OPTpages = {pages},\n    OPTpagetotal = {pagetotal},\n    OPTaddendum = {addendum},\n    OPTpubstate = {pubstate},\n    OPTdoi = {doi},\n    OPTeprint = {eprint},\n    OPTeprintclass = {eprintclass},\n    OPTeprinttype = {eprinttype},\n    OPTurl = {url},\n    OPTurldate = {urldate},\n}\nGörüldüğü gibi ilk altı satır zorunlu, OPT ile başlayanlar isteğe bağlıdır. İsteğe bağlı olanlardan belirtmek istediklerinizin başında bulunan OPT’yi silip tanımlamayı yapabilirsiniz.\nEditörden yararlanmanın diğer bir yolu “Kaynakça \\rightarrow Kaynakça Kaydı Ekle…” yolunu izlemektir. Bu yolu izlediğinizde aşağıdaki pencere açılır (örnek TeXstudio editörüne aittir).\n\n\n\n\n\nPencerenin solunda kaydı eklemek istediğiniz dosyayı ve ortada kayıt türünü belirtir, sağda da kaynağın bilgilerini girersiniz. Zorunlu bilgiler en üstte yer alan kalın yazılmış olanlardır.\n\n\n6.1.2.2 Kaynakçanın yazdırılması\nKaynakçayı yazdırmak için BibTEX’i kullanacağız. BibTEX’in \\LaTeX’le standart olarak geldiğini ifade etmiştik. Dolayısıyla bu programı kullanmak için ek bir şey yapmanız gerekmez.\nOluşturulan .bib uzantılı dosya \\bibliography komutuyla içeri aktarılır, \\bibliographystyle komutuyla da kullanılacak biçim belirtilir.\n\\bibliographystyle{<biçim>}\n\\bibliography{<dosya>}\nBurada yer alan <dosya> uzantısının belirtilmesine gerek yoktur. Dosyanın kaynakca.bib olduğunu varsayarak, komut \\bibliography{kaynakca} şeklinde verilir. Kullanılabilecek biçimler abbrv, acm, alpha, apalike, ieeetr, plain, siam ve unsrt’dir. Biçimlerin nasıl çıktı verdiklerini görmek için şuraya bakabilirsiniz.\nAtıf, bütünleşik kaynakçada olduğu gibi \\cite komutuyla yapılır fakat bütünleşik kaynakçadan farklı olarak atıf yapılmayan kaynaklar yazdırılmaz. Bazı kaynakların bu kuraldan ayrı tutulması istenirse \\nocite komutu, değişkenine kaynağın anahtarı yazılarak \\bibliography komutundan önce verilmelidir.\n\\nocite{<anahtar>}\nEğer tüm kaynakların bu kuraldan ayrı tutulması isteniyorsa komut \\nocite{*} şeklinde verilmelidir.\nKaynakçanın belgeye yazılması için kaynak dosyanın derlenip, BibTEX programının çalıştırılması ve ardından dosyanın en az iki kere daha derlenmesi gerekir. BibTEX programı, editörde “Araçlar \\rightarrow Kaynakça” yoluyla çalıştırılır (klavye kısa yolu F8). Aynı şey, uçbirimde sırasıyla\npdflatex kaynakdosya\nbibtex kaynakdosya\npdflatex kaynakdosya\npdflatex kaynakdosya\nkomutları çalıştırılarak yapılabilir.\nAşağıda kaynak dosya örneği verilmiştir. Bu dosyayı derleyebilmeniz için içeriği yukarıda verilen kaynakca.bib dosyasının bu dosyayla aynı dizinde olması gerektiğini unutmayınız.\n\\documentclass[10pt,a4paper]{article}\n\\usepackage[T1]{fontenc}\n\\usepackage[turkish]{babel}\n\\usepackage{dtk-logos} % \\BibTeX komutu için...\n\\title{Kaynakça Yönetimi 2: \\BibTeX}\n\\author{Zafer Acar}\n\\begin{document}\n\\maketitle\nLang'ın kitabı \\cite{lang13}, Lamport'un makalesi  \\cite{lamport78} \nve \\LaTeX{} için Türkçe kaynak \\cite{Oetiker06} \\dots\n\n\\bibliographystyle{siam}\n\\bibliography{kaynakca}\n\\end{document}"
  },
  {
    "objectID": "06-ozelsayfalar.html#dizin",
    "href": "06-ozelsayfalar.html#dizin",
    "title": "6  Özel Sayfalar",
    "section": "6.2 Dizin",
    "text": "6.2 Dizin\nBilimsel bir yapıtta bulunması gereken dizin ya da diğer adıyla indeks, bir yapıtın kişi, konu, yer adı vb. bakımından içindekileri yer numarasıyla belirten ve yapıtın arkasında yer alan alfabetik listedir.\n\\LaTeX’de dizin oluşturabilmek için sahanlığa\n\\usepackage{makeidx}\n\\makeindex\nkomutları girilir. Birinci komut dizin için gerekli olan makeidx paketini çağırır, ikinci komut ise dizinleme komutlarını etkinleştirir.\nDizinde gösterilmek istenen madde, \\index komutunun değişkeni olarak girilir:\n\\index{<madde>}\nDizin maddesi girme örnekleri aşağıda gösterilmiştir.\n\n\n\n\n\n\\LaTeX, kaynak dosyanızı derlediğinizde bu dizin maddelerini sayfa numaralarıyla birlikte, kaynak dosyayla adı aynı fakat uzantısı .idx olan bir dosyaya kaydeder (bu dosyaya ham dosya denir). Bu dosyanın makeindex programından geçirilmesi gerekir. Bu editörde “Araçlar \\rightarrow Dizin” yoluyla yapılır. Aynı şey uçbirimde,\nmakeindex kaynakdosya\nkomutu girilerek yapılabilir. Dosya tekrar derlendiğinde sıralanmış dizin belgeye yazılır. Bunun için dizinin yazılması istenen yere \\printindex komutu verilir. Bu genelde, belgenin en sonunda \\end{document} komutundan hemen öncedir. Komutun girildiği yere \\LaTeX, Türkçe dil paketi ekli belgelerde “Dizin” başlığını oluşturur ve belgede \\index komutuyla eklenmiş maddeleri sırayla dizer.\nProgram, ham dosyayı işleyip dizin maddelerini abece sırasına göre dizer ve .ind uzantılı bir dosyaya aktarır. Ancak, Türkçe aksanlı harflerle başlayan kelimeler doğru yerde yazılmazlar. Bu harflerin doğru yere yazılması için .ind uzantılı dosyanın metin editörüyle açılarak elle düzenlenmesi gerekir. Ardından kaynak dosya derlenir. Elle düzeltmeden sonra tekrar makeindex programı çalıştırılırsa .ind uzantılı dosya tekrar oluşturulacağı için elle yapılan düzeltmeler bozulur. O yüzden düzeltme en son yapılmalıdır.\n\n\n\n\n\n\nNot\n\n\n\nAksanlı harflerle başlayan kelimelerin doğru yerde yazılmaları için aksanlı madde girme komutundan faydalanılabilir. Örneğin “çekiç” kelimesinin peşine \\index{czekiç@çekiç} komutu verilirse bu kelime doğru yerde dizilecektir. Burada yapılan sorun yaratan “ç” harfi yerine “cz” yazılmasıdır.\n\n\n\n6.2.1 Çoklu Dizin\nBirden fazla dizin oluşturmak isterseniz (örneğin biri normal dizin diğeri de simgeler dizini) index paketini kullanabilirsiniz. Her dizin paket eklendikten ve \\makeindex komutu sahanlıkta verildikten sonra \\newindex komutuyla tanıtılır.\n\\usepackage{index}\n\\makeindex\n\\newindex{normal}{ndx}{nnd}{Normal Dizin}\n\\newindex{simge}{sdx}{snd}{Simgeler Dizini}\nKomutun dört değişkeni vardır. Bunlar sırasıyla, dizin adı (örnekte normal ve simge), oluşturulacak ham dosyanın uzantısı (örnekte .ndx ve .sdx), makeindex tarafından ham dosyanın işlenmesiyle oluşturulan dosyanın uzantısı (örnekte .nnd ve .snd) ve son olarak \\printindex komutuyla yazdırılacak başlıktır (örnekte “Normal Dizin” ve “Simgeler Dizini”). Buradaki uzantılar varsayılan .idx ve .ind uzantılardan farklı olmalıdır.\nArdından bir kelime ya da simgeyi dizine eklemek için, eklemek istenilen dizine göre \\index komutu köşeli parantezler içinde dizin adı belirtilerek kullanılır.\n\\index[normal]{kuvvet}\n\\index[simge]{F@$\\vec{F}$}\nBirinci komut, “kuvvet” kelimesini normal dizine, ikinci komut \\vec{F} simgesini simgeler dizinine ekler.\nBelge derlendikten sonra iki tane \\makeindex komutu uçbirimde,\nmakeindex kaynakdosya.ndx -o kaynakdosya.nnd \nmakeindex kaynakdosya.sdx -o kaynakdosya.snd \nşeklinde verilir. Belgenizde dizinlerin yazılması istenen yere de\n\\printindex[normal]\n\\printindex[simge]\nkomutları verilir. Ardından belge tekrar derlenerek dizinler yazdırılır.\nÇoklu dizin için diğer bir seçenek multind paketini kullanmaktır. Görece index paketine göre daha pratiktir. Sahanlığa\n\\usepackage{multind}\n\\makeindex{normal}\n\\makeindex{simge}\nkomutlarıyla normal ve simge adında iki dizin tanımlanır. Yine dizine yazılması istenen maddeler \\index komutundan önce çengelli parantezler içinde dizin adı belirtilerek girilir.\n\\index{normal}{kuvvet}\n\\index{simge}{F@$\\vec{F}$}\nBu defa makeindex programı uçbirimde\nmakeindex normal\nmakeindex simge\nkomutlarıyla çalıştırılır. Yine \\printindex komutları dizinlerin eklenmesi istenen yere\n\\printindex{normal}{Normal Dizin}\n\\printindex{simge}{Simgeler Dizini}\nşeklinde verilir.\n\n\n6.2.2 Dizinin İçindekiler tablosuna yazılması\nDizini İçindekiler tablosuna yazmak için \\printindex komutunun peşine book ve report sınıflarında \\addcontentsline komutu,\n\\addcontentsline{toc}{chapter}{\\indexname}\nşeklinde, article sınıfında ise\n\\addcontentsline{toc}{section}{\\indexname}\nşeklinde verilmelidir. Çoklu dizin oluşturulmuşsa, book ve report sınıflarında\n\\printindex{normal}{Normal Dizin}\n\\addcontentsline{toc}{chapter}{Normal Dizin}\n\\printindex{simge}{Simgeler Dizini}\n\\addcontentsline{toc}{chapter}{Simgeler Dizini}\nşeklinde, article sınıfında ise komutlardaki chapter yazan yere section yazarak verilmelidir."
  },
  {
    "objectID": "07-ozellestirmeler.html",
    "href": "07-ozellestirmeler.html",
    "title": "7  Özelleştirmeler",
    "section": "",
    "text": "\\LaTeX’de varsayılan kağıt boyutunun letterpaper olduğunu Bölün @ref(belgesinifi)’de ifade etmiştik. Ayrıca aynı yazıda başka bir kağıt boyutunun nasıl seçileceğine de yer vermiştik. Şimdi ise hem sayfamızın kenar boşluklarının nasıl ayarlanacağından hem de ön tanımlı olmayan, tamamen keyfi bir sayfa boyutunun nasıl belirleneceğinden bahsedelim.\nBu tür sayfa düzenlemeleri için \\LaTeX’de geometry paketi kullanılır. Öncelikle paketi\n\\usepackage{geometry}\nkomutuyla sahanlığa ekleyin. Ardından paket seçeneklerinde aşağıdaki tanımlamalarla sayfanın düzenini değiştirebilirsiniz:\n\n\n\nTanım\nDeğer\n\n\n\n\ntop\nüst boșluk\n\n\nbottom\nalt boșluk\n\n\nleft\nsol boșluk\n\n\nright\nsağ boșluk\n\n\npaperwidht\nsayfa genișliği\n\n\npaperheight\nsayfa yüksekliği\n\n\n\nÖrneğin sahanlıkta\n\\usepackage[paperwidth=175mm,paperheight=255mm,top=2cm,bottom=2cm,\nleft=2.5cm,right=2.5cm]{geometry}\nkomutunu verdiğinizde boyutu 175\\times 255 mm, üst ve alt boşluğu 2 cm, sol ve sağ boşluğu 2.5 cm olan bir sayfa düzeni oluşturursunuz. Dilerseniz paperwidth vepaperheight tanımlamalarını yerine, örneğin a4paper yazarak sadece kenar boşluklarla ilgili tanımlamaları yapabilirsiniz.\n\n\n\n\n\n\nNot\n\n\n\n\\LaTeX’de milimetre (mm) ve santimetre (cm) dışında inç (in), punto (pt), em ve ex gibi ölçü birimleri de vardır. Bunlara ileride değinilecektir. Ayrıca yine ileride daha ayrıntılı sayfa düzeni oluşturmaktan da bahsedeceğiz. Bu aşamada bu kadarı yeterli olacaktır."
  },
  {
    "objectID": "08-kaynakca.html",
    "href": "08-kaynakca.html",
    "title": "Kaynakça",
    "section": "",
    "text": "Goossens, Michel, Sebastian PQ Rahtz, Sebastian Rahtz, and Frank\nMittelbach. 1997. The LaTeX Graphics Companion: Illustrating\nDocuments with TeX and PostScript. Vol. 1. Addison-Wesley\nProfessional.\n\n\nHoffmann, Jobst. 2018. The Listings Package. http://ftp.cc.uoc.gr/mirrors/CTAN/macros/latex/contrib/listings/listings.pdf.\n\n\nLamport, Leslie. 1994. LaTeX: A Document Preparation System: User’s\nGuide and Reference Manual. Addison-wesley.\n\n\nLaTeX2e: An Unofficial Reference Manual. 2018. http://puszcza.gnu.org.ua/software/latexrefman/.\n\n\nMittelbach, Frank, Michel Goossens, Johannes Braams, David Carlisle, and\nChris Rowley. 2004. The LaTeX Companion. Addison-Wesley\nProfessional.\n\n\nOetiker, Tobias, Hubert Partl, Irene Hyna, and Elisabeth Schlegl. 2006.\nİnce bir LaTeX2e Elkitabı veya, 116 dakikada\nLaTeX2e. http://ftp.ntua.gr/mirror/ctan/info/lshort/turkish/lshort-tr.pdf.\n\n\nPakin, Scott. 2017. The Comprehensive LaTeX Symbol List; The\nComprehensive LaTeX Symbol List. http://ftp.cc.uoc.gr/mirrors/CTAN/info/symbols/comprehensive/symbols-a4.pdf.\n\n\nPantieri, Lorenzo. 2017. LaTeXpedia. http://www.lorenzopantieri.net/LaTeX_files/LaTeXpedia.pdf.\n\n\nRakhimov, Abdugafur, and Orhan Kesemen. 1990. Adım Adım\nLaTeX. Vol. 1. http://ftp.ntua.gr/mirror/ctan/info/turkishintro/LATEX_Turkish_Volume_1.pdf.\n\n\nReckdahl, Keith. 2006. Using Imported Graphics\nin LaTeX and pdfLaTeX. http://ftp.cc.uoc.gr/mirrors/CTAN/info/epslatex/english/epslatex.pdf.\n\n\nTalbot, Nicola L. C. 2012. LaTeX for Complete Novices. Vol. 1.\nDickimaw LaTeX Series. Norfolk, UK: Dickimaw Books.\n\n\n———. 2013. Using LaTeX to Write a PhD Thesis. Vol. 2. Dickimaw\nLaTeX Series. Norfolk, UK: Dickimaw Books.\n\n\nTantau, Till. 2019. The TikZ and PGF Packages\nManual for version 3.1. https://sourceforge.net/projects/pgf."
  },
  {
    "objectID": "03-dizgi.html#özel-kelimeler",
    "href": "03-dizgi.html#özel-kelimeler",
    "title": "3  Dizgi",
    "section": "3.6 Özel kelimeler",
    "text": "3.6 Özel kelimeler\n\\LaTeX’de bazı özel kelimelerin dizilişlerinin kelimeyi oluşturan harflerin yazılmasıyla elde edilemeyeceğini fark etmiş olmalısınız. Bu özel kelimeler için komutlar kullanılır.\n\n\n\nKomut\nÇıktı\nGerekli Paket\n\n\n\n\n\\today\n\n\n\n\n\\TeX\n\\TeX\n\n\n\n\\LaTeX\n\\LaTeX\n\n\n\n\\LaTeXe\n\n\n\n\n\\AmS\n\\textrm{\\AmS}\namsmath\n\n\n\\BibTeX\nBibTEX\ndtk-logos\n\n\n\\MiKTeX\n\\textrm{\\MikTeX}\ndtk-logos"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "\\LaTeX Dersleri",
    "section": "",
    "text": "Tüm bu düğmelerin PDF sürümde olmayacağını unutmayın.↩︎"
  },
  {
    "objectID": "03-dizgi.html#cümle-sonları",
    "href": "03-dizgi.html#cümle-sonları",
    "title": "3  Dizgi",
    "section": "3.3 Cümle Sonları",
    "text": "3.3 Cümle Sonları\n\\LaTeX, okumayı kolaylaştırmak için cümle sonlarında fazladan boşluklar bırakır. Bunu yaparken de her cümlenin nokta, soru işareti veya ünlem işaretiyle bittiğini varsayar. Kısaltmalarda büyük harflerden sonra nokta gel(ebil)diğinden, büyük harften sonra nokta koyulursa \\LaTeX bunu cümle sonu saymaz. Eğer bir büyük harften sonra nokta koyuyorsanız ve burası cümlenin sonuysa \\LaTeX’in burayı cümle sonu sayması için büyük harften sonraki noktanın önüne \\@ koymanız gerekir.\n\\LaTeX’in noktadan sonra fazladan boşluk koymamasını isterseniz \\frenchspacing komutunu kullanırsınız. Bu komutu kullandıysanız, artık noktadan önce \\@ koymanıza gerek yoktur. Daha sonra tekrar cümle sonlarında fazladan boşluk kullanmak istenirse de \\nonfrenchspacing komutu kullanılır.\nUnvan kısaltmasından sonra unvanın ait olduğu kelimeyle birlikte kalması ve fazladan boşluk bırakılmaması için tilda (~) işareti kullanılabilir. Bu işaret hem genişlemeyen bir boşluk bırakır hem de satırın orada kesilmesini önler."
  },
  {
    "objectID": "03-dizgi.html#renkli-yazma",
    "href": "03-dizgi.html#renkli-yazma",
    "title": "3  Dizgi",
    "section": "3.7 Renkli Yazma",
    "text": "3.7 Renkli Yazma\n\\LaTeX’de renkler color ya da xcolor paketleriyle kullanılır. İkinci paket daha güçlüdür.\n\\usepackage{xcolor}\nkomutuyla paketi ekledikten sonra \\color ya da \\textcolor komutları aşağıdaki şekillerde kullanılır.\n\\color{red}{Kırmızı}\\\\\n{\\color{blue} Tamamı mavi}\\\\\n\\textcolor{pink}{Pembe}\nKullanılabilecek renk adları black, white, gray, darkgray, lightgray, brown, red, green, blue, cyan, magenta, lime, olive, orange, pink, purple, teal, violet ve yellow’dur.\nEğer \\documentclass komutunun seçeneğine divpsnames yazılırsa aşağıdaki renkler de kullanılabilir duruma gelir.\n\n\n\nŞekil 3.1: dvipsnames seçeneğiyle gelen renkler\n\n\nBunlar da yeterli gelmiyorsa seçeneklere bir de svgnames yazın ve buradaki yüzden fazla rengi kullanılabilir duruma getirin.\n\\documentclass[svgnames,dvipsnames]{article}\n\n3.7.1 Yeni renkler oluşturmak\n\\LaTeX’in size hazır olarak verdiği renkler yeterli gelmezse kendi renklerinizi oluşturabilirsiniz. Bu, iki şekilde yapılabilir.\nHazır renkler istenilen oranlarda karıştırılarak yeni renkler elde edilebilir. Aşağıda karışımın nasıl hazırlanabileceği gösterilmiştir.\n\\color{blue!80}{\\%80 mavi \\%20 beyaz}\\\\\n\\color{red!40!blue}{\\%40 kırmızı \\%60 mavi} \\\\\n{\\color{yellow!20!green!75!black} \\%20x0.75=15 sarı\n\\%(100-20)x0.75=60 yeşil \\%100-75=25 siyah}\n\nİkinci yol \\definecolor komutuyla renk modelleri kullanmaktır.\n\n(#tab:renkmod) Renk Modelleri\n\n\n\n\n\n\nModel\nAçıklama\n\n\n\n\ngray\nGrinin tonları (0-1). 0 (siyah), 1 (beyaz). Yani 0.95 çok açık gri, 0.30 koyu gri olur.\n\n\nrgb\nRed, Green, Blue (0-1). Üç renk (kırmızı, yeșil, mavi) 0 ile 1 arasında bir sayıyla temsil edilir.\n\n\nRGB\nRed, Green, Blue (0-255). Üç renk (karmızı, yeșil, mavi) 0 ile 255 arasında bir sayıyla temsil edilir.\n\n\nHTML\nRed, Green, Blue (OO-FF). Kodlar RRGGBB şeklinde verilir.\n\n\ncmyk\nCyan, Magenta, Yellow, Black (0-1). Dört renk (camgöbeği, eflatun, sarı, siyah) 0 ile 1 arasında bir sayıyla temsil edilir.\n\n\n\nKomut\n\\definecolor{<isim>}{<renk modeli>}{<kod>}\nşeklinde verilir. Burada <isim>, sizin daha sonra kullanmak üzere vereceğiniz bir isimdir. Kodlar için HueSnap adresinden yararlanabilirsiniz. Örneğin\n\\definecolor{renk1}{gray}{0.50}\n\\definecolor{renk2}{rgb}{1,0.7,0.3}\n\\definecolor{renk3}{RGB}{125,32,200}\n\\definecolor{renk4}{HTML}{CC33CC}\n\\definecolor{renk5}{cmyk}{0,0.7,1,0.5}\nkomutlarıyla renk1, renk2, renk3, renk4 ve renk5 adında beş adet renk tanımlanmış olur. Bu komutlar ya sahanlığa ya da bu renkleri kullanacağınız satırdan önce gövdeye yazılmalıdır.\nYeni oluşturduğunuz rengi tek seferlik kullanacaksanız\n\\color[<model>]{<kod>}\n\\textcolor[<model>]{<kod>}{<metin>}\nkomutlarını kullanabilirsiniz.\n{\\color[RGB]{102,0,51} Bol}\\\\\n\\textcolor[RGB]{0,76,153}{Çeşit bol}\nMetnin arka planını renklendirmek için \\colorbox komutu kullanılır. Benzer \\fcolorbox komutu aynı şeyi çizgi çizerek yapar.\n\\colorbox{<arka plan rengi>}{<metin>}\n\\colorbox[<renk modeli>]{<arka plan rengi>}{<metin>}\n\\fcolorbox{<çizgi rengi>}{<arka plan rengi>}{<metin>}\n\\fcolorbox[<renk modeli>]{<çizgi rengi>}{<arka plan rengi>}{<metin>}\nKomutlar yukarıda gösterildiği şekilde kullanılabilir.\n\\colorbox{Cyan}{Metin}\n\\colorbox[rgb]{0.4,0.4,0.5}{Metin}\n\\fcolorbox{red}{yellow}{Metin}\n\\fcolorbox[RGB]{0,0,0}{255,204,255}{Metin}\nSayfaları renklendirmek için ise \\pagecolor komutu kullanılır. Komutun zorunlu değişkeninde renk belirtilir. Tekrar normale (beyaz) dönmek için \\nopagecolor komutu kullanılır. Eğer bu işe yaramazsa \\pagecolor{white} komutunu kullanabilirsiniz."
  }
]