[["index.html", "LaTeX Dersleri Önsöz", " LaTeX Dersleri Zafer Acar 2022-01-25 Önsöz "],["genel.html", "Bölüm 1 Genel", " Bölüm 1 Genel Bu bölümde LaTeXle ilgili genel bilgilerden bahsedeceiz. "],["latex-nedir.html", "1.1 LaTeX Nedir?", " 1.1 LaTeX Nedir? Önce TeXle balayalm. TeX, 1978den itibaren Donald Knuth tarafndan belgelerin bilgisayarda dizilmesi için gelitirdii bir dizgi sistemidir. LaTeX ise TeXin kullanmn kolaylatrmak için 1984 ylnda Leslie Lamport tarafndan tasarlanm bir makro pakettir. LaTeX, genelde WYSIWYG (Ne Görüyorsan Onu Alrsn) editörleriyle karlatrlr. WYSIWYG, Microsoft Word, Libreoffice Writer gibi kelime ilemcilere ya da Adobe Indesign gibi programlara verilen genel bir isimdir. Hepsinin ortak özellii, girdi ile çktnn ayn anda ve birlikte görünmesidir. Bir metnin genel görünümü ve okunabilirlii, metnin nasl hizalandndan ve kesildiinden büyük ölçüde etkilenir. LaTeX, tüm paragraf için hizalamay ve kesmeleri optimize eden son derece gelimi TeX algoritmalarn kullanr. Kelime ilemciler ve dier programlar, satr bana çaltklar için oldukça yetersiz kalrlar. Bu, dier eylerin yan sra düzensiz aralklara ve birçok ksa çizgiye sebep olur. Sonuçlar görmeniz için Microsoft Word 2008 (Mac), Adobe InDesign CS4 ve LaTeXle dizilmi bir metni uradan inceleyebilirsiniz. Sonuç, LaTeXin dier programlarn her ikisinden de üstün olduunu açkça gösterir: iki kat daha az tireleme kullanr ve yine de sözcük aralndaki varyasyon, Word veya InDesigndan belirgin ekilde daha azdr. LaTeXte çok büyük sözcük aral içeren satrlar olumaz. LaTeXde girdi ve çkt ekran farkldr ve çkty görmek için girdinin derleme ileminden geçmesi gerekir. Ayrca birçok ey için WYSIWYG editörlerinde olmayan yaplar vardr. imdi, bu yaplarn ne olduklar ve ne ie yaradklarn açklayalm. "],["önemli-yaplar.html", "1.2 Önemli Yaplar", " 1.2 Önemli Yaplar 1.2.1 Komutlar LaTeX komutlar bir geribölü (\\) iaretiyle balar ve ya sadece harflerden ya da bir tane harf olmayan karakterden oluurlar. Komut yazldktan sonra ya boluk, ya bir say ya da harf olmayan bir karakter gelebilir. Çou komut, zorunlu deiken alr. Bu zorunlu deiken komut adndan sonra çengelli parantezler içine yazlr. Zorunlu deiken alan komutlar, zorunlu olmayan (istee bal) deikenler de alabilir, bunlar da komut adndan sonra gelen köeli parantezler içine yazlrlar. Eer deikenler birden fazlaysa aralarna virgül koyularak ayrlr. \\: \\LaTeX \\item[...] \\emph{...} \\documentclass[...]{...} \\subfloat[...][...]{...} \\raisebox{...}[...][...]{...} \\multicolumn{...}{...}{...} {\\bfseries ...} Fikir vermesi açsndan yukarda dokuz adet komut örnei verilmitir. Birinci komut bir tane harf olmayan karakterden oluan bir komuttur. kincisi, deikeni olmayan bir komuttur. Baz harflerin büyük bazlarnnsa küçük olmas komutlarn büyük-küçük harfe duyarl olduunu gösterir. Dokuzuncu komut ise bildirim eklinde verilmitir. 1.2.2 Paketler LaTeXde baz özelliklerin (renkli yazmak, ekil eklemek vb.) kullanlabilmesi için kaynak dosyaya baz paketlerin eklenmesi gerekir. Bu, \\usepackage komutuyla yaplr. Bu komutun zorunlu deikenine paket ad, zorunlu olmayan ksmna ise paket seçenekleri yazlr: \\usepackage[&lt;seçenekler&gt;]{&lt;paket ad&gt;} Bu komutla paketin kaynak dosyaya eklenmesi TeX datmyla sisteminize kurulmu olan paketin belgeye çarlarak ie koulmas demektir. 1.2.3 Ortamlar LaTeXde ortamlar önemli bir yer tutar. Örnein document bir ortamdr. Ortamlar birden fazla ögeye uygulanan komutlar olarak düünebiliriz. Bir ortam \\begin komutuyla balayp \\end komutuyla biter. Her iki komutun zorunlu deikeni ortamn addr: \\begin{&lt;ortam ad&gt;} ... \\end{&lt;ortam ad&gt;} 1.2.4 Gruplar Gruplar, ortam benzeri yaplardr. Grup \\begingroup komutuyla balar ve \\endgroup komutuyla biter. Grubun içinde kullanlan bir bildirim sadece gruba uygulanr. 1.2.5 Boluklar LaTeXde belgenizin metnini olutururken ister klavyedeki Space, ister Tab tuu ile boluk brakn, bu boluklar LaTeX tarafndan bir karakter boluk olarak alglanr. Arka arkaya çok sayda boluk braklsa da LaTeX bunu tek bir boluk olarak alglar. Bütün bir satrn bo braklmas LaTeX tarafndan paragraf ba olarak alglanr. Arka arkaya bo braklan çok sayda bo satr LaTeX tarafndan tek bir bo satr yani paragraf ba olarak alglanr. ster bir boluk, isterseniz de çok sayda boluk brakn. kisi de bir boluk gibi ilem görür. Bo bir satr yeni paragraf demektir, burada olduu gibi. Komutlardan sonra gelen boluklar LaTeX dikkate almaz. Komuttan sonra gerçekten bir boluk brakmak için, ya {} ve ardndan boluk girilir ya da komut adndan sonra özel bir boluk komutu kullanlr. \\LaTeX boluk yok.\\\\ \\LaTeX{} boluk var.\\\\ \\LaTeX\\ boluk komutuyla boluk. 1.2.6 Özel amaçl karakterler Aadaki karakterlerin herbiri LaTeXde özel bir amaç için kullanlr. Dolaysyla bu karakterleri dorudan kullanmak istenmeyen sonuçlara yol açabilir. # $ % &amp; { } ~ ^ _ \\ Bu karakterleri çktda elde etmek isterseniz, sondaki hariç, bana bir geribölü koymanz gerekir. Sondaki için, yani bir geribölü sembolü elde etmek içinse \\textbackslash komutunu kullanabilirsiniz. Eer \\\\ komutunu verirseniz yeni bir satr balatm olursunuz. Bu karakterlerden örnein yüzde (%) karakteri kaynak dosyanzda yorum ya da açklama yazmaya yarar. Bu sembolden sonra yazlanlar LaTeX dikkate almaz ve çktda görünmez. Dier karakterlerden örnein ($) nin matematik kipini açma ve kapatmaya yarar. (&amp;) karekteri tablo ve benzeri yaplarda dikey hizalama yapmak için veya sütun ayrac olarak kullanlr. Çengelli parantezlerden zaten yeterince bahsettik. (#) karakteri yeni komutlar tanmlamakta kullanlr. Tilda (~) ise genilemeyen bir boluk yaratmak için kullanlr. (^) ve (_) karakterleri de matematikte üst ve alt indis yazmak için kullanlr. Her birinin kullanmlarndan yeri geldiinde tekrar bahsedeceiz. "],["kurulum.html", "1.3 Kurulum", " 1.3 Kurulum LaTeXi kurmak için ilk olarak bir TeX datm edinmeniz gerekir. Datmlar, dizgi sistemini ve LaTeXde belge oluturabilmek için gereken paketleri içerir. kinci ihtiyaç duyacanz ey bir LaTeX editörüdür. Edindiiniz TeX datmlar genelde bir LaTeX editörüyle birlikte gelir. Tabi editör kiisel bir tercihtir ve bir LaTeX editörü yerine basit bir metin editörü kullanabilirsiniz. Ancak farkl iletim sistemleri için birçok iyi LaTeX editörü vardr ve bunlarn kod vurgulama, otomatik tamamlama, otomatik belge oluturma gibi LaTeXe özgü ilevleri vardr. Dolaysyla LaTeXde yeniyseniz bir editör kullanmanz tavsiye ederiz. 1.3.1 GNU/Linux Linux sistemlere MiKTeX ya da TeX Live kurulabilir. MiKTeXin indirme sayfasnda Ubuntu, Mint, Debian, Fedora, CentOS ve openSUSE gibi Linux datmlarnda nasl kurulaca anlatlmtr. TeX Live ise tüm popüler Linux datmlarnn depolarnda mevcut olup, paket yöneticisi ya da komut satr yardmyla kurulabilir. Örnein Ubuntu, Debian, Mint, Pardus gibi .deb uzantl paketlerin kullanld datmlarda sudo apt-get install texlive-base komutuyla temel kurulum, sudo apt-get install texlive-full komutuyla da tam kurulum yaplr. 1.3.2 Mac OS Mac OS kullanclar için iki seçenek mevcuttur: MiKTeX ya da MacTeX. MiKTeX kurulumu için .dmg uzantl, MacTeX içinse .pkg uzantl dosya indirilir ve standart kurulum yaplr. 1.3.3 Windows Windows için aadaki datmlardan birini kurabilirsiniz. MiKTeX TeX Live proTeXt MiKTeX veya TeX Live datmn kurarsanz sisteminize TeXworks editörü de kurulur. proTeXt datm MiKTeX tabanl bir datm olup, tüm paketleri içerir ve beraberinde TeXstudio editörüyle gelir. 1.3.4 LaTeX Editörleri Hangi editörü kullanacanza birkaç deneme yaptktan sonra karar verebilirsiniz. Burada en çok beenilen editörler listelenmi. Her LaTeX editöründe olan özelliklerin (otomatik kod tamamlama vb.) yan sra kullanc dostu arayüzü, yüzde yüze yakn Türkçe destei, ücretsiz oluu ve her üç sistemde de çalabilmesinden dolay TeXstudioyu tavsiye ediyoruz. Karar sizin. 1.3.5 Çevrimiçi Editörler LaTeXi hiçbir kurulum yapmadan çevrimiçi de kullanabilirsiniz. Aada üç tanesi listelenmitir. Overleaf Papeeria LaTeX Base En popüler olan Overleaf olup, sayfasnda beenebileceiniz binlerce ablon ve LaTeX kullanmna yönelik anlatmlar bulunur. "],["tipik.html", "1.4 Tipik Bir Belge Yazm", " 1.4 Tipik Bir Belge Yazm LaTeXin varsaylan dosya uzants .textir. Bu basit bir metin dosyas olup, LaTeX editörleriyle oluturulup düzenlenebilecei gibi basit bir metin editörüyle de düzenlenebilir. Bir belge hazrlamaya balamak için verilecek ilk komut \\documentclass[...]{...} olup, çengelli parantezler arasna oluturmak istediiniz belgenin snf yazlr. Köeli parantezlerin içine de istee bal baz deikenler yazlabilir. Eer bu ksm bo braklrsa LaTeX varsaylan deerleri alacaktr. Bu komutun ardndan srasyla \\begin{document} ve \\end{document} komutlar verilerek belge ortam oluturulur. \\end{document} komutuyla LaTeXe belgenin bittii söylenmi olur ve LaTeX bu komuttan sonra girilenleri dikkate almaz. \\documentclass komutuyla \\begin{document} komutu arasna sahanlk denir. Sahanlk, belgenin ayarlarnn yapld ksmdr ve bu ksm çktda görünmez. \\begin{document} ile \\end{document} arasna da gövde denir. çerik burada oluturulur. Aada asgari bir LaTeX kaynak dosyas gösterilmitir. \\documentclass komutunun deikeni olan article, belgenin makale olacan belirtir. \\documentclass{article} \\begin{document} te ilk belgem. \\end{document} Bu noktadan sonra örnek kaynak dosyay LaTeX editörünüzünde oluturup önceden oluturduunuz bir dizine kaydedin. Kaydederken dosya adnda boluk ve Türkçe karakter kullanmayn. Örnein kaynak dosyanz belge1.tex olsun. kinci aama kaynak dosyann derlenmesidir. Derleme ilemi için LaTeX editörlerinde genelde araç çubuunda oklar bulunur. Oka tklandnda dosya derlenir ve sonuç, çkt ekrannda görünür. Eer metin editörü kullanyorsanz derlemeyi uçbirimde (terminal, konsol,) yapmanz gerekir. Derleme için uçbirim kaynak dosyann olduu dizinde açlp pdflatex belge1 komutu verilmelidir. Derleme ileminden sonra kaynak dosyanzn olduu dizinde belge1.tex ve belge1.pdf dosyalarnn yannda yine belge1 ile balayan farkl uzantlara sahip dosyalar olacaktr. Bu dosyalarn ne olduklarna ilerleyen yazlarda deinilecektir ancak dileyen okur (Oetiker et al. 2006, s. 13-14)e bakabilir. Kaynakça "],["belgesinifi.html", "1.5 Belge Snflar ve Seçenekleri", " 1.5 Belge Snflar ve Seçenekleri Bölüm 1.4de \\documentclass komutunun zorunlu deikeninin belge snf olduunu ve köeli paratezler içine de seçeneklerin yazlacandan bahsetmitik. Bu yazda bunlarn neler olabileceklerinden bahsedelim. Baka snflar olmakla birlikte LaTeXde varsaylan olarak kullanlan be belge snf vardr. Tablo 1.1: LaTeXde Belge Snflar Snf Açklama article Makale report Makaleden daha hacimli belgeler için kullanlr. Rapor, tez gibi book Kitap letter Mektup beamer Sunu Bu be snftan article, report ve book için kullanlabilecek seçenekler Tablo 1.2de gösterilmitir. Tablo 1.2: LaTeXde Belge Seçenekleri Seçenek Açklama 10pt, 11pt, 12pt Belge ana yaz büyüklüü. a4paper, a5paper, letterpaper, Kat boyutu. fleqn Formülleri ortada yazmak yerine, sola bitiik yazar. leqno Formül numaralarn sa yerine sol tarafa koyar. titlepage, notitlepage Belge baln attktan sonra yeni bir sayfa açp açmayacan belirler. onecolumn, twocolumn Belgenin tek sütun veya çift sütun dizileceini belirtir. twoside, oneside Belgenin kadn hep tek tarafna m yoksa iki tarafna m baslacan belirtir. landscape Belgeyi enine tutulmu kada baslmak üzere hazrlar. openright, openany Belgede bölümleri hep sa sayfalardan veya ilk gelen bo sayfadan balatr. draft, final Belgeyi srasyla taslak ve son eklinde hazrlar. draft seçilirse, sa taraftan frlam olan satrlar kaln siyah bir çizgiyle iaretlenir. Bu seçeneklerin her birinin kullanlabilirlii belge snfna göre farkllk gösterir. Aadaki tabloda hangi seçenein hangi snf için varsaylan olduu ve kullanlabilir olup olmad gösterilmitir. Seçenek book report article 10pt 1 1 1 letterpaper 1 1 1 oneside 1/2 1 1 twoside 1 1/2 1/2 openany 1/2 1 0 openright 1 1/2 0 titlepage 1 1 1/2 final 1 1 1 1: varsaylan 1/2: kullanlabilir 0:kullanlamaz Örnein belgeye \\documentclass[a4paper,12pt]{article} komutuyla balarsak LaTeXe kat boyutu A4, ana yaz büyüklüü 12 punto olan bir makale yazacamz bildirmi oluruz. Baka bir örnek \\documentclass[a5paper,11pt,twocolumn]{book} olsun. Bu örnekte kat boyutu A5, ana yaz büyüklüü 11 punto olan bir kitap yazacamz ve kitabn iki sütun olarak dizilmesini söyledik. "],["turkce.html", "1.6 Türkçe Dil Ayarlar ve Çoklu Dil Kullanm", " 1.6 Türkçe Dil Ayarlar ve Çoklu Dil Kullanm LaTeXde Türkçe belgeler oluturmak için öncelikle sahanla \\usepackage[T1]{fontenc} \\usepackage[turkish]{babel} komutlarnn verilmesi gerekir. T1 seçenekli fontenc paketi yaztipi kodlamasyla ilgili bir paket olup, hecelemenin doru ekilde yaplmasn salar. Bir çok Avrupa dilinde de T1 seçeneiyle kullanlr. turkish seçenekli babel paketi de Chapter, Table, Contents, gibi isimlerin Türkçelemesi (Bölüm, Tablo, çindekiler,) içindir. Yakn zamana kadar ö, , ç, gibi Türkçe karakterlerin kullanlabilmesi için sahanla \\usepackage[utf8]{inputenc} ya da \\usepackage[latin5]{inputenc} komutlarndan birinin verilmesi gerekiyordu. Bu paket (inputenc) girdi kodlamasn yöneten bir pakettir. Son güncellemelerle birlikte bu paketin kullanlma zorunluluu ortadan kalkmtr. Aada Türkçe asgari bir LaTeX kaynak dosyas örnei verilmitir. \\documentclass{article} \\usepackage[T1]{fontenc} \\usepackage[turkish]{babel} \\begin{document} te Türkçe ilk belgem. \\end{document} Türkçe dnda ikinci bir dil kullanmak isterseniz, örnein ngilizce, babel paketinin seçeneini \\usepackage[english,turkish]{babel} eklinde deitirmeniz gerekir. Burada etkin olan dil Türkçedir. ngilizceyi etkin hale getirmek için \\selectlanguage{english} komutu kullanlr. Tekrar Türkçeye geçmek için de benzer ekilde \\selectlanguage{turkish} komutu kullanlr. Bir kelime ya da cümle gibi ksa metinler kullanlacaksa \\foreignlanguage komutu kullanlabilir: \\foreignlanguage{&lt;dil&gt;}{&lt;metin&gt;} Uzun metinler içinse dier bir seçenek otherlanguage ortamdr. \\begin{otherlanguage}{&lt;dil&gt;} ... \\end{otherlanguage} Bu ortamn isimleri deitirmeyen, örnein, dil seçenei ngilizce olmasna ramen belgeye bir tablo eklediinizde Table yerine yine Tablo adn yazan yldzl sürümü de (otherlanguage*) vardr. "],["heceleme.html", "1.7 Heceleme", " 1.7 Heceleme Bazen tüm bu ayarlamalara ramen LaTeX baz kelimeleri doru heceleyemeyebilir. Böyle durumlarda hecelemeyi elle yapmak gerekir. Yanl hecelenen kelimenin bölünebilecei yerler \\- komutuyla gösterilir: He\\-ce\\-le\\-me Bu sadece ilgili kelimenin tireyle ayrld yerde doru hecelenmesini salar. Ayn kelime belgenin baka bir yerinde yine yaln hecelenebilir. Bunun yerine \\begin{document} komutundan sonra \\hyphenation komutuyla hece yerleri tire (-) iaretiyle gösterilmi olan kelime listesi oluturulursa belgenin tamamna bu kural uygulanm olur. Örnein \\hyphenation{He-ce-le-me FORTRAN} komutuyla Heceleme kelimesinin nereden bölünecei, FORTRAN, Fortran ya da fortran kelimelerinin bölünmeyecei LaTeXe söylenmi olur. "],["belgeye-balk-oluturma.html", "1.8 Belgeye Balk Oluturma", " 1.8 Belgeye Balk Oluturma LaTeXde belgeye balk oluturmak için \\title komutu kullanlr. Yazar ad \\author komutuyla girilir. Birden fazla yazar varsa yazar adlar arasna \\and komutu girilir. stee bal olarak tarih için \\date komutu kullanlr. Eer \\date komutu kullanlmazsa LaTeX belgenizi derlediiniz günün tarihini basar. Tarihin baslmasn istemiyorsanz, bu komutu tarih yazlmadan \\date{} eklinde kullanmanz gerekir. Son olarak, baln belgenize yazlmas için \\begin{document} komutundan sonra bal oluturmak istediiniz yere \\maketitle komutunu girersiniz. Belge baln attktan sonra yeni bir sayfann açlp açlmayaca Bölüm 1.5de belirttiimiz gibi belgenin snfna bal olarak belirlenir. Ayrca \\title, \\author ve \\date komutlar \\thanks komutunu içerebilir. Bu komutun deikeni bir e-posta adresi, i adresi veya bir teekkür metni olabilir. \\documentclass[a4paper,12pt]{article} \\usepackage[T1]{fontenc} \\usepackage[turkish]{babel} \\title{Belge Bal} \\author{Yazar 1\\thanks{A Üniversitesi} \\and Yazar 2\\thanks{B Üniversitesi}} \\date{XX.XX.XXXX} \\begin{document} \\maketitle çerik... \\end{document} "],["bölümleme-ve-içindekiler-tablosu.html", "1.9 Bölümleme ve çindekiler Tablosu", " 1.9 Bölümleme ve çindekiler Tablosu LaTeXde belgenizi bölümlere ayrmak için 7 seviye bulunmaktadr. Tablo 1.3: LaTeXde Bölüm Seviyeleri Komut Seviye Açklama \\part{...} -1( book ve report ) o ( article) letter hariç \\chapter{...} 0 sadece book ve report \\section{...} 1 letter hariç \\subsection{...} 2 letter hariç \\subsubsection{...} 3 letter hariç \\paragraph{...} 4 letter hariç \\subparagraph{...} 5 letter hariç Türkçe dil paketi ekli belgelerde \\part komutu Ksm, \\chapter komutu Bölüm olarak yazlr. Ksmlar I, II, III, eklinde bölümler ise 1, 2, 3, eklinde numaralandrlr. \\section komutu book ve report snflarnda \\chapter komutunu takip ederek 1.1, 1.2, dier snflarda 1, 2, 3, eklinde numaralandrlr. \\subsection komutu da \\section komutunu takip ederek numaralandrlr. Türkçe dil paketi ekli belgelerde \\part komutu Ksm, \\chapter komutu Bölüm olarak yazlr. Ksmlar I, II, III, eklinde bölümler ise 1, 2, 3, eklinde numaralandrlr. \\section komutu book ve report snflarnda \\chapter komutunu takip ederek 1.1, 1.2, dier snflarda 1, 2, 3, eklinde numaralandrlr. \\subsection komutu da \\section komutunu takip ederek numaralandrlr. çindekiler tablosu için LaTeXe \\tableofcontents komutu verilir. Bu komutun yazld yerde çindekiler tablosu oluturulur. çindekiler tablosunun doru dizilmesi için kaynak dosyanz en az iki kere derlemeniz gerekir. LaTeXde article snfnda 4 ve 5inci seviye balklara, book ve report snflarnda ise bunlara ek 3üncü seviye balklara numara verilmez ve numara verilmeyen balklar çindekiler tablosuna yazlmaz. Bu seviyelerdeki balklara numara verilmesini ve çindekiler tablosuna yazlmas için iki adet \\setcounter komutu \\setcounter{secnumdepth}{&lt;seviye&gt;} \\setcounter{tocdepth}{&lt;seviye&gt;} eklinde kullanlr. Birinci komuttaki &lt;seviye&gt; deikeninde kaçnc seviyeye kadar olan balklarn numaralandrlacan, ikinci komuttaki &lt;seviye&gt; deikeninde de kaçnc seviyeye kadar olan balklarn çindekiler tablosuna yazlacan sayyla belirtirsiniz. Örnein book ve report snflarnda \\setcounter{secnumdepth}{3} \\setcounter{tocdepth}{3} komutlaryla \\subsubsection komutuna kadar olan balklara hem numara verir hem de çindekiler tablosuna yazdrrsnz. Komutlarn çalmas için ya sahanlkta ya da \\tableofcontents komutundan önce verilmelidir. Uzun balklarn çindekiler tablosunda daha ksa yazlmas istenirse bölüm komutlarnn zorunlu olmayan deikenine balklarn ksa ekli yazlr: \\section[Ksa Balk]{Uzuuuuuuuuuuuuuuuuun Balk} Bölüm komutlarnn birde yldzl sürümleri vardr: \\part*{...} \\chapter*{...} \\section*{...} \\subsection*{...} \\subsubsection*{...} \\paragraph*{...} \\subparagraph*{...} Komutlar bu ekilde verildiinde bala numara verilmez ve çindekiler tablosuna yazlmaz. çindekiler tablosunu LaTeX otomatik olutursa da elle eklemeler yaplabilir, hatta Kaynakça gibi özel sayfalarda bu eklemeler gereklidir. Bunun için \\addcontentsline komutu kullanlr. \\addcontentsline{toc}{&lt;giri format&gt;}{&lt;giri metni&gt;} Burada toc, bilginin yazlaca çindekiler tablosunun dosya uzantsdr. Bütünleik olarak oluturduunuz kaynakçann çindekiler tablosuna yazlmas için \\begin{thebibliography} komutunun peine book ve report snflarnda \\addcontentsline{toc}{chapter}{Kaynakça} article snfnda ise \\addcontentsline{toc}{section}{Kaynaklar} komutunun verilmesi gerekir. Kaynakça ya da Kaynaklar isimleri yerine farkl isimler kullanlabilir elbette. Ancak thebibliography ortamnn oluturulduu yerlerde LaTeX bu isimleri yazdracandan tutarl olmas açsndan bu isimler önerilmitir. \\documentclass[a4paper,12pt]{article} \\usepackage[T1]{fontenc} \\usepackage[turkish]{babel} \\title{\\LaTeX&#39;de Bölümlendirme ve çindekiler Tablosu Oluturma} \\author{\\TeX dizgi} \\begin{document} \\maketitle \\tableofcontents \\section{Birinci Seviye Balk} çerik... \\subsection{kinci Seviye Balk} çerik... \\subsubsection{Üçüncü Seviye Balk} çerik... \\section[Ksa Balk]{Uzuuuuuuuuun Balk} çerik... \\section*{Numarasz Balk} \\addcontentsline{toc}{section}{Numarasz Balk} çerik... \\end{document} "],["kitap-projesi-balatma.html", "1.10 Kitap Projesi Balatma", " 1.10 Kitap Projesi Balatma LaTeXde kitap yazmaya balamak için belge snf book seçilir. Bunun dnda kitaplarn Ba, Gövde ve Son ksmlar olur. Bu ksmlarn nerede balayp nerede bittikleri aadaki komutlarla LaTeXe bildirilir: \\frontmatter (ba) komutu\\begin{document} komutundan hemen sonra verilir. Bu komut, ba taraftaki çindekiler, Önsöz gibi ksmlarn sayfa numaralandrmasn Roma rakamyla yapar. Ayrca bu ksmda bölüm komutlar (*) iareti olmadan verildiinde (örnein \\chapter{Önsöz}) bunlara numara verilmez ancak çindekiler tablosuna yazlrlar. \\mainmatter (gövde) komutu kitabn ilk bölüm balndan hemen önce verilmelidir. Buradan itibaren sayfa numaralandrmasn yeniden balatp Arap rakamlarna geçer. \\appendix (ekler) komutu kitabnzn eklerindeki bölümleri harflerle numaralandrr (Ek A, Ek B,  ). \\backmatter (son) komutu kitabnzda her ey bittikten sonra verilir fakat bilinen belge snflarnda görünürde hiçbir etkisi yoktur. Kitap gibi büyük hacimli belgelerle çalrken kaynak dosyanz parçalara ayrmak gerekebilir. LaTeX bunun için size iki komutla yardmc olur: \\input ve \\include. kisi arasndaki fark \\include komutuyla eklediiniz metin yeni bir sayfadan balayarak dizilir. Bu komutlarn zorunlu deikeni eklemek istediiniz dosyann addr. Örnein kaynak dosyanzla ayn dizinde yer alan dosya1.tex dosyasn eklemek için \\include{dosya1} komutunu kullanrsnz. Eer dosya uzants .tex deilse (örnein .txt olsun) o zaman dosya adn uzantsyla yazmanz gerekir: \\include{dosya1.txt} Ayrca, hangi dosyalarn eklenebileceini LaTeXe bildiren bir komut vardr: \\includeonly. Bu komut, sadece sahanla yazlabilir. Komutun zorunlu deikeninde eklenebilecek dosyalar aralarna virgül koyularak (ve boluk braklmadan) listelenir: \\includeonly{dosya1,dosya2,dosya3,...} Böyle bir liste oluturulduktan sonra bu listede olmayan bir dosya artk \\include komutuyla kaynak dosyaya eklenemez. \\input komutu sahanlkta da kullanlabilir. Örnein, sahanlnz tek bir dosyaya yazp, bu dosyay bu komutla sahanla ekleyebilirsiniz. Daha düzenli çalmak adna kaynak dosyanzn olduu dizini de düzenleyebilirsiniz. Kaynak dosyann olduu dizinin düzenlenmesi Bu ekilde bir düzenleme yaptnzda \\input ya da \\include komutlaryla dosya eklemek istediinizde dosyann bulunduu dizini de göstermeniz gerekir. Burada kaynak dosya kitap.texdir. Bu kaynak dosyaya bolum1.tex dosyasn eklemek istediinizde komutu \\input{Bolumler/bolum1} eklinde verirsiniz. Bu sayede kaynak dosyanzn olduu dizinde (Örnek Kitap) sadece kitap ile balayan dosyalar olur. Dier dosyalar alt dizinde (Bolumler) yer alr. Dikkat edilirse Örnek Kitap dnda, Bolumler alt dizini ve tüm dosya adlar Türkçe karakter ya da boluk içermez. \\documentclass[a4paper,12pt]{book} \\usepackage[T1]{fontenc} \\usepackage[turkish]{babel} \\title{Örnek Kitap} \\author{\\TeX dizgi} \\begin{document} \\frontmatter \\maketitle \\tableofcontents \\input{Bolumler/onsoz} \\mainmatter \\input{Bolumler/bolum1} \\input{Bolumler/bolum2} \\appendix \\input{Bolumler/ek1} \\backmatter \\end{document} "],["varsaylan-sayfa-düzenini-deitirme.html", "1.11 Varsaylan Sayfa Düzenini Deitirme", " 1.11 Varsaylan Sayfa Düzenini Deitirme LaTeXde varsaylan kat boyutunun letterpaper olduunu Bölün 1.5de ifade etmitik. Ayrca ayn yazda baka bir kat boyutunun nasl seçileceine de yer vermitik. imdi ise hem sayfamzn kenar boluklarnn nasl ayarlanacandan hem de ön tanml olmayan, tamamen keyfi bir sayfa boyutunun nasl belirleneceinden bahsedelim. Bu tür sayfa düzenlemeleri için LaTeXde geometry paketi kullanlr. Öncelikle paketi \\usepackage{geometry} komutuyla sahanla ekleyin. Ardndan paket seçeneklerinde aadaki tanmlamalarla sayfann düzenini deitirebilirsiniz: Tanm Deer top üst boluk bottom alt boluk left sol boluk right sa boluk paperwidht sayfa genilii paperheight sayfa yükseklii Örnein sahanlkta \\usepackage[paperwidth=175mm,paperheight=255mm,top=2cm,bottom=2cm, left=2.5cm,right=2.5cm]{geometry} komutunu verdiinizde boyutu \\(175\\times 255\\) mm, üst ve alt boluu \\(2\\) cm, sol ve sa boluu \\(2.5\\) cm olan bir sayfa düzeni oluturursunuz. Dilerseniz paperwidth vepaperheight tanmlamalarn yerine, örnein a4paper yazarak sadece kenar boluklarla ilgili tanmlamalar yapabilirsiniz. LaTeXde milimetre (mm) ve santimetre (cm) dnda inç (in), punto (pt), em ve ex gibi ölçü birimleri de vardr. Bunlara ileride deinilecektir. Ayrca yine ileride daha ayrntl sayfa düzeni oluturmaktan da bahsedeceiz. Bu aamada bu kadar yeterli olacaktr. "],["satr-ve-sayfa-kesme.html", "1.12 Satr ve Sayfa Kesme", " 1.12 Satr ve Sayfa Kesme LaTeX, kelimeler aras boluklar otomatik ayarlayarak satrlar iki yana yaslayarak dizer. Bir satr kesip yeni bir satra geçmek için \\\\ veya \\newline komutlar kullanlr. Birinci komut \\\\* eklinde verildiinde satrdan sonra sayfa kesilmesini önler. Benzer eyi \\linebreak komutu da yapar. Fakat bu komut ile satr kesilirse LaTeX kalan yarm satr iki yana yaslar. \\nolinebreak komutu ise satrn kesilmesini önler. Birçok kelimeyi birlikte ayn satrda tutmak gerekirse \\mbox komutu kullanlr: \\mbox{&lt;metin&gt;} Buradaki &lt;metin&gt; içindeki kelimeler her durumda birleik kalrlar. Benzer eyi \\fbox komutu da metin etrafna çizgi çizerek yapar. Sayfay kesip yeni bir sayfaya geçmek için \\newpage ya da \\pagebreak komutlar kullanlr. \\nopagebreak komutu sayfa kesilmesini önler. \\newpage ile \\pagebreak komutlar arasnda da \\newline ile \\linebreak komutlarndakine benzer bir fark vardr. "],["paragraflar-ve-cümle-sonlar.html", "1.13 Paragraflar ve Cümle Sonlar", " 1.13 Paragraflar ve Cümle Sonlar Bo bir satrn yeni bir paragraf açtn Bölüm 1.2.5de belirtmitik. Ayn ey, \\par komutuyla da yaplabilir. Ancak bu komut yeni bir paragraf açmaktan ziyade farkl amaçlar için kullanlr (yeri geldiinde deinilecektir). Nitekim kaynak dosyanzn okunabilirlii açsndan paragraflar ayrmak için bo bir satr brakmak daha kullanldr. LaTeXde varsaylan olarak \\chapter ve \\section gibi bölümleme komutlarndan sonra oluturulan ilk paragraf girintisiz, sonrakiler girintili olur. Bu, paragraf balarnda \\indent ya da \\noindent komutlaryla tek seferliine deitirilebilir. Birinci komut girinti oluturur, ikincisi ise girintiyi kaldrr. LaTeX, okumay kolaylatrmak için cümle sonlarnda fazladan boluklar brakr. Bunu yaparken de her cümlenin nokta, soru iareti veya ünlem iaretiyle bittiini varsayar. Ksaltmalarda büyük harflerden sonra nokta geldiinden, büyük harften sonra nokta koyulursa LaTeX bunu cümle sonu saymaz. Eer bir büyük harften sonra nokta koyuyorsanz ve buras cümlenin sonuysa LaTeXin buray cümle sonu saymas için büyük harften sonraki noktann önüne \\@ koymanz gerekir. LaTeXin noktadan sonra fazladan boluk koymamasn isterseniz \\frenchspacing komutunu kullanrsnz. Bu komutu kullandysanz, artk noktadan önce \\@ koymanza gerek yoktur. Daha sonra tekrar cümle sonlarnda fazladan boluk kullanmak istenirse de \\nonfrenchspacing komutu kullanlr. Unvan ksaltmasndan sonra unvann ait olduu kelimeyle birlikte kalmas ve fazladan boluk braklmamas için tilda (~) iareti kullanlabilir. Bu iaret hem genilemeyen bir boluk brakr hem de satrn orada kesilmesini önler. "],["aralklar.html", "1.14 Aralklar", " 1.14 Aralklar LaTeXde hem dikey hem de yatay aralklar otomatik olarak ayarlanr. Fazladan aralklar brakmak için komutlar kullanlr. Aralk brakrken kullanabileceimiz ölçü birimleri Tablo 1.4de gösterilmitir. Tablo 1.4: LaTeXde Ölçü Birimleri Birim Deer mm milimetre \\(\\approx 1/25\\) inç cm santimetre = 10 mm in inç = 25.4 mm pt punto \\(\\approx 1/72\\) inç em Kullanlan yaz tipinde M harfinin genilii ex Kullanlan yaz tipinde x harfinin yükseklii 1.14.1 Dikey aralklar Dikey aralk birkaç komutla braklabilir. Bunlardan biri \\vspace olup, komut iki bo satr arasnda \\vspace{&lt;uzunluk&gt;} eklinde verilir. Komut bu ekilde verildiinde komutun zorunlu deikeninde birimiyle belirtilen uzunluk kadar dikey aralk braklr. Eer bir sayfann banda veya sonunda aralk braklmak istenirse, komut \\vspace* eklinde yldzl vermelidir. Bu komutun arala ilave yapan \\addvspace sürümü de vardr. Bir paragrafn iki satr arasnda veya bir tablonun satrlar arasnda ilave aralk açmak için \\\\[&lt;uzunluk&gt;] komutu kullanlr. A\\\\[1ex] B Bu komutlarda belirtilen uzunluklar negatif de olabilir. A\\\\[-2ex] B Snrsz bir dikey aralk oluturmak için \\vfill komutu kullanlr. Bu komuttan sonra gelen her ey sayfann altna yaslanr. Ön tanml gelen \\smallskip, \\medskip ve \\bigskip komutlar srasyla küçük, orta ve büyük aralklar brakr. 1.14.2 Yatay aralklar Ön tanml yatay aralklar \\ \\, \\: \\; \\quad \\qquad \\! komutlaryla verilir. Bu komutlar srasyla bir sözcük aras, \\(3/\\!18\\) em, \\(4/\\!18\\) em, \\(5/\\!18\\) em, \\(1\\) em, \\(2\\) em, \\(-3/\\!18\\) em uzunlukta yatay aralk brakr. Belli bir uzunlukta yatay aralk brakmak için \\hspace komutu kullanlr. Yine dikey aralkta olduu gibi yatay aralk negatif de olabilir. Eer aralk satr bana veya sonuna rasgelse dahi bu aral korumak istiyorsanz, yldzl \\hspace* komutu kullanrsnz. A\\hspace{2cm}B\\\\ A \\hspace{2cm} B Komutlardan önce veya sonra boluk brakmak farkl sonuçlar üretir. Snrsz bir yatay aralk oluturmak için \\hfill komutu kullanlr. Bu komuttan sonra gelen her ey satrn sonuna yaslanr. Hem satr sonuna yaslamak hem de aral noktalarla doldurmak isterseniz \\dotfill komutunu kullanrsnz. Satr sonuna yaslayp arala çizgi çekmek isterseniz de \\hrulefill komutunu kullanrsnz. A\\hfill B\\\\ A\\dotfill B\\\\ A\\hrulefill B "],["metni-hizalamak-ve-sütunlara-bölmek.html", "1.15 Metni Hizalamak ve Sütunlara Bölmek", " 1.15 Metni Hizalamak ve Sütunlara Bölmek 1.15.1 Hizalama LaTeXde metni sola hizalamak için flushleft, saa hizalamak için flushright ve ortal hizalamak için center ortamlar kullanlr. \\begin{flushleft} buras sola hizal \\end{flushleft} \\begin{flushright} saa hizal \\end{flushright} \\begin{center} ve ortal \\end{center} 1.15.2 Sütunlara bölmek LaTeXde belgenin tamamnn iki sütun dizilmesi için \\documentclass komutunun seçeneine twocolumn yazlabileceinden Bölüm 1.5de bahsettik. Bu, tüm belgenin iki sütun dizilmesini salar. Baz sayfalar iki, bazlarnysa tek sütun dizmek istiyorsanz \\twocolumn ve \\onecolumn komutlarn kullanmanz gerekir. \\twocolumn komutunun verildii sayfadan sonraki sayfalar iki, \\onecolumn komutunun verildii sayfadan sonraki sayfalar tek sütun dizilir. Eer metni daha fazla sütuna bölmek ve sütunlar istediiniz yerden balatmak gibi daha fazla seçenek istiyorsanz, multicols ortamn kullanmanz gerekir. Bu ortam kullanabilmek için \\usepackage{multicol} komutuyla multicol paketini eklemelisiniz. \\begin{multicols}{&lt;sütun says&gt;} \\end{multicols} Burada, &lt;sütun says&gt; deikeninde oluturulmak istenen sütun adedi sayyla belirtilir. Bu ortamda sütun genilikleri eit olup, sütunlar aras boluk \\columnsep, sütunlar arasndaki çizginin kalnl \\columnseprule ve sütunlar arasndaki çizginin rengi \\columnseprulecolor komutlarnda sakldr. Bu deikenler \\setlength ya da \\def komutlar kullanlarak deitirilebilir. \\setlength{\\columnsep}{1cm} \\setlength{\\columnseprule}{1pt} \\def\\columnseprulecolor{\\color{blue}} Yukardaki birinci komutla sütunlar arasndaki boluk 1 cm, çizgi kalnl 1 pt ve çizgi rengi mavi olarak düzenlenir. Bu komutlar ya sahanla ya da ortam kullanmadan önce gövdeye yazlmaldr. imdiye kadar renk kullanmndan bahsetmedik ancak çizgi rengini deitirmek için verilen komutun kullanlabilmesi için sahanla \\usepackage{color} komutuyla color paketinin eklenmesi gerekir. Ortam istee bal bir deiken de alabilir. Bu, çengelli parantezlerden sonra köeli parantezler içine yazlr. Köeli parantezler içinde yazlanlar bölünmeden ve çok sütunlu metnin üstünde dizilir. \\begin{multicols}{2} [\\section{Balk} Buras sütunlara bölünmez.] Buras sütunlara bölünür. \\end{multicols} Sütunu kesmek için \\columnbreak komutu kullanlr. Komutun verildii yerde sütun kesilir, ardndan kesme noktasndan önceki paragraflar tüm kullanlabilir alan doldurmak için eit olarak datlr. Dolaysyla bazen beklenen sonucu vermeyebilir. Varsaylan multicols ortamnda sütunlarn her biri ayn miktarda metin içerecek ekilde dengelenmitir. Bu, ortamn yldzl sürümü (multicols*) kullanlarak deitirilebilir. "],["listeleme.html", "1.16 Listeleme", " 1.16 Listeleme 1.16.1 Temel listeler LaTeXde listeleme için deiik ortamlar vardr. Bu ortamlar tek bana kullanlabilecei gibi birlikte de kullanlabilirler. Her ortamda maddeler \\item komutuyla belirtilir. Bir listeyi numaral ekilde dizmek için enumerate ortam kullanlr. \\begin{enumerate} \\item madde 1 \\begin{enumerate} \\item alt madde 1 \\begin{enumerate} \\item en alt madde 1 \\end{enumerate} \\item alt madde 2 \\end{enumerate} \\item madde 2 \\end{enumerate} Numarasz, özel iaretli listeler için itemize ortam kullanlr ve bu ortamda madde iareti deitirilebilir. \\begin{itemize} \\item madde 1 \\item madde 2 \\item[$\\circ$] madde 3 \\item[+] madde 4 \\end{itemize} Açklamal bir liste içinse description ortam kullanlr. Bu ortamda köeli parantez içine alnan anahtar kelimeler kaln dizilir. \\begin{description} \\item[Nokta] Boyutu olmayan \\item[Çember] Bir noktaya eit uzaklktaki noktalarn geometrik yeri \\end{description} 1.16.2 Listeleri özelletirmek Listelerin özelletirmek için enumerate paketi kullanlabilir. Paketi \\usepackage{enumerate} komutuyla ekledikten sonra enumerate ortamn balatan komutun peine köeli parantezler içinde madde iaretlerinin tipi belirtilebilir: \\begin{enumerate}[I.] \\item bir \\item iki \\item üç \\end{enumerate} Bunun dnda çok daha fazla özelletirmeye izin veren enumitem paketi vardr. Bu paketi kullanarak yaplabilecek listelere de ilerde deineceiz. Dileyen okur paket belgesini inceleyip listelerini özelletirebilir. "],["yaztipleri.html", "1.17 Yaztipleri", " 1.17 Yaztipleri 1.17.1 Giri Yaztipi konusu kodlama, aile, biçem ve boyut olmak üzere dört alt balkta incelenebilir. Kodlama çok teknik bir konu olup amacmz dndadr, ancak sadece unu belirtelim ki kodlama iini LaTeXde Bölüm 1.6de bahsettiimiz fontenc paketi üstlenir. Bu paketi belgenize eklemi olduunuzu varsayarak devam edeceiz. Bu yazda anlatacamz eylerden bazlar bir bakma LaTeXin felsefesine aykr olacak. Nitekim LaTeX, \\documentclass komutunda belirtilen ana yaztipi boyutuna göre, dipnot ya da balk gibi ana yaztipi boyutundan farkl dizilen eylerin boyutunu olabilecek en güzel ve doru ekilde ayarlar. O yüzden bu konudaki klasik uyary biz de yineleyelim: 1.17.2 Aile Yaztipleri Roman ya da Serif, Sans Serif ve Typewriter olmak üzere üç ailede toplanabilir. Roman ailesi trnakl ya da süslü diyebileceimiz yaztiplerini, Sans Serif ailesi trnaksz ya da süssüz yaztiplerini ve Typewriter ailesi de daktilo yaztiplerini barndrr. LaTeXde her belge snf varsaylan yaztipi ailesiyle gelir. beamer snfnn varsaylan ailesi Sans Serif olup, dier snflarn varsaylan ailesi Romandr. Varsaylan aile \\familydefault komutunda sakl olup, \\renewcommand komutuyla deitirilebilir. \\renewcommand{\\familydefault}{\\rmdefault} \\renewcommand{\\familydefault}{\\sfdefault} \\renewcommand{\\familydefault}{\\ttdefault} Birinci komut sahanla yazlrsa, belge snfndan bamsz olarak varsaylan aile Roman, ikincisi yazlrsa Sans Serif, üçüncüsü yazlrsa Typewriter olur. Eer belgenin tamamnn deilde baz kelime ya da cümlelerin farkl aileden yazlmas istenirse ki genelde böyle kullanlr aadaki komut ya da bildirimler kullanlr. Yaztipi Aileleri LaTeXde varsaylan yaztipi Computer Modern olup, ek bir pakete ihtiyaç duymadan kullanlabilecek yaztipleri aada gösterilmitir. Roman Yaztipleri Sans Serif Yaztipleri Typewriter Yaztipleri Elyazs Varsaylan yaztipleri \\rmdefault, \\sfdefault ve \\ttdefault komutlarnda sakl olup, \\renewcommand komutuyla deitirilebilirler. \\renewcommand{\\rmdefault}{&lt;ksaltma&gt;} Burada &lt;ksaltma&gt;, tablolarda belirtilen ksaltmalardr. Örnein \\renewcommand{\\rmdefault}{put} komutu sahanla yazldnda, eer varsaylan aile Roman ise belgenizin ana yaztipi Utopia olur. Eer tüm belgenin deil, baz kelime ya da cümlelerin farkl yaztipinde yazlmas istenirse \\fontfamily komutuyla \\selectfont komutu birlikte aadaki ekilde kullanlr. {\\fontfamily{pbk}\\selectfont Bookman yaztipi.} Ana yaztipi. Varsaylan yaztipi paket ekleyerek de deitirilebilir. Bu hem pratiktir hem de baz paketler matematiksel ifadelerin yaztipine de etki eder. Bu paketlerin bazlar tabloda gösterilmitir. Yaztipi deitiren paketler Bunlarn dnda beenebileceiniz birçok yaztipini LaTeX Yaztipi Katalounda bulabilirsiniz. 1.17.3 Biçem Metin içinde kelimeleri bazen italik bazen de kaln dizmek isteyebilirsiniz. Bu deiimler aadaki tablodaki komut ya da bildirimlerle yaplr. Yaztipi Biçemleri zleyen kelime \\textit{italik} harflerle yazlmtr. Metnin geri kalan ksm normaldir. zleyen ifade {\\slshape {\\bfseries eik kalndr}}. zleyen ifade \\textit{\\textbf{italik kaln}}, ama bu \\textsc{\\textit{büyük küçük harf deil}}. Eer vurgulu metin içinde baz kelimeler tekrar vurgulanrsa bu kelimeler normale döner. {\\em Vurgulu metinde tekrar vurgu yaplrsa {\\em normale} döner.} LaTeXde vurgu yukardaki gibi yaplsa da altn çizerek vurgu yapmak isteyen olabilir. Kuyruklu harflerin alt çizildiinde varsaylan satr aral deitiinden vurguyu bu ekilde yapmamanz daha dorudur. Ancak illa altn çizmek isterseniz \\underline komutunu kullanabilirsiniz. 1.17.4 Boyut Yaztipi boyutunu deitirmek için aadaki bildirimler kullanlr. Yaztipi Boyutu Deitiren Bildirimler {\\Large Büyük} ve {\\scriptsize küçük} harfler. Bu bildirimlerin ayn zamanda satr araln da deitirdiine dikkat edilmelidir. Aadaki iki örnekte, \\par (paragraf) komutunun verdiiniz yere bal olarak farkl sonuçlar ürettii gösterilmitir. Doru kullanm ikincisidir. {\\large Sokrates: Platon yalan söyleyecek aadaki cümlede.}\\par {\\large Platon: Sokrates doruyu söyledi önceki cümlede.\\par} Bu bildirimlerin etkisi belge ana yaztipi boyutuna bamldr. Mutlak boyutlar aadaki tabloda gösterilmitir. Yaztipleri Mutlak Boyutlar Bamsz bir yaztipi boyutu elde etmek için \\fontsize ile \\selectfont komutlar birlikte kullanlr. {\\fontsize{&lt;boyut&gt;}{&lt;aralk&gt;}\\selectfont &lt;metin&gt;} Buradaki &lt;boyut&gt; yaztipi boyutu, &lt;aralk&gt; ise satr araldr. kisinin de ölçü birimi punto (pt) olup, temel kural, araln boyutun \\(1.2\\) kat olmasdr. {\\fontsize{30}{36}\\selectfont Yaz tipi boyutu 30 punto, satr aral 36 punto.} Ana yaztipi boyutu \\normalsize komutunda sakl olup, \\renewcommand komutuyla deitirilebilir. \\renewcommand{\\normalsize}{\\fontsize{30}{36}\\selectfont} Yukardaki komutu sahanla yazarsanz belgenizin ana yaztipi boyutu 30 pt, satr aral ise 36 pt olur. "],["renk-kullanmak.html", "1.18 Renk Kullanmak", " 1.18 Renk Kullanmak LaTeXde renkler color ya da xcolor paketleriyle kullanlr. kinci paket daha güçlüdür. \\usepackage{xcolor} komutuyla paketi ekledikten sonra \\color ya da \\textcolor komutlar aadaki ekillerde kullanlr. \\color{red}{Krmz}\\\\ {\\color{blue} Tamam mavi}\\\\ \\textcolor{pink}{Pembe} Kullanlabilecek renk adlar black, white, gray, darkgray, lightgray, brown, red, green, blue, cyan, magenta, lime, olive, orange, pink, purple, teal, violet ve yellowdur. Eer \\documentclass komutunun seçeneine divpsnames yazlrsa aadaki renkler de kullanlabilir duruma gelir. dvipsnames seçeneiyle gelen renkler Bunlar da yeterli gelmiyorsa seçeneklere bir de svgnames yazn ve buradaki yüzden fazla rengi kullanlabilir duruma getirin. \\documentclass[svgnames,dvipsnames]{article} 1.18.1 Yeni renkler oluturmak LaTeXin size hazr olarak verdii renkler yeterli gelmezse kendi renklerinizi oluturabilirsiniz. Bu, iki ekilde yaplabilir. Hazr renkler istenilen oranlarda kartrlarak yeni renkler elde edilebilir. Aada karmn nasl hazrlanabilecei gösterilmitir. \\color{blue!80}{\\%80 mavi \\%20 beyaz}\\\\ \\color{red!40!blue}{\\%40 krmz \\%60 mavi} \\\\ {\\color{yellow!20!green!75!black} \\%20x0.75=15 sar \\%(100-20)x0.75=60 yeil \\%100-75=25 siyah} kinci yol \\definecolor komutuyla renk modelleri kullanmaktr. Tablo 1.5: Renk Modelleri Model Açklama gray Grinin tonlar (0-1). 0 (siyah), 1 (beyaz). Yani 0.95 çok açk gri, 0.30 koyu gri olur. rgb Red, Green, Blue (0-1). Üç renk (krmz, yeil, mavi) 0 ile 1 arasnda bir sayyla temsil edilir. RGB Red, Green, Blue (0-255). Üç renk (karmz, yeil, mavi) 0 ile 255 arasnda bir sayyla temsil edilir. HTML Red, Green, Blue (OO-FF). Kodlar RRGGBB eklinde verilir. cmyk Cyan, Magenta, Yellow, Black (0-1). Dört renk (camgöbei, eflatun, sar, siyah) 0 ile 1 arasnda bir sayyla temsil edilir. Komut \\definecolor{&lt;isim&gt;}{&lt;renk modeli&gt;}{&lt;kod&gt;} eklinde verilir. Burada &lt;isim&gt;, sizin daha sonra kullanmak üzere vereceiniz bir isimdir. Kodlar için HueSnap adresinden yararlanabilirsiniz. Örnein \\definecolor{renk1}{gray}{0.50} \\definecolor{renk2}{rgb}{1,0.7,0.3} \\definecolor{renk3}{RGB}{125,32,200} \\definecolor{renk4}{HTML}{CC33CC} \\definecolor{renk5}{cmyk}{0,0.7,1,0.5} komutlaryla renk1, renk2, renk3, renk4 ve renk5 adnda be adet renk tanmlanm olur. Bu komutlar ya sahanla ya da bu renkleri kullanacanz satrdan önce gövdeye yazlmaldr. Yeni oluturduunuz rengi tek seferlik kullanacaksanz \\color[&lt;model&gt;]{&lt;kod&gt;} \\textcolor[&lt;model&gt;]{&lt;kod&gt;}{&lt;metin&gt;} komutlarn kullanabilirsiniz. {\\color[RGB]{102,0,51} Bol}\\\\ \\textcolor[RGB]{0,76,153}{Çeit bol} Metnin arka plann renklendirmek için \\colorbox komutu kullanlr. Benzer \\fcolorbox komutu ayn eyi çizgi çizerek yapar. \\colorbox{&lt;arka plan rengi&gt;}{&lt;metin&gt;} \\colorbox[&lt;renk modeli&gt;]{&lt;arka plan rengi&gt;}{&lt;metin&gt;} \\fcolorbox{&lt;çizgi rengi&gt;}{&lt;arka plan rengi&gt;}{&lt;metin&gt;} \\fcolorbox[&lt;renk modeli&gt;]{&lt;çizgi rengi&gt;}{&lt;arka plan rengi&gt;}{&lt;metin&gt;} Komutlar yukarda gösterildii ekilde kullanlabilir. \\colorbox{Cyan}{Metin} \\colorbox[rgb]{0.4,0.4,0.5}{Metin} \\fcolorbox{red}{yellow}{Metin} \\fcolorbox[RGB]{0,0,0}{255,204,255}{Metin} Sayfalar renklendirmek için ise \\pagecolor komutu kullanlr. Komutun zorunlu deikeninde renk belirtilir. Tekrar normale (beyaz) dönmek için \\nopagecolor komutu kullanlr. Eer bu ie yaramazsa \\pagecolor{white} komutunu kullanabilirsiniz. "],["matematiksel-ifadeler.html", "Bölüm 2 Matematiksel fadeler", " Bölüm 2 Matematiksel fadeler Matematik formüllerini dizmek, kukusuz, LaTeXin en güçlü olduu konulardan biridir. Çok fazla matematiksel gösterimin varlndan dolay da büyük bir konudur. Bu bölümde ileri bir matematik kitabn dizmek için gereken birçok ey anlatlacaktr ancak iin snrlar göz önüne alndnda baka kaynaklara da bavurmanz gerekebilir. "],["giri-1.html", "2.1 Giri", " 2.1 Giri Belgenizde yalnzca birkaç basit matematiksel formül kullanacaksanz herhangi bir pakete gerek olmadan yazabilirsiniz. Ancak çok sayda karmak formül içeren bilimsel bir belge yazma niyetindeyseniz temel AMS paketlerini kullanmanz gerekir. Bu paketler amsmath , amssymb ve amsfontsdir. \\usepackage{amsmath,amssymb,amsfonts} Yukardaki komutu sahanla yazarak paketleri belgenize ekleyiniz. Bundan sonra bu paketleri eklediinizi varsayarak devam edeceiz ve bunlarn dnda bir pakete ihtiyaç duyarsak ayrca belirteceiz. 2.1.1 Genel Belgenizin metnini olutururken LaTeXin metnin ne zaman matematiksel olduunu bilmesi gerekir. Bunun nedeni, LaTeXin matematiksel ifadeleri normal metinden farkl bir ekilde dizmesidir. Bu nedenle matematiksel ifadeler, normal metinden farkl olarak baz ortamlarda girilirler. Matematik özel ortamlar gerektirdiinden, doal olarak standart ekilde kullanabileceiniz uygun ortam adlar vardr. Bununla birlikte, dier ortamlarn çoundan farkl olarak, formülünüzü bildirmek için baz kullanl ksaltmalar vardr. LaTeXde bu ortamlar ya da ksaltmalar kullanlarak formüller iki türlü dizilir: Formüller satrn içinde, yani bildirildii metnin gövdesi içine yazlr: \\(\\lim_{n \\to \\infty} \\sum_{k=1}^n \\frac{1}{k^2} =\\frac{\\pi^2}{6}\\). Görüldüü gibi LaTeX, paragraf yapsn bozmamak için sembolleri olabildiince sktrr ve gerek görürse alttakileri yana kaydrr. Formüller ayr bir satrda tek balarna tüm detaylaryla sergilenir: \\[\\lim_{n \\to \\infty} \\sum_{k=1}^n \\frac{1}{k^2} =\\frac{\\pi^2}{6}.\\] Formülün satr içerisinde dizilmesi için ya $...$ arasna arasna, ya \\(...\\) arasna ya da \\begin{math} ile \\end{math}arasna, yani math ortamnda yazlmas gerekir. Üçü de ayn sonucu verir. Formülün sergilenmesi içinse ya \\[...\\] arasna ya displaymath ortamnda ya da equation ortamnda yazlmas gerekir. equationortamnda yazlan formülü LaTeX otomatik numaralandrr. Numara verilmesini istemezseniz ortam equation* eklinde kullanmanz gerekir. TeXin eski sürümlerinde formüller, sergilenmeleri için $$...$$ arasna yazlrd. Bu kullanm hala geçerlidir ancak baz sorunlara yol açabildiinden (örnein belge seçeneine fleqn yazldnda) kullanm önerilmez. $x\\in \\mathbb{R}$ için $|x|&lt;1$ ise \\begin{equation*} -1&lt;x&lt;1 \\end{equation*} olur. \\(x\\in\\mathbb{R}\\) için \\(|x|&lt;1\\) ise \\[\\begin{equation*} -1&lt;x&lt;1 \\end{equation*}\\] olur. Numara verilen bir formülü \\label komutuyla etiketleyip, \\ref ya da \\eqref komutuyla formüle atf yaplabilir. Atf \\eqref komutuyla yaplrsa formülün numaras parantez içinde yazlr. \\begin{equation} \\label{eq:euler} e^{i\\pi}+1=0 \\end{equation} Euler&#39;in \\eqref{eq:euler} formülüne göre\\dots \\[\\begin{equation} e^{i\\pi}+1=0 \\tag{2.1} \\end{equation}\\] Eulerin (2.1) formülüne göre 2.1.2 Matematik Kipiyle Metin Kipi Arasndaki Farklar Matematiksel ifadeleri girerken düz metin giriinden farkl olarak dikkat edilmesi gereken baz noktalar vardr: Boluklarn ve satr kesmelerinin çounun önemi yoktur, çünkü tüm boluklar ya matematiksel ifadelerden mantksal olarak türetilir, ya da özel komutlarla belirtilmesi gerekir. Bo satrlara izin verilmez. Aksanl harfler kullanlmaz. Her harf matematiksel bir deiken olarak kabul edilir ve italik dizilir. Eer düz yazyla ve normal aralklarla bir metin girilecekse \\textrm{} ya da \\text{} komutlar kullanlmaldr. Bu komutlarla metin kipine geçi yaplm olur ve metin artk düz ve normal aralklarla dizilir. talik ve normal aralklarla metin girilecekse \\textit{} komutu kullanlabilir. Ayrca bu komutlarla aksanl harfler de kullanlabilir. Aadaki örnek matematik kipi ile metin kipi arasndaki farklar gösterir. $x^2-1=0 \\text{ise $x=\\pm 1$}.$ \\(x^2-1=0 \\text{ise $x=\\pm 1$}.\\) 2.1.3 Gruplandrma Formülleri dizerken dikkat edilmesi gereken noktalardan biri komutlarn çounun kendisinden sonra ilk gelen karaktere etki etmesidir. Bu yüzden bir komutun çok sayda karaktere etki etmesi istenirse bu karakterler iki çengelli parantez {} arasna yazlarak gruplandrlmaldr. $a^x+y \\neq a^{x+y}$ \\(a^x+y \\neq a^{x+y}\\) "],["parantezler-gruplandrclar-ve-oklar.html", "2.2 Parantezler, Gruplandrclar ve Oklar", " 2.2 Parantezler, Gruplandrclar ve Oklar LaTeXde her türlü parantez ve gruplandrc kullanlabilir. Yuvarlak ve köeli parantezler klavyedeki yerlerinden, çengelli parantez ise \\{ ve \\} komutlar kullanlarak girilir. ${a,b,c}\\neq\\{a,b,c\\}$ \\({a,b,c}\\neq\\{a,b,c\\}\\) Kullanlabilecek tüm gruplandrc iaretler Tablo 2.1de gösterilmitir. Tablo 2.1: Gruplandrclar ( ( ) ) \\(\\uparrow\\) \\uparrow \\([\\) [ ya da \\lbrack \\(]\\) ] ya da \\rbrack \\(\\downarrow\\) \\downarrow \\(\\lbrace\\) \\{ ya da \\lbrace \\(\\rbrace\\) \\} ya da \\rbrace \\(\\updownarrow\\) \\updownarrow \\(\\langle\\) \\langle \\(\\rangle\\) \\rangle \\(\\vert\\) | ya da \\vert \\(\\lfloor\\) \\lfloor \\(\\rfloor\\) \\rfloor \\(\\lceil\\) \\lceil \\(\\rceil\\) \\rceil \\(/\\) / \\(\\backslash\\) \\backslash \\(\\Updownarrow\\) \\Updownarrow Grup açc bir sembolün önüne \\left komutu, grup kapatc bir sembolün önüne de \\right komutu yazlrsa LaTeX onlar en uygun boyda dizer. Her bir \\left komutuna karlk mutlaka bir \\right komutu bulunmaldr. Bunlarn doru boyda dizilmesi için iki komutunda ayn satrda yer almasna dikkat edilmelidir. Sol/sa tarafta gruplandrc bir iaret istenmiyorsa, görünmeyen \\left./\\right. komutu kullanlr. \\[ \\left(1+\\frac{1}{n}\\right)^n\\quad \\left.\\frac{x^3}{3}\\right|_0^1 \\] \\[ \\left(1+\\frac{1}{n}\\right)^n\\quad \\left.\\frac{x^3}{3}\\right|_0^1 \\] Bazen gruplandrc sembolün boyunu elle ayarlamak gerekebilir. Bunun için, gruplandrc komutun önüne \\big, \\Big, \\bigg veya \\Bigg komutlarndan biri verilir. \\bigl (büyük sol) ve \\bigr (büyük sa) komutlar da parantezleri biraz büyütür. \\[ \\big(\\Big(\\bigg(\\Bigg(\\quad \\big\\}\\Big\\}\\bigg\\}\\Bigg\\} \\quad \\big\\|\\Big\\|\\bigg\\|\\Bigg\\| \\] \\[ \\big(\\Big(\\bigg(\\Bigg(\\quad \\big\\}\\Big\\}\\bigg\\}\\Bigg\\} \\quad \\big\\|\\Big\\|\\bigg\\|\\Bigg\\| \\] Oklar için Tablo 2.2deki komutlar kullanlr. Tablo 2.2: Oklar \\(\\leftarrow\\) \\leftarrow ya da \\gets \\(\\longleftarrow\\) \\longleftarrow \\(\\uparrow\\) \\uparrow \\(\\Leftarrow\\) \\Leftarrow \\(\\Longleftarrow\\) \\Longleftarrow \\(\\Uparrow\\) \\Uparrow \\(\\rightarrow\\) \\rightarrow ya da \\to \\(\\longrightarrow\\) \\longrightarrow \\(\\downarrow\\) \\downarrow \\(\\Rightarrow\\) \\Rightarrow \\(\\Longrightarrow\\) \\Longrightarrow \\(\\Downarrow\\) \\Downarrow \\(\\leftrightarrow\\) \\leftrightarrow \\(\\longleftrightarrow\\) \\longleftrightarrow \\(\\updownarrow\\) \\updownarrow \\(\\Leftrightarrow\\) \\Leftrightarrow \\(\\Longleftrightarrow\\) \\Longleftrightarrow \\(\\Updownarrow\\) \\Updownarrow \\(\\mapsto\\) \\mapsto \\(\\longmapsto\\) \\longmapsto \\(\\nearrow\\) \\nearrow \\(\\hookleftarrow\\) \\hookleftarrow \\(\\hookrightarrow\\) \\hookrightarrow \\(\\searrow\\) \\searrow \\(\\leftharpoonup\\) \\leftharpoonup \\(\\rightharpoonup\\) \\rightharpoonup \\(\\swarrow\\) \\swarrow \\(\\leftharpoondown\\) \\leftharpoondown \\(\\rightharpoondown\\) \\rightharpoondown \\(\\nwarrow\\) \\nwarrow \\(\\rightleftharpoons\\) \\rightleftharpoons \\(\\leadsto\\) \\leadsto \\( \\downarrow \\big\\downarrow \\Big\\downarrow \\bigg\\downarrow \\Bigg\\downarrow \\) \\(\\downarrow \\big\\downarrow \\Big\\downarrow \\bigg\\downarrow \\Bigg\\downarrow\\) Bunlarn dnda altlarna ya da üstlerine matematiksel ifadeler yazlabilen \\xleftarrow ve \\xrightarrow komutlar vardr. \\( \\xleftarrow{a} \\xrightarrow[X]{a+b} \\) \\(\\xleftarrow{a}\\) \\(\\xrightarrow[X]{a+b}\\) "],["yunan-harfleri.html", "2.3 Yunan Harfleri", " 2.3 Yunan Harfleri Yunan harfleri matematikte yaygn olarak kullanlr. Bu harfler ters eik çizgiden sonra harfin ad yazlarak elde edilir. Eer ilk harf küçük ise küçük, büyükse de büyük harf elde edilir. Baz büyük Yunanca harfler Latin harfleri gibi göründüünden (örnein, büyük harf Alpha ve Beta yalnzca srasyla A ve Bdir) ayrca tanmlanmamlardr. Küçük harf epsilon, theta, kappa, phi, pi, rho ve sigma iki farkl sürümde sunulmaktadr. Alternatif sürümü, harf adnn önüne var eklenerek oluturulur. Tablo 2.3: Yunan Harfleri \\(\\alpha\\) \\alpha \\(\\theta\\) \\theta \\(o\\) o \\(\\tau\\) \\tau \\(\\beta\\) \\beta \\(\\vartheta\\) \\vartheta \\(\\pi\\) \\pi \\(\\upsilon\\) \\upsilon \\(\\gamma\\) \\gamma \\(\\iota\\) \\iota \\(\\varpi\\) \\varpi \\(\\phi\\) \\phi \\(\\delta\\) \\delta \\(\\kappa\\) \\kappa \\(\\rho\\) \\rho \\(\\varphi\\) \\varphi \\(\\epsilon\\) \\epsilon \\(\\lambda\\) \\lambda \\(\\varrho\\) \\varrho \\(\\chi\\) \\chi \\(\\varepsilon\\) \\varepsilon \\(\\mu\\) \\mu \\(\\sigma\\) \\sigma \\(\\psi\\) \\psi \\(\\zeta\\) \\zeta \\(\\nu\\) \\nu \\(\\varsigma\\) \\varsigma \\(\\omega\\) \\omega \\(\\eta\\) \\eta \\(\\xi\\) \\xi \\(\\Gamma\\) \\Gamma \\(\\Lambda\\) \\Lambda \\(\\Sigma\\) \\Sigma \\(\\Psi\\) \\Psi \\(\\Delta\\) \\Delta \\(\\Xi\\) \\Xi \\(\\Upsilon\\) \\Upsilon \\(\\Omega\\) \\Omega \\(\\Theta\\) \\Theta \\(\\Pi\\) \\Pi \\(\\Phi\\) \\Phi $\\forall \\epsilon&gt;0$ için \\(\\forall \\epsilon&gt;0\\) için "],["fonksiyonlar.html", "2.4 Fonksiyonlar", " 2.4 Fonksiyonlar LaTeXde fonksiyonlar aadaki komutlarla dizilirler. \\arccos \\cos \\csc \\exp \\ker \\limsup \\min \\sinh \\arcsin \\cosh \\deg \\gcd \\lg \\ln \\Pr \\sup \\arctan \\cot \\det \\hom \\lim \\log \\sec \\tan \\arg \\coth \\dim \\inf \\liminf \\max \\sin \\tanh Matematik kipinde fonksiyonlar dier deikenler gibi italik deil düz yazlrlar ve boluklar otomatik ayarlanr. $\\sin x$, $\\exp x$, $\\log x$, $\\det A$, $\\min_{x\\in A} f(x)$ \\(\\sin x\\), \\(\\exp x\\), \\(\\log x\\), \\(\\det A\\), \\(\\min_{x\\in A} f(x)\\) Bunlarn dnda bir fonksiyon tanmlamak için \\DeclareMathOperator komutu kullanlr. \\DeclareMathOperator{\\obeb}{obeb} Yukardaki komuttan sonra artk kullanabileceiniz bir obeb fonksiyonu olur. $\\obeb(12,16)=4$ \\(\\obeb(12,16)=4\\) Bu komutun snr deerleri sa taraf yerine alta dizen yldzl sürümü vardr: \\DeclareMathOperator*. Örnein \\DeclareMathOperator*{\\Max}{Max} komutunu sahanlkta verdikten sonra belgede kullanrsanz öyle bir çkt alrsnz: \\begin{equation*} \\Max_{x\\in A} f(x) \\end{equation*} \\[\\begin{equation*} \\Max_{x\\in A} f(x) \\end{equation*}\\] Modülo fonksiyonu içinse \\mod ya da \\pmod komutlar verilir. kinci komut fonksiyonu parantez içinde yazar. $a\\equiv b\\pmod p$ ise $p\\mid a-b$&#39;dir. \\(a\\equiv b\\pmod p\\) ise \\(p\\mid a-b\\)dir. Limit için \\lim komutu aadaki ekilde verilir. \\lim_{&lt;deiken&gt; \\to &lt;deiken&gt;} Buradaki \\to komutu \\(\\to\\) üretir ve \\(\\infty\\) için \\infty komutu verilir. \\[ \\lim_{x\\to 0} \\frac{\\sin x}{x}=1 \\qquad \\lim_{n\\to +\\infty}f_n=\\delta \\] \\[ \\lim_{x\\to 0} \\frac{\\sin x}{x}=1 \\qquad \\lim_{n\\to +\\infty}f_n=\\delta \\] "],["yn-simgeleri.html", "2.5 Yn Simgeleri", " 2.5 Yn Simgeleri Matematikte bazen bir ifadenin altna ya da üstüne baka ifadeler yazmak gerekebilir. Bunlar yn simgeleri olarak adlandrlrlar. LaTeXde aadaki \\overset{&lt;birinci deiken&gt;}{&lt;ikinci deiken&gt;} komutu birinci deikendeki sembolü, normal boyda yazlan ikincinin üzerine yazar. \\underset komutu ise alta yazar. \\[ \\overset{R}{\\sim} \\] \\[ \\overset{R}{\\sim} \\] \\overline ve \\underline komutlar bir ifadenin üstüne veya altna yatay bir çizgi çekerler. \\[ \\overline{x+y} \\] \\[ \\overline{x+y} \\] \\overbrace ve \\underbrace komutlar bir ifadenin üstüne veya altna yatay bir çengel atarlar. \\[ \\underbrace{1+2+\\dots+n}_{{}= \\frac{n(n+1)}{2}} +(n+1) \\] \\[ \\underbrace{1+2+\\dots+n}_{{}= \\frac{n(n+1)}{2}} +(n+1) \\] \\overleftarrow komutu ifadenin üstüne sola, \\overrightarrow ise saa bir ok çizer. Bu komutlar vektörleri göstermek için kullanlabilir. Vektörler için \\vec komutu da kullanlr. \\[ \\overrightarrow{AB} \\quad \\vec{a} \\] \\[ \\overrightarrow{AB} \\quad \\vec{a} \\] \\stackrel komutu \\overset gibi davranr. \\[ \\int f_N(x) \\stackrel{!}{=} 1 \\] \\[ \\int f_N(x) \\stackrel{!}{=} 1 \\] "],["matrisler.html", "2.6 Matrisler", " 2.6 Matrisler Temel matrisler matrix ortamnda girilir. Bu ortamda elemanlar otomatik ortalanr ve sütunlar normal bir tablo gibi dizilir. Her sütun &amp; karakteriyle ayrlr ve alt satra geçmek için \\ komutu verilir. \\[ \\begin{matrix} a &amp; b &amp; c \\\\ d &amp; e &amp; f \\\\ g &amp; h &amp; i \\end{matrix} \\] \\[ \\begin{matrix} a &amp; b &amp; c \\\\ d &amp; e &amp; f \\\\ g &amp; h &amp; i \\end{matrix} \\] Çeitli matrisler dizmek için matrix ortamnn farkl sürümleri kullanlr: pmatrix, bmatrix, Bmatrix, vmatrix ve Vmatrix. Bu ortamlar srasyla yuvarlak, köeli, çengelli, dikey çubuklu ve çift dikey çubuklu matrisler oluturur. \\[ \\begin{pmatrix} 1 &amp; 2 \\\\ 3 &amp; 4 \\end{pmatrix} \\] \\[ \\begin{pmatrix} 1 &amp; 2 \\\\ 3 &amp; 4 \\end{pmatrix} \\] \\[ \\begin{bmatrix} 1 &amp; 2 \\\\ 3 &amp; 4 \\end{bmatrix} \\] \\[ \\begin{bmatrix} 1 &amp; 2 \\\\ 3 &amp; 4 \\end{bmatrix} \\] \\[ A= \\begin{bmatrix} x_{11} &amp; x_{12} &amp; \\dots \\\\ x_{21} &amp; x_{22} &amp; \\dots \\\\ \\vdots &amp; \\vdots &amp; \\ddots \\end{bmatrix} \\] \\[ A= \\begin{bmatrix} x_{11} &amp; x_{12} &amp; \\dots \\\\ x_{21} &amp; x_{22} &amp; \\dots \\\\ \\vdots &amp; \\vdots &amp; \\ddots \\end{bmatrix} \\] Küçük bir matris yazmak için smallmatrix ortam kullanlr. Bu matriste parantezler elle eklenmelidir. Simdi yazacagmz matris \\(A=\\big( \\begin{smallmatrix} a &amp; b \\\\ c &amp; d \\end{smallmatrix} \\bigr)\\) küçük bir matristir. Simdi yazacagmz matris \\(A=\\bigl( \\begin{smallmatrix} a &amp; b \\\\ c &amp; d \\end{smallmatrix} \\bigr)\\) küçük bir matristir. Baz durumlarda, hizalamay elle yapmak ve sütunlar veya satrlar arasna çizgi çekmek istenebilir. Bu durumda tabular ortamnn matematik sürümü olan array ortamn kullanlmaldr. \\[ \\left(\\begin{array}{r|r} -1&amp;2\\\\\\hline 3&amp;-4 \\end{array}\\right) \\] \\[ \\left(\\begin{array}{r|r} -1&amp;2\\\\\\hline 3&amp;-4 \\end{array}\\right) \\] "],["yaz-biçem-ve-boyutlar.html", "2.7 Yaz Biçem ve Boyutlar", " 2.7 Yaz Biçem ve Boyutlar Matematiksel ifadeleri dizerken bazen yaznn biçemini ya da boyutunu deitirmek isteyebilirsiniz. LaTeXde matematik kipindeki yazlarn biçemleri aadaki komutlar kullanlarak deitirilir. Tablo 2.4: Matematik Kipinde Yaz Biçemleri Komut Görünüm \\mathnormal{ABC def 123} \\(ABC def 123\\) \\mathrm{ABC def 123} \\(\\mathrm{ABC def 123}\\) \\mathit{ABC def 123} \\(\\mathit{ABC def 123}\\) \\mathbf{ABC def 123} \\(\\mathbf{ABC def 123}\\) \\mathtt{ABC def 123} \\(\\mathtt{ABC def 123}\\) \\mathsf{ABC def 123} \\(\\mathsf{ABC def 123}\\) \\mathfrak{ABC def 123} \\(\\mathfrak{ABC def 123}\\) \\mathbb{ABC} \\(\\mathbb{ABC}\\) \\mathcal{ABC} \\(\\mathcal{ABC}\\) \\mathscr{ABC} \\(\\mathscr{ABC}\\) Son satrdaki komutun kullanlabilmesi için \\usepackage{mathrsfs} komutuyla mathrsfs paketi eklenmi olmaldr. Bu komutlarla girilen ifadelerdeki boluklar yine dikkate alnmaz ve yine aksanl harfler girilemez. Matematik kipindeki bir ifadenin hem kaln hem de italik yazlmas için \\boldsymbol komutu kullanlmaldr. \\[ \\mu, M \\qquad \\mathbf{\\mu}, \\mathbf{M}\\qquad \\boldsymbol{\\mu}, \\boldsymbol{M} \\] \\[ \\mu, M \\qquad \\mathbf{\\mu}, \\mathbf{M}\\qquad \\boldsymbol{\\mu}, \\boldsymbol{M} \\] Matematik kipindeki yaznn boyutunu elle ayarlayabileceiniz dört komut vardr: \\displaystyle, \\textstyle, \\scriptstyle ve \\scriptscriptstyle. \\textstyle komutu ifadeyi normal metin boyutunda dizer, \\displaystyle komutu ise ifadeyi ayr satrda sergilenir gibi büyük dizer. \\scriptstyle ve \\scriptscriptstyle komutlar da normal metin boyutundan küçük dizerler. \\[ \\sum_{k=0}^n z^k \\qquad \\textstyle\\sum_{k=0}^n z^k \\] $\\displaystyle\\sum_{k=0}^n z^k$\\qquad $\\sum_{k=0}^n z^k$ \\qquad $\\scriptstyle\\sum_{k=0}^n z^k$ \\[ \\sum_{k=0}^n z^k \\qquad \\textstyle\\sum_{k=0}^n z^k \\] \\(\\displaystyle\\sum_{k=0}^n z^k\\qquad\\) \\(\\sum_{k=0}^n z^k\\qquad\\) \\(\\scriptstyle\\sum_{k=0}^n z^k\\) Kesirler dizilirken {\\displaystyle\\frac{}{}} ve {\\textstyle\\frac{}{}} komutlar yerine onlarn ksaltmalar olan \\dfrac ve \\tfrac komutlar kullanlabilir. Ayn ey \\binom komutu için de geçerlidir. $\\frac{1}{n}\\log x$ \\quad $\\dfrac{1}{n}\\log x$ \\quad $\\binom{n}{3}$ \\quad $\\dbinom{n}{3}$ \\[ \\frac{1}{n}\\log x \\quad \\tfrac{1}{n}\\log x \\quad \\binom{n}{3} \\quad \\tbinom{n}{3} \\] \\(\\frac{1}{n}\\log x\\quad\\) \\(\\dfrac{1}{n}\\log x\\quad\\) \\(\\binom{n}{3}\\quad\\) \\(\\dbinom{n}{3}\\) \\[ \\frac{1}{n}\\log x \\quad \\tfrac{1}{n}\\log x \\quad \\binom{n}{3} \\quad \\tbinom{n}{3} \\] "],["boluklar.html", "2.8 Boluklar", " 2.8 Boluklar Bazen LaTeX formülleri dizerken olmas gerektii gibi boluk brakma konusunda yetersiz kalabilir. Bu durumda boluklar elle oluturulur. Boluklar için kullanlabilecek komutlar tablodaki gibidir. Negatif \\! nce \\, Orta \\: Kaln \\; Sözcük aras \\ Bir quad \\quad ki quad \\qquad Örnein \\, komutunun brakt ince boluk baz formüllerde çok kullanldr. \\[ \\int_a^b f(x) dx \\quad \\sqrt{2} a \\quad \\sqrt{\\log x} \\] \\[ \\int_a^b f(x)\\,dx \\quad \\sqrt{2}\\,a \\quad \\sqrt{\\,\\log x} \\] \\[ \\int_a^b f(x) dx \\quad \\sqrt{2} a \\quad \\sqrt{\\log x} \\] \\[ \\int_a^b f(x)\\,dx \\quad \\sqrt{2}\\,a \\quad \\sqrt{\\,\\log x} \\] Negatif aralk brakan \\! komutu da fazla aralkl ifadeleri birbirine yaklatrmak için kullanlr. \\[ x^2/2 \\quad a/\\sin b \\] \\[ x^2\\!/2 \\quad a/\\!\\sin b \\] \\[ x^2/2 \\quad a/\\sin b \\] \\[ x^2\\!/2 \\quad a/\\!\\sin b \\] "],["denklem-ortamlar.html", "2.9 Denklem Ortamlar", " 2.9 Denklem Ortamlar Bir satra smayacak kadar uzun bir formülü ya da birden çok satrdan oluan bir denklemi veya denklem sistemlerini hizalayp dizmek için LaTeXde çeitli ortamlar kullanlr. multline ortam bir formülü hizalanmam bir kaç satra ayrr. \\begin{multline} f=a+b+c \\\\ +i+j+k+l \\\\ +x+y+z \\end{multline} \\[\\begin{multline} \\tag{2.2} f=a+b+c \\\\ +i+j+k+l \\\\ +x+y+z\\qquad \\qquad \\end{multline}\\] Bu ortamda ilk satr sola, son satr saa ve kalanlar ortal hizalanr. Denklemin numaras da son satrn sana yazlr. Dekleme numara verilmesi istenmiyorsa ortam multline* eklinde kullanlmaldr. split ortam denklemi dikey hizalanm birden çok satrda dizer. \\begin{equation} \\begin{split} a&amp;= b+c-d\\\\ &amp;= e-f\\\\ &amp;= g \\end{split} \\end{equation} \\[\\begin{equation} \\begin{split} a&amp;= b+c-d\\\\ &amp;= e-f\\\\ &amp;= g \\end{split} \\tag{2.3} \\end{equation}\\] Hizalama &amp; karakteriyle yaplr (genelde = iaretinden hemen önce kullanlr). Ortam mutlaka formülün numaralandrlmasndan sorumlu ya da numara vermeyen baka bir matematik ortamnda kullanlmas gerekir. gather ortam birden fazla formülü birlikte gruplandrr, ortalar ve her birini ayr bir satrda numaralandrr. Yine gather* ortam, ayn türden numaralandrlmam formüller üretir. \\begin{gather} a=b+c \\\\ V+F-S=2 \\end{gather} \\[\\begin{gather} a=b+c \\tag{2.4}\\\\ V+F-S=2 \\tag{2.5} \\end{gather}\\] align ortam, iki veya daha fazla satrdan oluan bir denklemi her bir satr hizal ve numaral ekilde dizmek için kullanlr. Hizalama ayn ekilde &amp; karakteriyle yaplr. Ortam yldzl (align*) ekilde kullanlrsa hiçbir satr numaralandrlmaz. \\begin{align} a&amp; = b+c+d \\\\ e&amp; = f \\\\ x-1&amp; = y+z \\end{align} \\[\\begin{align} a&amp; = b+c+d\\tag{2.6} \\\\ e&amp; = f \\tag{2.7}\\\\ x-1&amp; = y+z \\tag{2.8} \\end{align}\\] align ortam ayn zamanda birden fazla özerk formül dizisini birletirmek için de kullanldr. Bu durumda, &amp; karakteri konumuna bal olarak hizalama ve ayrc olmak üzere iki farkl ilev üstlenir. \\begin{align*} a &amp;=b &amp; c&amp;=d &amp; e&amp;=f \\\\ u &amp;=v &amp; w&amp;=x &amp; y&amp;=z \\end{align*} \\[\\begin{align*} a &amp;=b &amp; c&amp;=d &amp; e&amp;=f \\\\ u &amp;=v &amp; w&amp;=x &amp; y&amp;=z \\end{align*}\\] alignat ortam align ortamna benzer fakat sütun saysn belirten bir deiken alr (Bir satrda kullanlan &amp; saysnn bir fazlasnn yars sütun saysn vermelidir} ve denklemler arasndaki yatay boluun kontrolünü salar. Eer boluk komutlarndan biri kullanlmazsa denklem sistemleri arasnda boluk braklmaz (örnekte boluk komutu olarak \\qquad kullanlmtr). \\begin{alignat*}{3} a&amp;=b\\qquad &amp; c&amp;=d\\qquad &amp; e&amp;=f \\\\ u&amp;=v\\qquad &amp; w&amp;=x\\qquad &amp; y&amp;=z \\end{alignat*} \\[\\begin{alignat*}{3} a&amp;=b\\qquad &amp; c&amp;=d\\qquad &amp; e&amp;=f \\\\ u&amp;=v\\qquad &amp; w&amp;=x\\qquad &amp; y&amp;=z \\end{alignat*}\\] flalign ortam align ortamna benzer ancak ilk denklem sistemini sola ve son denklem sistemini saa yaslar. aligned ortam yine align ortamna benzer fakat baka bir matematik ortamnda kullanlmas gerekir. \\[ \\left. \\begin{aligned} a&amp;= b+1 \\\\ a&amp;= 2b \\end{aligned} \\right\\} \\quad \\text{$a=2$ ve $b=1$.} \\] \\[ \\left. \\begin{aligned} a&amp;= b+1 \\\\ a&amp;= 2b \\end{aligned} \\right\\} \\quad \\text{$a=2$ ve $b=1$.} \\] cases ortam parçal fonksiyonlar dizmek için kullanldr. Ortamn içine yazlan denklemlerin solunda uygun boyda bir çengelli parantez açar. Sütunlar sola yasldr. Ortamn baka bir matematik ortamnda kullanlmas gerekir. \\[ n!= \\begin{cases} 1 &amp; \\text{$n=0$ ise} \\\\ n(n-1)!&amp; \\text{$n\\ge 1$ ise} \\end{cases} \\] \\[ n!= \\begin{cases} 1 &amp; \\text{$n=0$ ise} \\\\ n(n-1)!&amp; \\text{$n\\ge 1$ ise} \\end{cases} \\] Her satra numara veren bir ortamda baz satrlarn numarasz olmas istenirse bu satrlarn sonuna \\notag ya da \\nonumber komutlar verilir. \\tag komutuyla ise keyfi bir numara ya da iaret yazlabilir. \\begin{align} x&amp;=y\\\\ z&amp;=y+1 \\notag\\\\ w&amp;=3 \\tag{*} \\end{align} \\[\\begin{align} x&amp;=y\\tag{2.9}\\\\ z&amp;=y+1 \\notag\\\\ w&amp;=3 \\tag{*} \\end{align}\\] Numaral formüllere etiket yine \\label komutuyla koyulur ve \\eqref komutuyla atf yaplr. \\begin{align} a &amp;= b+c \\\\ c &amp;= d \\label{eq:cd}\\\\ e &amp;= f+g \\end{align} Yukardaki \\eqref{eq:cd} formülü\\dots \\[\\begin{align} a &amp;= b+c \\tag{2.10}\\\\ c &amp;= d \\tag{2.11} \\\\ e &amp;= f+g \\tag{2.12} \\end{align}\\] Yukardaki (2.11) formülü Ayn ortamda yer alan formüllerin 1, 2, yerine 1.a, 1.b, biçiminde numaralandrlmas için ortamn subequations ortamnn içine yazlmas gerekir. \\begin{subequations} \\label{eq:sub} \\begin{align} a &amp;= b+c \\\\ c &amp;= d \\label{eq:subb} \\\\ e &amp;= f+g \\end{align} \\end{subequations} Formül~\\eqref{eq:sub} ve altformül~\\eqref{eq:subb}\\dots "],["teorem-ve-benzeri-ortamlar.html", "2.10 Teorem ve Benzeri Ortamlar", " 2.10 Teorem ve Benzeri Ortamlar Gerçek bir matematik kitab kartrdysanz Teorem 2.1, Sonuç 2.1.1 gibi ifadelerle balayan paragraflara rastlam olmalsnz. Bunlar metnin geri kalanndan ayrlm ve yannda sral saylarla etiketli paragraflardr. Bu, matematikte teoremler için yaygn olarak kullanlr, ancak her ey için kullanlabilir. LaTeX, herhangi bir teorem benzeri bildirimi kolayca tanmlamanza izin veren bir komut sunar: \\newtheorem. 2.10.1 Temel Teoremler Öncelikle sahanla \\usepackage{amsthm} komutuyla amsthm paketini ekleyiniz. En basit kullanm \\newtheorem{&lt;ad&gt;}{&lt;balk&gt;} komutunun sahanla verilmesidir. lk deiken olan &lt;ad&gt;, referans olarak kullanacanz addr, ikinci deiken &lt;balk&gt; ise LaTeXin her kullandnzda yazdraca çktdr. &lt;ad&gt; deikeni aksanl bir harf içermemelidir. Örnein \\newtheorem{tanim}{Tanm} komutunu sahanla verdiinizde tanim ortamn LaTeXe tantm olur ve bu ortam kullandnzda öyle bir çkt alrsnz: \\begin{tanim} te yeni bir tanm. \\end{tanim} Tanm 2.1 te yeni bir tanm. Kullanlan teoreme (yukardaki örnekte Tanm) özel bir ad vermek ya da not dümek isteyebilirsiniz. Bu, ortam komutundan sonra köeli parantezler içinde belirtilebilir: \\begin{tanim}[Gauss] Gauss&#39;un tanm. \\end{tanim} Tanm 2.2 (Gaus) Gaussun tanm. 2.10.2 Sayaçlar Sayaçlar, belge snfna göre varsaylan deerleri kullanr. Örnein book snfnda bir teorem kullanldnda Teorem 2.3 (kitabn 2inci bölümünde yer alan 3üncü teorem), article snfnda bir teorem kullanldnda Teorem 3 (makaledeki 3üncü teorem) benzeri çktlar alnr. Varsaylan ayarlar deitirmek için sayacn takip etmesi istenilen bölüm seviyesi (chapter, section gibi) belirtilebilir: \\newtheorem{&lt;ad&gt;}{&lt;balk&gt;}[&lt;sayaç&gt;] Örnein article snfnda sahanla \\newtheorem{teorem}{Teorem}[section] komutunu verdiinizde teoreminiz \\section balk seviyesinin numarasna göre numara alr. Varsaylan olarak, her teorem kendi sayacn kullanr. Bununla birlikte, benzer teoremlerin (örnein Teoremler, Lemmalar ve Sonuçlar) bir sayac paylamas yaygndr. Bu durumda, sonraki teoremleri öyle tanmlayn: \\newtheorem{&lt;ad&gt;}[&lt;sayaç&gt;]{&lt;balk&gt;} Burada &lt;sayaç&gt; kullanlacak olan sayacn addr. Genelde ana teorem ad olur. Örnein sahanlkta \\newtheorem{lemma}[teorem]{Lemma} tanmlamasn yaparsanz (Bu komutu verebilmek için önceden teorem ortam tanmlanm olmaldr) artk Lemmalar Teoremlerle ayn sayac kullanacaktr. \\newtheorem komutu en fazla bir tane istee bal deiken içerebilir. Ayrca komut \\newtheorem* ekilde kullanlrsa numara verilmeyen bir teorem tanmlam olur. 2.10.3 Kantlar Bir teoremin kant proof ortamnda yazlr. Genel kullanm öyledir: \\begin{proof} te benim kantm. \\end{proof} Bu ortam kullandnzda en sona kantn bittii anlamnda bir kare (QED adyla da bilinir) ekler ve Türkçe dil paketi ekli belgelerde Kant adn yazar. Bu ad, \\proofname komutunda sakl olup istenirse deitirilebilir: \\renewcommand{\\proofname}{spat} Bu komuttan sonra kullanlan tüm proof ortamlarnda artk Kant yerine spat yazar. Ayrca kant tek seferliine elle adlandrmak isterseniz, kendi adnz köeli parantezler içine yazabilirsiniz: \\begin{proof}[spat] te dier ispatm. \\end{proof} Kantn sonunu bildiren \\(\\square\\) iareti bazen son satrda yalnz kalrsa, \\qedhere komutuyla onu doru yere oturtabilirsiniz: \\begin{proof} Sadeletirme yaplrsa \\[E=mc^2 \\qedhere\\] \\end{proof} Özel bir QED sembolü kullanmak isterseniz \\qedsymbol komutunu yeniden tanmlayabilirsiniz. \\renewcommand{\\qedsymbol}{$\\blacksquare$} \\begin{proof} Siyah kare. \\end{proof} Eer sembolü gizlemek isterseniz \\renewcommand komutunun son deikenini bo brakmanz yeterli olur. 2.10.4 Teorem Stilleri Teorem stilleri \\theoremstyle komutuyla deitirilir. Bu komut, \\newtheorem komutu kullanarak tanmlanan ortamlarn çktsn deitirme olanan verir. \\theoremstyle{&lt;stil ad&gt;} Buradaki &lt;stil ad&gt; kullanmak istediiniz stildir. Bu komuttan sonra tanmlanm tüm teoremler bu stili kullanacaktr. LaTeXde önceden tanmlanm stiller aadakilerdir: Tablo 2.5: Teorem Stilleri Stil Ad Açklama Görünüm plain Teoremler, lemmalar, önermeler vb. için kullanlr (varsaylan) Balk düz ve kaln, gövde metni vurgulu definition Tanmlar ve örnekler için kullanlr Balk düz ve kaln, gövde metni düz remark Açklamalar ve notlar için kullanlr Balk vurgulu, gövde metni düz Örnein sahanla \\theoremstyle{remark} \\newtheorem{notum}{Not} komutlarn verip notum ortamn kullandnzda balk vurgulu, gövde metni düz olacaktr. 2.10.4.1 Özel Stiller Kendi stilinizi tanmlamak için \\newtheoremstyle komutunu kullanabilirsiniz: \\newtheoremstyle{&lt;stil ad&gt;}% kullanlacak stilin ad {&lt;üst boluk&gt;}% teoremin üstünde braklacak boluk. Örn:3pt. {&lt;alt boluk&gt;}% teoremin altnda braklacak boluk. Örn:3pt. {&lt;gövde yaz tipi&gt;}% teorem gövdesinde kullanlacak yaz tipi. %Örn:\\normalfont, \\itshape... {&lt;girinti&gt;}% Paragraf girintisi ölçüsü. Örn:0pt {&lt;balk yaz tipi&gt;}% teorem balk yaz tipi. %Örn:\\sffamily,\\bfseries {&lt;noktalama&gt;}% balktan sonraki noktalama. %Noktalama istenmezse boluk braklabilir. Örn:\\; {&lt;boluk&gt;}% balktan sonraki boluk. Örn:0.25em {&lt;manuel balk&gt;}% Elle balk belirtilir. Bo braklan herhangi bir deiken olursa varsaylan deerler alnr. Son satrdaki &lt;manuel balk&gt; deikeni \\thmname, \\thmnumber ve \\thmnote komutlaryla biçimlendirilir. Birinci komut bal, ikinci komut numaray, üçüncüsü ise notu biçimlendirmek içindir. Not deikeni her zaman istee baldr, ancak balk oluturulurken \\thmnote komutuyla belirtilmezse varsaylan olarak görünmeyecektir. \\newtheoremstyle{benimstilim} {5pt}% {5pt}% {\\normalfont}% {} % {\\bfseries\\sffamily}% {\\;}% {0.25em}% {\\thmname{#1} \\thmnumber{#2}\\thmnote{---#3}.}% \\theoremstyle{benimstilim}% \\newtheorem{sonuc}{Sonuç}% "],["özel-sayfalar.html", "Bölüm 3 Özel Sayfalar", " Bölüm 3 Özel Sayfalar Bu bölümde bir kitaptaki özel sayfalar olan kaynakça ve dizinden bahsedeceiz. "],["kaynakça.html", "3.1 Kaynakça", " 3.1 Kaynakça 3.1.1 Bütünleik Kaynakça LaTeXde kaynakça oluturmann bir yolu, kaynakçay kaynak dosyanzn (.tex uzantl ana dosyanz) içindeki bir ortamda hazrlamaktr. Kullanacanz ortam thebibliography ortamdr. \\begin{thebibliography}{&lt;say&gt;} \\end{thebibliography} Ortam komutundaki &lt;say&gt; deikeni, kaynan etiketi veya etiket girilmedii takdirde verilen sra numarasnn kaç karakter uzunluunda olacan belirtir. Örnein ortam \\begin{thebibliography}{9} \\end{thebibliography} eklinde oluturulursa etiket veya etiket girilmedii takdirde verilen sra numaras için bir karakter uzunluunda yer ayrlmas gerektii ve toplamda bu ortama en fazla dokuz adet kaynak girilecei belirtilmi olur. Eer dokuzdan fazla kaynak girilecekse, 99 kaynaa kadar izin veren 45 gibi iki basamakl bir say girilebilir. Ortama her kaynak \\bibitem komutuyla eklenir ve komuttan sonra kayna tanmlayc bilgiler girilir. Bu bilgiler girilirken biçim elle oluturulur. \\bibitem[&lt;etiket&gt;]{&lt;anahtar&gt;} Komutun zorunlu deikeni olan &lt;anahtar&gt;, ileride kaynaa atf yapmak için kullanacanz bir tanmlaycdr ve her kaynak için benzersiz olmaldr. Genelde aklda kolay kalmas için yazarn soyad ve yayn yl olacak ekilde düzenlenir. Zorunlu olmayan &lt;etiket&gt; deikeni girilmedii takdirde kaynan önüne köeli parantezler içinde kaynan sra numaras yazdrlr. Kaynan sra numarasnn köeli parantezler içinde yazlmas istenmezse aadaki komutlarla deiiklik yaplabilir. \\makeatletter \\renewcommand{\\@biblabel}[1]{\\textbf{#1.}} \\makeatother Bu komut verilirse sra numaralar parantezsiz, kaln ve ardnda nokta olacak ekilde yazlr. Ortam genelde \\end{document} komutundan hemen önce oluturulur ve ortamn oluturulduu yerde LaTeX, book ve report snflarnda eer Türkçe dil paketi eklenmise Kaynakça, article snfnda ise Kaynaklar ismini ve ardndan kaynaklar yazdrr. Kaynaklardan herhangi birine atf \\cite komutuyla yaplr. \\cite[&lt;seçenekler&gt;]{&lt;anahtar&gt;} Komutun zorunlu deikeni olan &lt;anahtar&gt;, atf yaplmak istenen kaynan \\bibitem komutundaki zorunlu deikenidir. stee bal &lt;seçenekler&gt; deikeninde ise sayfa numaras, bölüm numaras gibi fazladan vurgulanmak istenen bilgiler girilebilir. Atf yaplan yerde kaynan etiketi ya da etiket girilmedii takdirde sra numaras köeli parantez içinde yazdrlr. Eer fazladan yaplan vurgu varsa, bu, etiket ya da sra numarasnn devamnda virgülden sonra yazdrlr. Ayn yerde birden fazla kaynaa atf yaplacaksa atf yaplacak kaynaklarn anahtarlar aralarna virgül koyularak yazlr: \\cite{&lt;anahtar1&gt;,&lt;anahtar2&gt;,&lt;anahtar3&gt;} Aada kaynak dosya örnei verilmitir. \\documentclass{article} \\usepackage[T1]{fontenc} \\usepackage[turkish]{babel} \\usepackage{url} \\title{\\LaTeX&#39;de Kaynakça Yönetimi 1: Bütünleik Kaynakça} \\author{Zafer Acar} \\begin{document} \\maketitle WYSIWYG editörleri yerine, \\TeX/\\LaTeX{} \\cite{lamport94} dizgi sistemini kullanmaya balayn. Görüldüü gibi kaynakça oluturmak ve atf yapmak oldukça kolaydr. Ali Nesin, \\cite[s.~47]{nesin07}&#39;de pokerin matematiini anlatyor. ki kaynaa birden atf \\cite{lamport94,nesin07} eklinde yaplr. \\begin{thebibliography}{9} \\bibitem{lamport94} Leslie Lamport, \\textit{\\LaTeX: a document preparation system}, Addison Wesley, Massachusetts, 2nd edition, 1994. \\bibitem[N]{nesin07} Ali Nesin, \\textit{Matematik ve Oyun}, Nesin Yaynclk, 2007. \\end{thebibliography} \\end{document} 3.1.2 Kaynakçann ayr dosyada hazrlanmas Kaynakçay ayr bir dosyada hazrlayp TeX datmlaryla hazr olarak gelen BiBTeX programyla yazdrabiliriz. Bu yöntemde kaynakça, uzants .bib olan ayr bir dosyada hazrlanr. Bu dosya basit bir metin dosyas olup, metin editörü ya da LaTeX editörü kullanlarak oluturulabilir, düzenlenebilir. Ayrca Mendeley ya da Jabref gibi akademik referans düzenleme programlarndan da yararlanlabilir. Bu yöntemin önemli avantajlar vardr: Biçimlendirme otomatik yaplr. Eer çalmanz yaymlayacak dergi ya da yaynevi kaynakçay farkl bir formatta isterse her kayna tek tek elle biçimlendirmek zorunda kalmazsnz. Basit bir komut iinizi görür. Dosyay bir kere oluturur ve sonra baka çalmalarda kullanabilirsiniz. Google Akademik, Google Kitaplar ve DergiPark gibi platformlardan kullandnz kaynaklarn BiBTeX kodunu çekebilirsiniz (bkz. ekil 3.1). Yukarda da bahsettiimiz gibi Mendeley ve Jabref gibi akademik atf düzenleme programlarn kullanarak kaynaklarn BiBTeX kodunu oluturabilir, düzenleyebilirsiniz. ekil 3.1: Google Akademikten alnt yapma 3.1.2.1 Dosyann hazrlanmas Aada .bib uzantl bir dosya örnei gösterilmitir. @book{lang13, title={Algebraic number theory}, author={Lang, Serge}, volume={110}, year={2013}, publisher={Springer Science \\&amp; Business Media}, } @article{lamport78, title={Time, clocks, and the ordering of events in a distributed system}, author={Lamport, Leslie}, journal={Communications of the ACM}, volume={21}, number={7}, pages={558--565}, year={1978}, publisher={ACM}, } @manual{Oetiker06, author = {Oetiker, Tobias and Partl, Hubert and Hyna, Irene and Schlegl, Elisabeth}, title = {nce bir {\\LaTeXe} Elkitab veya, 116 dakikada {\\LaTeXe}}, note = {Türkçesi: Bekir Karaolu}, url = {http://ftp.ntua.gr/mirror/ctan/info/lshort/turkish/ lshort-tr.pdf}, year = {2006}, } Bu dosyada Serge Langa ait bir kitap (@book), Leslie Lamporta ait bir makale (@article) ve LaTeX için bir teknik klavuz (@manual) vardr. Her kaynan ilk olarak @ iaretiyle türü belirtilir. Yukardakilere ek olarak rapor için @report, tez için @thesis, çevrimiçi kaynaklar için @online kullanlr. Bunlarn dndaki birçok türe LaTeX editörlerinin menü çubuuklarnda bulunan Kaynakça (Bibliography) menüsünden ulalabilir. lk girdi (lang13, lamport78, Oetiker06) kaynaa atf yapmak için kullanlan anahtardr. Sonrasnda gelenler de tahmin edilebilecei gibi balk (title), yazar (author), yaync (publisher), yl (year), dergi (journal), cilt (volume) gibi kayna tanmlayan bilgilerdir. Bu tanmlamalarn her biri eittir iaretinden sonra iki çengelli parantez arasnda yaplr (çift trnak da kullanlabilir) ve her tanmlama (sonuncusu olsa dahi) virgülle ayrlr. Yazar ad ya author={Ad Soyad} ya da author={Soyad, Ad} eklinde girilmelidir ve birden fazla yazar varsa yazarlar yukardaki yazmdan dolay virgülle deil and ile ayrlmaldr. Yazarlar ayrmak için virgül kullanrsanz yüksek ihtimalle LaTeX, yazarlarn adlar ve soyadlarn kartracaktr. Bir dier önemli nokta özel kelimeleri yazmak için kullanlan komutlar ve aksanl harfleri iki çengelli parantez içinde yazmaktr. Örnein â için {\\^a} yazlmaldr. Genel olarak sorun yaanan karakterleri iki çengelli parantez içine yazmak gerekir. Her tür için zorunlu olarak belirtilmesi gereken bilgiler ve istee bal bilgiler vardr. Bunlarn ne olduklarn tahmin etmek zor deildir. Bu konuda editörden de yararlanabilirsiniz. Örnein, .bib uzantl dosyay açp editörde Kaynakça \\(\\rightarrow\\) Tez yolunu izlerseniz aadaki listeyi yazdracaktr. @thesis{ID, author = {author}, title = {title}, type = {type}, institution = {institution}, date = {date}, OPTsubtitle = {subtitle}, OPTtitleaddon = {titleaddon}, OPTlanguage = {language}, OPTnote = {note}, OPTlocation = {location}, OPTmonth = {month}, OPTisbn = {isbn}, OPTchapter = {chapter}, OPTpages = {pages}, OPTpagetotal = {pagetotal}, OPTaddendum = {addendum}, OPTpubstate = {pubstate}, OPTdoi = {doi}, OPTeprint = {eprint}, OPTeprintclass = {eprintclass}, OPTeprinttype = {eprinttype}, OPTurl = {url}, OPTurldate = {urldate}, } Görüldüü gibi ilk alt satr zorunlu, OPT ile balayanlar istee baldr. stee bal olanlardan belirtmek istediklerinizin banda bulunan OPTyi silip tanmlamay yapabilirsiniz. Editörden yararlanmann dier bir yolu Kaynakça \\(\\rightarrow\\) Kaynakça Kayd Ekle yolunu izlemektir. Bu yolu izlediinizde aadaki pencere açlr (örnek TeXstudio editörüne aittir). Pencerenin solunda kayd eklemek istediiniz dosyay ve ortada kayt türünü belirtir, sada da kaynan bilgilerini girersiniz. Zorunlu bilgiler en üstte yer alan kaln yazlm olanlardr. 3.1.2.2 Kaynakçann yazdrlmas Kaynakçay yazdrmak için BiBTeXi kullanacaz. BiBTeXin LaTeXle standart olarak geldiini ifade etmitik. Dolaysyla bu program kullanmak için ek bir ey yapmanz gerekmez. Oluturulan .bib uzantl dosya \\bibliography komutuyla içeri aktarlr, \\bibliographystyle komutuyla da kullanlacak biçim belirtilir. \\bibliographystyle{&lt;biçim&gt;} \\bibliography{&lt;dosya&gt;} Burada yer alan &lt;dosya&gt; uzantsnn belirtilmesine gerek yoktur. Dosyann kaynakca.bib olduunu varsayarak, komut \\bibliography{kaynakca} eklinde verilir. Kullanlabilecek biçimler abbrv, acm, alpha, apalike, ieeetr, plain, siam ve unsrtdir. Biçimlerin nasl çkt verdiklerini görmek için uraya bakabilirsiniz. Atf, bütünleik kaynakçada olduu gibi \\cite komutuyla yaplr fakat bütünleik kaynakçadan farkl olarak atf yaplmayan kaynaklar yazdrlmaz. Baz kaynaklarn bu kuraldan ayr tutulmas istenirse \\nocite komutu, deikenine kaynan anahtar yazlarak \\bibliography komutundan önce verilmelidir. \\nocite{&lt;anahtar&gt;} Eer tüm kaynaklarn bu kuraldan ayr tutulmas isteniyorsa komut \\nocite{*} eklinde verilmelidir. Kaynakçann belgeye yazlmas için kaynak dosyann derlenip, BiBTeX programnn çaltrlmas ve ardndan dosyann en az iki kere daha derlenmesi gerekir. BiBTeX program, editörde Araçlar \\(\\rightarrow\\) Kaynakça yoluyla çaltrlr (klavye ksa yolu F8). Ayn ey, uçbirimde srasyla pdflatex kaynakdosya bibtex kaynakdosya pdflatex kaynakdosya pdflatex kaynakdosya komutlar çaltrlarak yaplabilir. Aada kaynak dosya örnei verilmitir. Bu dosyay derleyebilmeniz için içerii yukarda verilen kaynakca.bib dosyasnn bu dosyayla ayn dizinde olmas gerektiini unutmaynz. \\documentclass[10pt,a4paper]{article} \\usepackage[T1]{fontenc} \\usepackage[turkish]{babel} \\usepackage{dtk-logos} % \\BibTeX komutu için... \\title{Kaynakça Yönetimi 2: \\BibTeX} \\author{Zafer Acar} \\begin{document} \\maketitle Lang&#39;n kitab \\cite{lang13}, Lamport&#39;un makalesi \\cite{lamport78} ve \\LaTeX{} için Türkçe kaynak \\cite{Oetiker06} \\dots \\bibliographystyle{siam} \\bibliography{kaynakca} \\end{document} "],["dizin.html", "3.2 Dizin", " 3.2 Dizin Bilimsel bir yaptta bulunmas gereken dizin ya da dier adyla indeks, bir yaptn kii, konu, yer ad vb. bakmndan içindekileri yer numarasyla belirten ve yaptn arkasnda yer alan alfabetik listedir. LaTeXde dizin oluturabilmek için sahanla \\usepackage{makeidx} \\makeindex komutlar girilir. Birinci komut dizin için gerekli olan makeidx paketini çarr, ikinci komut ise dizinleme komutlarn etkinletirir. Dizinde gösterilmek istenen madde, \\index komutunun deikeni olarak girilir: \\index{&lt;madde&gt;} Dizin maddesi girme örnekleri aada gösterilmitir. LaTeX, kaynak dosyanz derlediinizde bu dizin maddelerini sayfa numaralaryla birlikte, kaynak dosyayla ad ayn fakat uzants .idx olan bir dosyaya kaydeder (bu dosyaya ham dosya denir). Bu dosyann makeindex programndan geçirilmesi gerekir. Bu editörde Araçlar \\(\\rightarrow\\) Dizin yoluyla yaplr. Ayn ey uçbirimde, makeindex kaynakdosya komutu girilerek yaplabilir. Dosya tekrar derlendiinde sralanm dizin belgeye yazlr. Bunun için dizinin yazlmas istenen yere \\printindex komutu verilir. Bu genelde, belgenin en sonunda \\end{document} komutundan hemen öncedir. Komutun girildii yere LaTeX, Türkçe dil paketi ekli belgelerde Dizin baln oluturur ve belgede \\index komutuyla eklenmi maddeleri srayla dizer. Program, ham dosyay ileyip dizin maddelerini abece srasna göre dizer ve .ind uzantl bir dosyaya aktarr. Ancak, Türkçe aksanl harflerle balayan kelimeler doru yerde yazlmazlar. Bu harflerin doru yere yazlmas için .ind uzantl dosyann metin editörüyle açlarak elle düzenlenmesi gerekir. Ardndan kaynak dosya derlenir. Elle düzeltmeden sonra tekrar makeindex program çaltrlrsa .ind uzantl dosya tekrar oluturulaca için elle yaplan düzeltmeler bozulur. O yüzden düzeltme en son yaplmaldr. Aksanl harflerle balayan kelimelerin doru yerde yazlmalar için aksanl madde girme komutundan faydalanlabilir. Örnein çekiç kelimesinin peine \\index{czekiç@çekiç} komutu verilirse bu kelime doru yerde dizilecektir. Burada yaplan sorun yaratan ç harfi yerine cz yazlmasdr. 3.2.1 Çoklu Dizin Birden fazla dizin oluturmak isterseniz (örnein biri normal dizin dieri de simgeler dizini) index paketini kullanabilirsiniz. Her dizin paket eklendikten ve \\makeindex komutu sahanlkta verildikten sonra \\newindex komutuyla tantlr. \\usepackage{index} \\makeindex \\newindex{normal}{ndx}{nnd}{Normal Dizin} \\newindex{simge}{sdx}{snd}{Simgeler Dizini} Komutun dört deikeni vardr. Bunlar srasyla, dizin ad (örnekte normal ve simge), oluturulacak ham dosyann uzants (örnekte .ndx ve .sdx), makeindex tarafndan ham dosyann ilenmesiyle oluturulan dosyann uzants (örnekte .nnd ve .snd) ve son olarak \\printindex komutuyla yazdrlacak balktr (örnekte Normal Dizin ve Simgeler Dizini). Buradaki uzantlar varsaylan .idx ve .ind uzantlardan farkl olmaldr. Ardndan bir kelime ya da simgeyi dizine eklemek için, eklemek istenilen dizine göre \\index komutu köeli parantezler içinde dizin ad belirtilerek kullanlr. \\index[normal]{kuvvet} \\index[simge]{F@$\\vec{F}$} Birinci komut, kuvvet kelimesini normal dizine, ikinci komut \\(\\vec{F}\\) simgesini simgeler dizinine ekler. Belge derlendikten sonra iki tane \\makeindex komutu uçbirimde, makeindex kaynakdosya.ndx -o kaynakdosya.nnd makeindex kaynakdosya.sdx -o kaynakdosya.snd eklinde verilir. Belgenizde dizinlerin yazlmas istenen yere de \\printindex[normal] \\printindex[simge] komutlar verilir. Ardndan belge tekrar derlenerek dizinler yazdrlr. Çoklu dizin için dier bir seçenek multind paketini kullanmaktr. Görece index paketine göre daha pratiktir. Sahanla \\usepackage{multind} \\makeindex{normal} \\makeindex{simge} komutlaryla normal ve simge adnda iki dizin tanmlanr. Yine dizine yazlmas istenen maddeler \\index komutundan önce çengelli parantezler içinde dizin ad belirtilerek girilir. \\index{normal}{kuvvet} \\index{simge}{F@$\\vec{F}$} Bu defa makeindex program uçbirimde makeindex normal makeindex simge komutlaryla çaltrlr. Yine \\printindex komutlar dizinlerin eklenmesi istenen yere \\printindex{normal}{Normal Dizin} \\printindex{simge}{Simgeler Dizini} eklinde verilir. 3.2.2 Dizinin çindekiler tablosuna yazlmas Dizini çindekiler tablosuna yazmak için \\printindex komutunun peine book ve report snflarnda \\addcontentsline komutu, \\addcontentsline{toc}{chapter}{\\indexname} eklinde, article snfnda ise \\addcontentsline{toc}{section}{\\indexname} eklinde verilmelidir. Çoklu dizin oluturulmusa, book ve report snflarnda \\printindex{normal}{Normal Dizin} \\addcontentsline{toc}{chapter}{Normal Dizin} \\printindex{simge}{Simgeler Dizini} \\addcontentsline{toc}{chapter}{Simgeler Dizini} eklinde, article snfnda ise komutlardaki chapter yazan yere section yazarak verilmelidir. "],["kaynakça-1.html", "Kaynakça", " Kaynakça "],["404.html", "", " Tüh! Bir eyler ters gitti"]]
